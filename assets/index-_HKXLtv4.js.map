{"version":3,"file":"index-_HKXLtv4.js","sources":["../../src/effects/particle-presets.ts","../../src/particle-system.ts","../../src/i18n.ts","../../src/effects/combo-system.ts","../../src/effects/special-moves.ts","../../src/main-complete.ts"],"sourcesContent":["/**\r\n * 粒子效果預設庫\r\n * 提供多種視覺特效預設配置：雪花、火焰、閃電、黑洞等\r\n */\r\n\r\nexport type ParticlePresetType = 'snowflake' | 'fire' | 'lightning' | 'blackhole' | 'explosion' | 'magic' | 'storm' | 'supernova' | 'cosmic_burst';\r\n\r\nexport interface ParticlePresetConfig {\r\n  type: ParticlePresetType;\r\n  colors: string[];\r\n  behavior: ParticleBehavior;\r\n  physics: ParticlePhysics;\r\n  visual: ParticleVisual;\r\n  animation: ParticleAnimation;\r\n  spawning: ParticleSpawning;\r\n}\r\n\r\nexport interface ParticleBehavior {\r\n  movement: 'float' | 'rise' | 'fall' | 'spiral' | 'chain' | 'implode' | 'explode';\r\n  gravity: number;\r\n  drag: number;\r\n  turbulence: number;\r\n}\r\n\r\nexport interface ParticlePhysics {\r\n  velocity: { min: number; max: number };\r\n  acceleration: { x: number; y: number };\r\n  mass: number;\r\n  elasticity: number;\r\n}\r\n\r\nexport interface ParticleVisual {\r\n  size: { min: number; max: number };\r\n  opacity: { start: number; end: number };\r\n  scale: { start: number; end: number };\r\n  rotation: { enabled: boolean; speed: number };\r\n  glow: { enabled: boolean; intensity: number };\r\n}\r\n\r\nexport interface ParticleAnimation {\r\n  lifespan: { min: number; max: number };\r\n  fadeIn: number;\r\n  fadeOut: number;\r\n  pulsing: { enabled: boolean; frequency: number };\r\n}\r\n\r\nexport interface ParticleSpawning {\r\n  count: { min: number; max: number };\r\n  delay: { min: number; max: number };\r\n  spread: { angle: number; radius: number };\r\n  burst: boolean;\r\n}\r\n\r\n/**\r\n * 預設效果配置\r\n */\r\nexport const PARTICLE_PRESETS: Record<ParticlePresetType, ParticlePresetConfig> = {\r\n  /**\r\n   * ❄️ 雪花效果 - 優雅飄落 (C級基礎效果)\r\n   */\r\n  snowflake: {\r\n    type: 'snowflake',\r\n    colors: ['#ffffff', '#e6f3ff', '#cce7ff', '#b3d9ff', '#f0f8ff'],\r\n    behavior: {\r\n      movement: 'float',\r\n      gravity: 30,\r\n      drag: 0.95,\r\n      turbulence: 0.3\r\n    },\r\n    physics: {\r\n      velocity: { min: 20, max: 60 },\r\n      acceleration: { x: 0, y: 30 },\r\n      mass: 0.5,\r\n      elasticity: 0.1\r\n    },\r\n    visual: {\r\n      size: { min: 1, max: 3 },  // C級基礎尺寸\r\n      opacity: { start: 0.6, end: 0.1 },\r\n      scale: { start: 0.8, end: 0.2 },\r\n      rotation: { enabled: true, speed: 0.02 },\r\n      glow: { enabled: false, intensity: 0 }\r\n    },\r\n    animation: {\r\n      lifespan: { min: 800, max: 1200 },  // 縮短生命週期\r\n      fadeIn: 100,\r\n      fadeOut: 400,\r\n      pulsing: { enabled: false, frequency: 0 }\r\n    },\r\n    spawning: {\r\n      count: { min: 30, max: 60 },  // C級: 30-60\r\n      delay: { min: 0, max: 50 },\r\n      spread: { angle: Math.PI * 0.2, radius: 40 },\r\n      burst: false\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 🔥 火焰效果 - 熾熱燃燒 (S級效果)\r\n   */\r\n  fire: {\r\n    type: 'fire',\r\n    colors: ['#dda0dd', '#e6b8ea', '#d8bfd8', '#9932cc', '#ba55d3'],\r\n    behavior: {\r\n      movement: 'rise',\r\n      gravity: -100,\r\n      drag: 0.92,\r\n      turbulence: 0.8\r\n    },\r\n    physics: {\r\n      velocity: { min: 80, max: 200 },\r\n      acceleration: { x: 0, y: -150 },\r\n      mass: 0.3,\r\n      elasticity: 0\r\n    },\r\n    visual: {\r\n      size: { min: 5, max: 12 },  // S級特大型尺寸\r\n      opacity: { start: 0.9, end: 0.0 },\r\n      scale: { start: 0.5, end: 1.6 },\r\n      rotation: { enabled: false, speed: 0 },\r\n      glow: { enabled: true, intensity: 1.2 }\r\n    },\r\n    animation: {\r\n      lifespan: { min: 800, max: 1500 },\r\n      fadeIn: 50,\r\n      fadeOut: 600,\r\n      pulsing: { enabled: true, frequency: 0.1 }\r\n    },\r\n    spawning: {\r\n      count: { min: 140, max: 170 },  // S級: 140-170\r\n      delay: { min: 0, max: 150 },\r\n      spread: { angle: Math.PI * 0.4, radius: 40 },\r\n      burst: true\r\n    }\r\n  },\r\n\r\n  /**\r\n   * ⚡ 閃電效果 - 電光鏈鎖 (SS級效果)\r\n   */\r\n  lightning: {\r\n    type: 'lightning',\r\n    colors: ['#ffff00', '#ffffff', '#00ffff', '#87ceeb', '#e0ffff'],\r\n    behavior: {\r\n      movement: 'chain',\r\n      gravity: 0,\r\n      drag: 0.99,\r\n      turbulence: 1.5\r\n    },\r\n    physics: {\r\n      velocity: { min: 300, max: 600 },\r\n      acceleration: { x: 0, y: 0 },\r\n      mass: 0.1,\r\n      elasticity: 0\r\n    },\r\n    visual: {\r\n      size: { min: 8, max: 16 },  // SS級超大型尺寸\r\n      opacity: { start: 1.0, end: 0.0 },\r\n      scale: { start: 1.0, end: 1.0 },\r\n      rotation: { enabled: false, speed: 0 },\r\n      glow: { enabled: true, intensity: 2.0 }\r\n    },\r\n    animation: {\r\n      lifespan: { min: 100, max: 300 },\r\n      fadeIn: 0,\r\n      fadeOut: 150,\r\n      pulsing: { enabled: true, frequency: 0.5 }\r\n    },\r\n    spawning: {\r\n      count: { min: 180, max: 210 },  // SS級: 180-210\r\n      delay: { min: 0, max: 50 },\r\n      spread: { angle: Math.PI * 2, radius: 0 },\r\n      burst: true\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 🌀 黑洞效果 - 螺旋吞噬 (SSS級傳說效果)\r\n   */\r\n  blackhole: {\r\n    type: 'blackhole',\r\n    colors: ['#000000', '#4b0082', '#9400d3', '#8b00ff', '#1a1a1a'],\r\n    behavior: {\r\n      movement: 'implode',\r\n      gravity: 800,\r\n      drag: 1.02, // 反向阻力，加速內吸\r\n      turbulence: 0.1\r\n    },\r\n    physics: {\r\n      velocity: { min: 100, max: 300 },\r\n      acceleration: { x: 0, y: 0 },\r\n      mass: 1.0,\r\n      elasticity: 0\r\n    },\r\n    visual: {\r\n      size: { min: 12, max: 20 },  // SSS級傳說尺寸\r\n      opacity: { start: 0.8, end: 1.0 },\r\n      scale: { start: 1.5, end: 0.1 },\r\n      rotation: { enabled: true, speed: 0.15 },\r\n      glow: { enabled: true, intensity: 2.5 }\r\n    },\r\n    animation: {\r\n      lifespan: { min: 1500, max: 2500 },\r\n      fadeIn: 100,\r\n      fadeOut: 500,\r\n      pulsing: { enabled: false, frequency: 0 }\r\n    },\r\n    spawning: {\r\n      count: { min: 220, max: 300 },  // SSS級: 220-300\r\n      delay: { min: 0, max: 300 },\r\n      spread: { angle: Math.PI * 2, radius: 120 },\r\n      burst: false\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 💥 爆炸效果 - 劇烈衝擊 (A級效果)\r\n   */\r\n  explosion: {\r\n    type: 'explosion',\r\n    colors: ['#87ceeb', '#add8e6', '#b0e0e6', '#87cefa', '#00bfff'],\r\n    behavior: {\r\n      movement: 'explode',\r\n      gravity: 50,\r\n      drag: 0.88,\r\n      turbulence: 0.6\r\n    },\r\n    physics: {\r\n      velocity: { min: 150, max: 300 },  // 降低速度\r\n      acceleration: { x: 0, y: 100 },\r\n      mass: 0.8,\r\n      elasticity: 0.3\r\n    },\r\n    visual: {\r\n      size: { min: 3, max: 8 },  // A級大型尺寸\r\n      opacity: { start: 0.9, end: 0.0 },\r\n      scale: { start: 0.3, end: 1.2 },\r\n      rotation: { enabled: true, speed: 0.1 },\r\n      glow: { enabled: true, intensity: 1.0 }\r\n    },\r\n    animation: {\r\n      lifespan: { min: 500, max: 1000 },  // 縮短生命週期\r\n      fadeIn: 20,\r\n      fadeOut: 300,\r\n      pulsing: { enabled: false, frequency: 0 }\r\n    },\r\n    spawning: {\r\n      count: { min: 110, max: 130 },  // A級: 110-130\r\n      delay: { min: 0, max: 30 },\r\n      spread: { angle: Math.PI * 2, radius: 0 },\r\n      burst: true\r\n    }\r\n  },\r\n\r\n  /**\r\n   * ✨ 魔法效果 - 神秘光芒 (B級效果)\r\n   */\r\n  magic: {\r\n    type: 'magic',\r\n    colors: ['#90ee90', '#98fb98', '#b4ffb4', '#7fff00', '#adff2f'],\r\n    behavior: {\r\n      movement: 'float',\r\n      gravity: -20,\r\n      drag: 0.98,\r\n      turbulence: 0.4\r\n    },\r\n    physics: {\r\n      velocity: { min: 30, max: 120 },\r\n      acceleration: { x: 0, y: -50 },\r\n      mass: 0.2,\r\n      elasticity: 0.8\r\n    },\r\n    visual: {\r\n      size: { min: 2, max: 5 },  // B級中型尺寸\r\n      opacity: { start: 0.7, end: 0.1 },\r\n      scale: { start: 0.6, end: 1.0 },\r\n      rotation: { enabled: true, speed: 0.05 },\r\n      glow: { enabled: true, intensity: 0.6 }\r\n    },\r\n    animation: {\r\n      lifespan: { min: 1000, max: 1500 },  // 縮短生命週期\r\n      fadeIn: 200,\r\n      fadeOut: 400,\r\n      pulsing: { enabled: true, frequency: 0.08 }\r\n    },\r\n    spawning: {\r\n      count: { min: 70, max: 100 },  // B級: 70-100\r\n      delay: { min: 0, max: 100 },\r\n      spread: { angle: Math.PI * 0.4, radius: 50 },\r\n      burst: false\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 🌪️ 風暴效果 - 狂亂旋渦\r\n   */\r\n  storm: {\r\n    type: 'storm',\r\n    colors: ['#708090', '#778899', '#b0c4de', '#87ceeb', '#4682b4'],\r\n    behavior: {\r\n      movement: 'spiral',\r\n      gravity: 20,\r\n      drag: 0.96,\r\n      turbulence: 1.2\r\n    },\r\n    physics: {\r\n      velocity: { min: 150, max: 350 },\r\n      acceleration: { x: 0, y: 50 },\r\n      mass: 0.6,\r\n      elasticity: 0.2\r\n    },\r\n    visual: {\r\n      size: { min: 2, max: 8 },\r\n      opacity: { start: 0.7, end: 0.2 },\r\n      scale: { start: 1.0, end: 0.5 },\r\n      rotation: { enabled: true, speed: 0.12 },\r\n      glow: { enabled: false, intensity: 0 }\r\n    },\r\n    animation: {\r\n      lifespan: { min: 1200, max: 2000 },\r\n      fadeIn: 150,\r\n      fadeOut: 500,\r\n      pulsing: { enabled: false, frequency: 0 }\r\n    },\r\n    spawning: {\r\n      count: { min: 60, max: 120 },\r\n      delay: { min: 0, max: 100 },\r\n      spread: { angle: Math.PI * 2, radius: 100 },\r\n      burst: false\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 🌟 超新星效果 - 橘色爆發 (SS級效果)\r\n   */\r\n  supernova: {\r\n    type: 'supernova',\r\n    colors: ['#ff8c00', '#ffa500', '#ff7f00', '#ff6347', '#ff4500'],\r\n    behavior: {\r\n      movement: 'explode',\r\n      gravity: -50,\r\n      drag: 0.85,\r\n      turbulence: 1.8\r\n    },\r\n    physics: {\r\n      velocity: { min: 200, max: 400 },\r\n      acceleration: { x: 0, y: -100 },\r\n      mass: 0.4,\r\n      elasticity: 0.1\r\n    },\r\n    visual: {\r\n      size: { min: 4, max: 9 },  // 減少至接近A級大小\r\n      opacity: { start: 1.0, end: 0.0 },\r\n      scale: { start: 0.4, end: 1.3 },  // 減少結束縮放\r\n      rotation: { enabled: true, speed: 0.2 },\r\n      glow: { enabled: true, intensity: 2.2 }\r\n    },\r\n    animation: {\r\n      lifespan: { min: 1000, max: 1800 },\r\n      fadeIn: 50,\r\n      fadeOut: 800,\r\n      pulsing: { enabled: true, frequency: 0.15 }\r\n    },\r\n    spawning: {\r\n      count: { min: 120, max: 150 },  // 減少至接近A級數量\r\n      delay: { min: 0, max: 80 },\r\n      spread: { angle: Math.PI * 2, radius: 0 },\r\n      burst: true\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 🌌 宇宙爆發效果 - 金色光輝 (SSS級傳說效果)\r\n   */\r\n  cosmic_burst: {\r\n    type: 'cosmic_burst',\r\n    colors: ['#ffd700', '#ffef94', '#fff68f', '#ffffe0', '#fffacd'],\r\n    behavior: {\r\n      movement: 'explode',\r\n      gravity: -80,\r\n      drag: 0.88,\r\n      turbulence: 2.5\r\n    },\r\n    physics: {\r\n      velocity: { min: 300, max: 600 },\r\n      acceleration: { x: 0, y: -200 },\r\n      mass: 0.2,\r\n      elasticity: 0\r\n    },\r\n    visual: {\r\n      size: { min: 5, max: 10 },  // 減少至略大於A級\r\n      opacity: { start: 1.0, end: 0.0 },\r\n      scale: { start: 0.2, end: 1.4 },  // 大幅減少結束縮放\r\n      rotation: { enabled: true, speed: 0.25 },\r\n      glow: { enabled: true, intensity: 3.0 }\r\n    },\r\n    animation: {\r\n      lifespan: { min: 1500, max: 2800 },\r\n      fadeIn: 100,\r\n      fadeOut: 1000,\r\n      pulsing: { enabled: true, frequency: 0.2 }\r\n    },\r\n    spawning: {\r\n      count: { min: 130, max: 160 },  // 大幅減少至接近A級\r\n      delay: { min: 0, max: 200 },\r\n      spread: { angle: Math.PI * 2, radius: 30 },  // 大幅減少擴散範圍\r\n      burst: true\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * 根據遊戲等級獲取建議的粒子效果\r\n */\r\nexport function getPresetForGrade(grade: string): ParticlePresetType {\r\n  switch (grade) {\r\n    case 'SSS':\r\n      return 'cosmic_burst';\r\n    case 'SS':\r\n      return 'supernova';\r\n    case 'S':\r\n      return 'fire';\r\n    case 'A':\r\n      return 'explosion';\r\n    case 'B':\r\n      return 'magic';\r\n    case 'C':\r\n    default:\r\n      return 'snowflake';\r\n  }\r\n}\r\n\r\n/**\r\n * 根據特殊情況獲取粒子效果\r\n */\r\nexport function getPresetForSpecialMove(type: 'corner' | 'massive' | 'comeback' | 'domination' | 'combo'): ParticlePresetType {\r\n  switch (type) {\r\n    case 'corner':\r\n      return 'explosion';\r\n    case 'massive':\r\n      return 'storm';\r\n    case 'comeback':\r\n      return 'fire';\r\n    case 'domination':\r\n      return 'blackhole';\r\n    case 'combo':\r\n      return 'lightning';\r\n    default:\r\n      return 'magic';\r\n  }\r\n}\r\n\r\n/**\r\n * 混合兩種預設效果\r\n */\r\nexport function blendPresets(preset1: ParticlePresetType, preset2: ParticlePresetType, ratio: number = 0.5): ParticlePresetConfig {\r\n  const config1 = PARTICLE_PRESETS[preset1];\r\n  const config2 = PARTICLE_PRESETS[preset2];\r\n\r\n  return {\r\n    type: preset1,\r\n    colors: [...config1.colors, ...config2.colors],\r\n    behavior: {\r\n      movement: ratio > 0.5 ? config1.behavior.movement : config2.behavior.movement,\r\n      gravity: config1.behavior.gravity * ratio + config2.behavior.gravity * (1 - ratio),\r\n      drag: config1.behavior.drag * ratio + config2.behavior.drag * (1 - ratio),\r\n      turbulence: config1.behavior.turbulence * ratio + config2.behavior.turbulence * (1 - ratio)\r\n    },\r\n    physics: {\r\n      velocity: {\r\n        min: Math.min(config1.physics.velocity.min, config2.physics.velocity.min),\r\n        max: Math.max(config1.physics.velocity.max, config2.physics.velocity.max)\r\n      },\r\n      acceleration: {\r\n        x: config1.physics.acceleration.x * ratio + config2.physics.acceleration.x * (1 - ratio),\r\n        y: config1.physics.acceleration.y * ratio + config2.physics.acceleration.y * (1 - ratio)\r\n      },\r\n      mass: config1.physics.mass * ratio + config2.physics.mass * (1 - ratio),\r\n      elasticity: config1.physics.elasticity * ratio + config2.physics.elasticity * (1 - ratio)\r\n    },\r\n    visual: {\r\n      size: {\r\n        min: Math.min(config1.visual.size.min, config2.visual.size.min),\r\n        max: Math.max(config1.visual.size.max, config2.visual.size.max)\r\n      },\r\n      opacity: {\r\n        start: Math.max(config1.visual.opacity.start, config2.visual.opacity.start),\r\n        end: Math.min(config1.visual.opacity.end, config2.visual.opacity.end)\r\n      },\r\n      scale: {\r\n        start: config1.visual.scale.start * ratio + config2.visual.scale.start * (1 - ratio),\r\n        end: config1.visual.scale.end * ratio + config2.visual.scale.end * (1 - ratio)\r\n      },\r\n      rotation: {\r\n        enabled: config1.visual.rotation.enabled || config2.visual.rotation.enabled,\r\n        speed: config1.visual.rotation.speed * ratio + config2.visual.rotation.speed * (1 - ratio)\r\n      },\r\n      glow: {\r\n        enabled: config1.visual.glow.enabled || config2.visual.glow.enabled,\r\n        intensity: Math.max(config1.visual.glow.intensity, config2.visual.glow.intensity)\r\n      }\r\n    },\r\n    animation: {\r\n      lifespan: {\r\n        min: Math.min(config1.animation.lifespan.min, config2.animation.lifespan.min),\r\n        max: Math.max(config1.animation.lifespan.max, config2.animation.lifespan.max)\r\n      },\r\n      fadeIn: Math.max(config1.animation.fadeIn, config2.animation.fadeIn),\r\n      fadeOut: Math.max(config1.animation.fadeOut, config2.animation.fadeOut),\r\n      pulsing: {\r\n        enabled: config1.animation.pulsing.enabled || config2.animation.pulsing.enabled,\r\n        frequency: config1.animation.pulsing.frequency * ratio + config2.animation.pulsing.frequency * (1 - ratio)\r\n      }\r\n    },\r\n    spawning: {\r\n      count: {\r\n        min: Math.max(config1.spawning.count.min, config2.spawning.count.min),\r\n        max: Math.max(config1.spawning.count.max, config2.spawning.count.max)\r\n      },\r\n      delay: {\r\n        min: Math.min(config1.spawning.delay.min, config2.spawning.delay.min),\r\n        max: Math.max(config1.spawning.delay.max, config2.spawning.delay.max)\r\n      },\r\n      spread: {\r\n        angle: Math.max(config1.spawning.spread.angle, config2.spawning.spread.angle),\r\n        radius: Math.max(config1.spawning.spread.radius, config2.spawning.spread.radius)\r\n      },\r\n      burst: config1.spawning.burst || config2.spawning.burst\r\n    }\r\n  };\r\n}","/**\r\n * Particle Effects System for Super Reversi\r\n *\r\n * Creates visual effects based on move quality grades\r\n */\r\n\r\nimport { PARTICLE_PRESETS, getPresetForGrade, type ParticlePresetConfig } from './effects/particle-presets';\r\n\r\nexport type Grade = 'C' | 'B' | 'A' | 'S' | 'SS' | 'SSS';\r\n\r\nexport interface SpecialEffect {\r\n  corner?: boolean;\r\n  edge?: boolean;\r\n  massive?: boolean;  // 10+ flips\r\n  chain?: boolean;    // Triggered by previous move\r\n  firstMove?: boolean;\r\n  comeback?: boolean; // When losing player makes good move\r\n  domination?: boolean; // When winning player extends lead\r\n}\r\n\r\nexport interface Particle {\r\n  x: number;\r\n  y: number;\r\n  vx: number;\r\n  vy: number;\r\n  life: number;\r\n  maxLife: number;\r\n  size: number;\r\n  color: string;\r\n  alpha: number;\r\n  type: 'circle' | 'star' | 'spark' | 'text';\r\n  text?: string; // 用於文字粒子\r\n  fontSize?: number; // 文字大小\r\n}\r\n\r\nexport class ParticleSystem {\r\n  private canvas: HTMLCanvasElement;\r\n  private ctx: CanvasRenderingContext2D;\r\n  private particles: Particle[] = [];\r\n  private animationId: number | null = null;\r\n  private lastTime = 0;\r\n  private enabled = true;\r\n\r\n  constructor() {\r\n    // Create canvas for particles\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.id = 'particle-canvas';\r\n    this.canvas.style.position = 'absolute';\r\n    this.canvas.style.top = '0';\r\n    this.canvas.style.left = '0';\r\n    this.canvas.style.pointerEvents = 'none';\r\n    this.canvas.style.zIndex = '100';\r\n\r\n    const ctx = this.canvas.getContext('2d');\r\n    if (!ctx) throw new Error('Could not get canvas context');\r\n    this.ctx = ctx;\r\n  }\r\n  \r\n  initialize(container: HTMLElement): void {\r\n    // Set canvas size\r\n    const rect = container.getBoundingClientRect();\r\n    this.canvas.width = rect.width;\r\n    this.canvas.height = rect.height;\r\n\r\n    // Add to container\r\n    container.style.position = 'relative';\r\n    container.appendChild(this.canvas);\r\n\r\n    // Start animation loop only if enabled\r\n    if (this.enabled) {\r\n      this.startAnimation();\r\n    }\r\n  }\r\n\r\n  setEnabled(enabled: boolean): void {\r\n    this.enabled = enabled;\r\n    if (enabled) {\r\n      if (!this.animationId) {\r\n        this.startAnimation();\r\n      }\r\n    } else {\r\n      this.stopAnimation();\r\n      this.clearParticles();\r\n    }\r\n  }\r\n\r\n  private stopAnimation(): void {\r\n    if (this.animationId) {\r\n      cancelAnimationFrame(this.animationId);\r\n      this.animationId = null;\r\n    }\r\n  }\r\n\r\n  private clearParticles(): void {\r\n    this.particles = [];\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n  \r\n  private startAnimation(): void {\r\n    const animate = (time: number) => {\r\n      const deltaTime = time - this.lastTime;\r\n      this.lastTime = time;\r\n      \r\n      this.update(deltaTime / 1000); // Convert to seconds\r\n      this.render();\r\n      \r\n      this.animationId = requestAnimationFrame(animate);\r\n    };\r\n    \r\n    this.animationId = requestAnimationFrame(animate);\r\n  }\r\n  \r\n  private update(deltaTime: number): void {\r\n    // Update all particles\r\n    for (let i = this.particles.length - 1; i >= 0; i--) {\r\n      const p = this.particles[i];\r\n      if (!p) continue;\r\n      \r\n      // Update position\r\n      p.x += p.vx * deltaTime;\r\n      p.y += p.vy * deltaTime;\r\n      \r\n      // Update life\r\n      p.life -= deltaTime;\r\n      \r\n      // Update alpha based on life\r\n      p.alpha = Math.max(0, p.life / p.maxLife);\r\n      \r\n      // Apply gravity for some effects\r\n      if (p.type === 'spark') {\r\n        p.vy += 200 * deltaTime; // Gravity\r\n      }\r\n      \r\n      // Remove dead particles\r\n      if (p.life <= 0) {\r\n        this.particles.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n  \r\n  private render(): void {\r\n    // Clear canvas\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    \r\n    // Draw all particles\r\n    for (const p of this.particles) {\r\n      this.ctx.save();\r\n      this.ctx.globalAlpha = p.alpha;\r\n      \r\n      if (p.type === 'circle') {\r\n        this.drawCircle(p);\r\n      } else if (p.type === 'star') {\r\n        this.drawStar(p);\r\n      } else if (p.type === 'spark') {\r\n        this.drawSpark(p);\r\n      } else if (p.type === 'text') {\r\n        this.drawText(p);\r\n      }\r\n      \r\n      this.ctx.restore();\r\n    }\r\n  }\r\n  \r\n  private drawCircle(p: Particle): void {\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\r\n    this.ctx.fillStyle = p.color;\r\n    this.ctx.fill();\r\n    \r\n    // Add glow effect\r\n    this.ctx.shadowBlur = 10;\r\n    this.ctx.shadowColor = p.color;\r\n    this.ctx.fill();\r\n  }\r\n  \r\n  private drawStar(p: Particle): void {\r\n    const spikes = 5;\r\n    const outerRadius = p.size;\r\n    const innerRadius = p.size * 0.5;\r\n    \r\n    this.ctx.beginPath();\r\n    this.ctx.translate(p.x, p.y);\r\n    \r\n    for (let i = 0; i < spikes * 2; i++) {\r\n      const radius = i % 2 === 0 ? outerRadius : innerRadius;\r\n      const angle = (i * Math.PI) / spikes;\r\n      const x = Math.cos(angle) * radius;\r\n      const y = Math.sin(angle) * radius;\r\n      \r\n      if (i === 0) {\r\n        this.ctx.moveTo(x, y);\r\n      } else {\r\n        this.ctx.lineTo(x, y);\r\n      }\r\n    }\r\n    \r\n    this.ctx.closePath();\r\n    this.ctx.fillStyle = p.color;\r\n    this.ctx.fill();\r\n    \r\n    this.ctx.translate(-p.x, -p.y);\r\n  }\r\n  \r\n  private drawSpark(p: Particle): void {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(p.x, p.y);\r\n    this.ctx.lineTo(p.x - p.vx * 0.1, p.y - p.vy * 0.1);\r\n    this.ctx.strokeStyle = p.color;\r\n    this.ctx.lineWidth = p.size;\r\n    this.ctx.lineCap = 'round';\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  private drawText(p: Particle): void {\r\n    if (!p.text || !p.fontSize) return;\r\n\r\n    // 設定文字樣式\r\n    this.ctx.font = `bold ${p.fontSize}px Arial, sans-serif`;\r\n    this.ctx.textAlign = 'center';\r\n    this.ctx.textBaseline = 'middle';\r\n    this.ctx.fillStyle = p.color;\r\n\r\n    // 新增發光效果\r\n    this.ctx.shadowBlur = 15;\r\n    this.ctx.shadowColor = p.color;\r\n\r\n    // 新增描邊效果讓文字更突出\r\n    this.ctx.strokeStyle = 'rgba(0, 0, 0, 0.8)';\r\n    this.ctx.lineWidth = 3;\r\n    this.ctx.strokeText(p.text, p.x, p.y);\r\n\r\n    // 填充文字\r\n    this.ctx.fillText(p.text, p.x, p.y);\r\n  }\r\n  \r\n  // Enhanced move grade calculation with special effects\r\n  calculateGrade(flippedCount: number, position: number, specialEffects?: SpecialEffect): Grade {\r\n    // Corner positions are special\r\n    const isCorner = position === 0 || position === 7 || position === 56 || position === 63;\r\n\r\n    // Edge positions (not corners)\r\n    const row = Math.floor(position / 8);\r\n    const col = position % 8;\r\n    const isEdge = row === 0 || row === 7 || col === 0 || col === 7;\r\n\r\n    let score = flippedCount * 10;\r\n\r\n    // Bonus for strategic positions\r\n    if (isCorner) score += 60;\r\n    else if (isEdge) score += 20;\r\n\r\n    // Special bonuses\r\n    if (specialEffects?.massive) score += 40;      // 10+ flips\r\n    if (specialEffects?.chain) score += 30;       // Chain reaction\r\n    if (specialEffects?.comeback) score += 25;    // Comeback move\r\n    if (specialEffects?.domination) score += 20;  // Domination move\r\n    if (specialEffects?.firstMove) score -= 10;   // First moves are usually basic\r\n\r\n    // Adjusted grading system for balanced effects\r\n    if (score >= 100 || flippedCount >= 15) return 'SSS';  // LEGENDARY (rare)\r\n    if (score >= 70 || flippedCount >= 10) return 'SS';   // MYTHICAL\r\n    if (score >= 50 || flippedCount >= 7) return 'S';     // EPIC\r\n    if (score >= 30 || flippedCount >= 5) return 'A';     // GREAT\r\n    if (score >= 15 || flippedCount >= 3) return 'B';     // GOOD\r\n    return 'C';                                            // BASIC\r\n  }\r\n  \r\n  // Enhanced trigger system with more variations - now supports directional particles\r\n  triggerMoveEffect(x: number, y: number, grade: Grade, flippedCount: number, specialEffects?: SpecialEffect, flippedPositions?: Array<{x: number, y: number}>): void {\r\n    if (!this.enabled) return;\r\n\r\n    // 首先創建飄起的等級文字\r\n    this.createFloatingGradeText(x, y, grade);\r\n\r\n    // Use new preset system for more balanced effects with directional particles\r\n    this.createPresetEffect(x, y, grade, flippedCount, specialEffects, flippedPositions);\r\n\r\n    // 保留舊的複雜特效作為額外加強 (根據等級觸發)\r\n    if (grade === 'SSS' && flippedCount >= 15) {\r\n      // 只在超高級移動時添加額外特效\r\n      setTimeout(() => this.createSSSEffect(x, y, flippedCount, specialEffects, flippedPositions), 200);\r\n    } else if (grade === 'SS' && flippedCount >= 10) {\r\n      setTimeout(() => this.createSSEffect(x, y, flippedCount, specialEffects, flippedPositions), 150);\r\n    } else if (grade === 'S' && flippedCount >= 7) {\r\n      setTimeout(() => this.createSEffect(x, y, flippedCount, specialEffects, flippedPositions), 100);\r\n    } else if (grade === 'A' && flippedCount >= 5) {\r\n      setTimeout(() => this.createAEffect(x, y, flippedCount, flippedPositions), 50);\r\n    }\r\n  }\r\n\r\n  // 使用預設配置創建特效 - 支持方向性粒子\r\n  private createPresetEffect(x: number, y: number, grade: Grade, flippedCount: number, specialEffects?: SpecialEffect, flippedPositions?: Array<{x: number, y: number}>): void {\r\n    const presetType = getPresetForGrade(grade);\r\n    const preset = PARTICLE_PRESETS[presetType];\r\n\r\n    if (!preset) {\r\n      console.warn(`No preset found for grade ${grade}`);\r\n      return;\r\n    }\r\n\r\n    console.log(`🎨 ${grade} 級移動特效: ${presetType} (${flippedCount} 翻轉)`);\r\n\r\n    // 計算翻轉方向向量\r\n    const flipDirections = this.calculateFlipDirections(x, y, flippedPositions);\r\n\r\n    // 根據翻轉數量調整粒子數量\r\n    const intensityMultiplier = Math.min(1 + (flippedCount - 1) * 0.1, 2.0);\r\n    const particleCount = Math.floor(\r\n      (preset.spawning.count.min + Math.random() * (preset.spawning.count.max - preset.spawning.count.min)) * intensityMultiplier\r\n    );\r\n\r\n    // 創建預設效果的粒子\r\n    for (let i = 0; i < particleCount; i++) {\r\n      setTimeout(() => {\r\n        this.createPresetParticle(x, y, preset, i, particleCount, flipDirections);\r\n      }, Math.random() * (preset.spawning.delay.max - preset.spawning.delay.min) + preset.spawning.delay.min);\r\n    }\r\n\r\n    // 特殊效果增強\r\n    if (specialEffects?.corner && grade !== 'C') {\r\n      this.addCornerEnhancement(x, y, preset, flipDirections);\r\n    }\r\n    if (specialEffects?.massive && flippedCount >= 8) {\r\n      this.addMassiveEnhancement(x, y, preset, flipDirections);\r\n    }\r\n  }\r\n\r\n  // 計算翻轉方向向量\r\n  private calculateFlipDirections(sourceX: number, sourceY: number, flippedPositions?: Array<{x: number, y: number}>): Array<{angle: number, distance: number}> {\r\n    if (!flippedPositions || flippedPositions.length === 0) {\r\n      // 如果沒有翻轉位置，返回8個均勻分布的方向\r\n      return Array.from({length: 8}, (_, i) => ({\r\n        angle: (i / 8) * Math.PI * 2,\r\n        distance: 100\r\n      }));\r\n    }\r\n\r\n    // 計算從源點到每個翻轉位置的方向和距離\r\n    return flippedPositions.map(pos => {\r\n      const dx = pos.x - sourceX;\r\n      const dy = pos.y - sourceY;\r\n      const distance = Math.sqrt(dx * dx + dy * dy);\r\n      const angle = Math.atan2(dy, dx);\r\n\r\n      return {\r\n        angle,\r\n        distance: Math.max(distance, 50) // 最小距離50px\r\n      };\r\n    });\r\n  }\r\n\r\n  // 創建預設粒子 - 支持方向性發射\r\n  private createPresetParticle(x: number, y: number, preset: ParticlePresetConfig, index: number, total: number, flipDirections?: Array<{angle: number, distance: number}>): void {\r\n    const colors = preset.colors;\r\n    const color = colors[Math.floor(Math.random() * colors.length)] || colors[0] || '#ffffff';\r\n\r\n    // 計算角度和速度 - 支持方向性發射\r\n    let angle: number;\r\n    let speed: number;\r\n\r\n    // 如果有翻轉方向，使用方向性發射\r\n    if (flipDirections && flipDirections.length > 0) {\r\n      // 根據粒子索引選擇翻轉方向\r\n      const directionIndex = Math.floor((index / total) * flipDirections.length);\r\n      const direction = flipDirections[directionIndex] || flipDirections[0];\r\n\r\n      if (direction) {\r\n        // 在選定方向的基礎上添加一些隨機偏移\r\n        const baseAngle = direction.angle;\r\n        const spreadAngle = preset.spawning.spread.angle || (Math.PI / 6); // 30度默認擴散角\r\n        angle = baseAngle + (Math.random() - 0.5) * spreadAngle;\r\n      } else {\r\n        // Fallback if no direction found\r\n        angle = Math.random() * Math.PI * 2;\r\n      }\r\n\r\n      speed = preset.physics.velocity.min + Math.random() * (preset.physics.velocity.max - preset.physics.velocity.min);\r\n    } else {\r\n      // 原有的行為模式\r\n      switch (preset.behavior.movement) {\r\n        case 'explode':\r\n          angle = (index / total) * Math.PI * 2;\r\n          speed = preset.physics.velocity.min + Math.random() * (preset.physics.velocity.max - preset.physics.velocity.min);\r\n          break;\r\n        case 'float':\r\n          angle = Math.random() * Math.PI * 2;\r\n          speed = preset.physics.velocity.min + Math.random() * (preset.physics.velocity.max - preset.physics.velocity.min);\r\n          break;\r\n        case 'rise':\r\n          angle = Math.PI * 1.5 + (Math.random() - 0.5) * preset.spawning.spread.angle;\r\n          speed = preset.physics.velocity.min + Math.random() * (preset.physics.velocity.max - preset.physics.velocity.min);\r\n          break;\r\n        case 'chain':\r\n          angle = Math.random() * Math.PI * 2;\r\n          speed = preset.physics.velocity.max;\r\n          break;\r\n        case 'implode':\r\n          angle = Math.random() * Math.PI * 2;\r\n          speed = preset.physics.velocity.min + Math.random() * (preset.physics.velocity.max - preset.physics.velocity.min);\r\n          break;\r\n        default:\r\n          angle = Math.random() * Math.PI * 2;\r\n          speed = 100;\r\n      }\r\n    }\r\n\r\n    // 計算位置偏移\r\n    const spreadRadius = preset.spawning.spread.radius;\r\n    const spreadAngle = Math.random() * preset.spawning.spread.angle - preset.spawning.spread.angle / 2;\r\n    const startX = x + Math.cos(spreadAngle) * Math.random() * spreadRadius;\r\n    const startY = y + Math.sin(spreadAngle) * Math.random() * spreadRadius;\r\n\r\n    // 創建粒子\r\n    const size = preset.visual.size.min + Math.random() * (preset.visual.size.max - preset.visual.size.min);\r\n    const life = (preset.animation.lifespan.min + Math.random() * (preset.animation.lifespan.max - preset.animation.lifespan.min)) / 1000;\r\n\r\n    this.particles.push({\r\n      x: startX,\r\n      y: startY,\r\n      vx: Math.cos(angle) * speed,\r\n      vy: Math.sin(angle) * speed,\r\n      life: life,\r\n      maxLife: life,\r\n      size: size,\r\n      color: color,\r\n      alpha: preset.visual.opacity.start,\r\n      type: preset.type === 'snowflake' ? 'circle' : preset.type === 'lightning' ? 'spark' : 'circle'\r\n    });\r\n  }\r\n\r\n  // 角落增強效果 - 支持方向性\r\n  private addCornerEnhancement(x: number, y: number, preset: ParticlePresetConfig, flipDirections?: Array<{angle: number, distance: number}>): void {\r\n    // 添加金色光環\r\n    for (let i = 0; i < 12; i++) {\r\n      let angle: number;\r\n\r\n      if (flipDirections && flipDirections.length > 0) {\r\n        // 使用翻轉方向，添加偏移\r\n        const directionIndex = Math.floor((i / 12) * flipDirections.length);\r\n        const direction = flipDirections[directionIndex] || flipDirections[0];\r\n        if (direction) {\r\n          angle = direction.angle + (Math.random() - 0.5) * (Math.PI / 4);\r\n        } else {\r\n          angle = (i / 12) * Math.PI * 2;\r\n        }\r\n      } else {\r\n        angle = (i / 12) * Math.PI * 2;\r\n      }\r\n\r\n      this.particles.push({\r\n        x: x,\r\n        y: y,\r\n        vx: Math.cos(angle) * 80,\r\n        vy: Math.sin(angle) * 80,\r\n        life: 1.0,\r\n        maxLife: 1.0,\r\n        size: 3,\r\n        color: '#ffd700',\r\n        alpha: 0.8,\r\n        type: 'circle'\r\n      });\r\n    }\r\n  }\r\n\r\n  // 大規模增強效果 - 支持方向性\r\n  private addMassiveEnhancement(x: number, y: number, preset: ParticlePresetConfig, flipDirections?: Array<{angle: number, distance: number}>): void {\r\n    // 添加衝擊波\r\n    for (let wave = 0; wave < 3; wave++) {\r\n      setTimeout(() => {\r\n        for (let i = 0; i < 20; i++) {\r\n          let angle: number;\r\n\r\n          if (flipDirections && flipDirections.length > 0) {\r\n            // 使用翻轉方向，添加偏移\r\n            const directionIndex = Math.floor((i / 20) * flipDirections.length);\r\n            const direction = flipDirections[directionIndex] || flipDirections[0];\r\n            if (direction) {\r\n              angle = direction.angle + (Math.random() - 0.5) * (Math.PI / 3);\r\n            } else {\r\n              angle = (i / 20) * Math.PI * 2;\r\n            }\r\n          } else {\r\n            angle = (i / 20) * Math.PI * 2;\r\n          }\r\n\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * (150 + wave * 50),\r\n            vy: Math.sin(angle) * (150 + wave * 50),\r\n            life: 0.8,\r\n            maxLife: 0.8,\r\n            size: 2,\r\n            color: '#ffffff',\r\n            alpha: 0.6 - wave * 0.2,\r\n            type: 'circle'\r\n          });\r\n        }\r\n      }, wave * 100);\r\n    }\r\n  }\r\n  \r\n  private createSSSEffect(x: number, y: number, flippedCount: number, specialEffects?: SpecialEffect, flippedPositions?: Array<{x: number, y: number}>): void {\r\n    // 🌟 LEGENDARY SSS-GRADE - GOLDEN MAGNIFICENCE! 🌟\r\n    const goldColors = [\r\n      '#ffd700', '#ffdf00', '#ffed4e', '#fff700', '#ffa500', '#daa520',\r\n      '#b8860b', '#ffeaa7', '#fdcb6e', '#f39c12', '#e67e22', '#d4af37'\r\n    ];\r\n    \r\n    console.log('🌟✨🎆 LEGENDARY SSS-GRADE MOVE - REALITY SHATTER! 🎆✨🌟');\r\n    \r\n    // BLAST - 3 waves of destruction with directional preference (reduced from 8)\r\n    const flipDirections = this.calculateFlipDirections(x, y, flippedPositions);\r\n\r\n    for (let wave = 0; wave < 3; wave++) {\r\n      setTimeout(() => {\r\n        for (let j = 0; j < 25; j++) {  // 減少從60至25\r\n          let angle: number;\r\n\r\n          if (flipDirections.length > 0 && Math.random() < 0.7) {\r\n            // 70% 機率朝向翻轉方向\r\n            const directionIndex = Math.floor((j / 25) * flipDirections.length);\r\n            const direction = flipDirections[directionIndex] || flipDirections[0];\r\n            if (direction) {\r\n              angle = direction.angle + (Math.random() - 0.5) * (Math.PI / 3); // 60度擴散\r\n            } else {\r\n              angle = (j / 25) * Math.PI * 2;\r\n            }\r\n          } else {\r\n            // 30% 機率保持全向爆炸\r\n            angle = (j / 25) * Math.PI * 2;\r\n          }\r\n\r\n          const speed = 400 + wave * 100;\r\n          const wobble = Math.sin(j * 0.3) * 50;\r\n\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * speed + wobble,\r\n            vy: Math.sin(angle) * speed + wobble,\r\n            life: 2.0,\r\n            maxLife: 2.0,\r\n            size: Math.random() * 5 + 3,\r\n            color: goldColors[Math.floor(Math.random() * goldColors.length)] ?? '#ffd700',\r\n            alpha: 1,\r\n            type: 'circle'\r\n          });\r\n        }\r\n      }, wave * 60);\r\n    }\r\n    \r\n    // REALITY TEAR - Multiple vortexes\r\n    for (let vortex = 0; vortex < 3; vortex++) {\r\n      const vortexX = x + (vortex - 1) * 100;\r\n      for (let i = 0; i < 120; i++) {\r\n        const angle = (i / 10) * Math.PI + vortex * 2;\r\n        const radius = i * 3;\r\n        \r\n        setTimeout(() => {\r\n          this.particles.push({\r\n            x: vortexX + Math.cos(angle) * radius * 0.2,\r\n            y: y + Math.sin(angle) * radius * 0.2,\r\n            vx: Math.cos(angle + Math.PI/2) * 200,\r\n            vy: Math.sin(angle + Math.PI/2) * 200,\r\n            life: 2.5,\r\n            maxLife: 2.5,\r\n            size: Math.random() * 4 + 3,\r\n            color: goldColors[i % goldColors.length] ?? '#ffd700',\r\n            alpha: 1,\r\n            type: 'circle'\r\n          });\r\n        }, i * 10 + vortex * 200);\r\n      }\r\n    }\r\n    \r\n    // DIMENSIONAL RIFT - Expanding void\r\n    for (let rift = 0; rift < 5; rift++) {\r\n      setTimeout(() => {\r\n        for (let angle = 0; angle < Math.PI * 2; angle += 0.05) {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * (600 + rift * 150),\r\n            vy: Math.sin(angle) * (600 + rift * 150),\r\n            life: 1.0,\r\n            maxLife: 1.0,\r\n            size: 2,\r\n            color: rift % 2 === 0 ? '#000000' : '#ffffff',\r\n            alpha: 0.9,\r\n            type: 'circle'\r\n          });\r\n        }\r\n      }, rift * 300);\r\n    }\r\n    \r\n    // COSMIC STORM\r\n    for (let i = 0; i < 200 + flippedCount * 20; i++) {\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + (Math.random() - 0.5) * 100,\r\n          y: y + Math.random() * 50,\r\n          vx: (Math.random() - 0.5) * 800,\r\n          vy: -Math.random() * 600 - 300,\r\n          life: 3.0,\r\n          maxLife: 3.0,\r\n          size: Math.random() * 4 + 2,\r\n          color: goldColors[Math.floor(Math.random() * goldColors.length)] ?? '#ffd700',\r\n          alpha: 1,\r\n          type: Math.random() > 0.5 ? 'circle' : 'spark'\r\n        });\r\n      }, Math.random() * 500);\r\n    }\r\n    \r\n    // Special effect variations\r\n    if (specialEffects?.corner) {\r\n      console.log('🏰 CORNER LEGENDARY!');\r\n      this.createCornerExplosion(x, y);\r\n    }\r\n    if (specialEffects?.comeback) {\r\n      console.log('🔄 LEGENDARY COMEBACK!');\r\n      this.createComebackEffect(x, y);\r\n    }\r\n  }\r\n  \r\n  private createSSEffect(x: number, y: number, flippedCount: number, specialEffects?: SpecialEffect, flippedPositions?: Array<{x: number, y: number}>): void {\r\n    // 🌪️ MYTHICAL SS-GRADE - RED STORM! 🌪️\r\n    const redColors = ['#ff0000', '#dc143c', '#b22222', '#cd5c5c', '#ff6347', '#ff4500', '#ff1493', '#8b0000', '#a52a2a', '#c41e3a'];\r\n    \r\n    console.log('🌪️💎 MYTHICAL SS-GRADE MOVE! 💎🌪️');\r\n    \r\n    // CYCLONE - 3 waves with directional preference (reduced from 6)\r\n    const flipDirections = this.calculateFlipDirections(x, y, flippedPositions);\r\n\r\n    for (let wave = 0; wave < 3; wave++) {\r\n      setTimeout(() => {\r\n        for (let j = 0; j < 20; j++) {  // 減少從50至20\r\n          let angle: number;\r\n\r\n          if (flipDirections.length > 0 && Math.random() < 0.6) {\r\n            // 60% 機率朝向翻轉方向\r\n            const directionIndex = Math.floor((j / 20) * flipDirections.length);\r\n            const direction = flipDirections[directionIndex] || flipDirections[0];\r\n            if (direction) {\r\n              angle = direction.angle + (Math.random() - 0.5) * (Math.PI / 2); // 90度擴散\r\n            } else {\r\n              angle = (j / 20) * Math.PI * 2;\r\n            }\r\n          } else {\r\n            // 40% 機率保持旋風模式\r\n            angle = (j / 20) * Math.PI * 2;\r\n          }\r\n\r\n          const speed = 350 + wave * 80;\r\n          const spiral = Math.sin(j * 0.4) * 30;\r\n\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * speed + spiral,\r\n            vy: Math.sin(angle) * speed + spiral,\r\n            life: 1.8,\r\n            maxLife: 1.8,\r\n            size: Math.random() * 5 + 3,\r\n            color: redColors[wave % redColors.length] ?? '#ff0000',\r\n            alpha: 1,\r\n            type: 'circle'\r\n          });\r\n        }\r\n      }, wave * 100);\r\n    }\r\n    \r\n    // MYSTIC TORNADO\r\n    for (let i = 0; i < 100; i++) {\r\n      const angle = (i / 12) * Math.PI;\r\n      const radius = i * 2.5;\r\n      \r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + Math.cos(angle) * radius * 0.4,\r\n          y: y + Math.sin(angle) * radius * 0.4,\r\n          vx: Math.cos(angle + Math.PI/2) * 180,\r\n          vy: Math.sin(angle + Math.PI/2) * 180,\r\n          life: 2.2,\r\n          maxLife: 2.2,\r\n          size: Math.random() * 4 + 2,\r\n          color: redColors[i % redColors.length] ?? '#ff0000',\r\n          alpha: 1,\r\n          type: 'circle'\r\n        });\r\n      }, i * 20);\r\n    }\r\n    \r\n    // CRYSTAL SHOWER - Directional spray\r\n    for (let i = 0; i < 150 + flippedCount * 12; i++) {\r\n      setTimeout(() => {\r\n        let vx: number, vy: number;\r\n\r\n        if (flipDirections.length > 0 && Math.random() < 0.5) {\r\n          // 50% 機率朝向翻轉方向噴射\r\n          const direction = flipDirections[Math.floor(Math.random() * flipDirections.length)];\r\n          if (direction) {\r\n            const spread = (Math.random() - 0.5) * (Math.PI / 3); // 60度擴散\r\n            const finalAngle = direction.angle + spread;\r\n            const speed = Math.random() * 400 + 200;\r\n            vx = Math.cos(finalAngle) * speed;\r\n            vy = Math.sin(finalAngle) * speed;\r\n          } else {\r\n            vx = (Math.random() - 0.5) * 600;\r\n            vy = -Math.random() * 500 - 250;\r\n          }\r\n        } else {\r\n          // 50% 機率保持原有的向上噴射\r\n          vx = (Math.random() - 0.5) * 600;\r\n          vy = -Math.random() * 500 - 250;\r\n        }\r\n\r\n        this.particles.push({\r\n          x: x + (Math.random() - 0.5) * 80,\r\n          y: y + Math.random() * 30,\r\n          vx: vx,\r\n          vy: vy,\r\n          life: 2.8,\r\n          maxLife: 2.8,\r\n          size: Math.random() * 4 + 2,\r\n          color: redColors[Math.floor(Math.random() * redColors.length)] ?? '#ff6347',\r\n          alpha: 1,\r\n          type: Math.random() > 0.3 ? 'circle' : 'spark'\r\n        });\r\n      }, Math.random() * 400);\r\n    }\r\n    \r\n    // Special effects\r\n    if (specialEffects?.massive) {\r\n      console.log('🌊 MASSIVE MYTHICAL!');\r\n      this.createMassiveEffect(x, y);\r\n    }\r\n    if (specialEffects?.domination) {\r\n      console.log('👑 MYTHICAL DOMINATION!');\r\n      this.createDominationEffect(x, y);\r\n    }\r\n  }\r\n  \r\n  private createSEffect(x: number, y: number, flippedCount: number, specialEffects?: SpecialEffect, flippedPositions?: Array<{x: number, y: number}>): void {\r\n    // ULTRA SPECTACULAR S-grade effect - PURPLE MAJESTY!\r\n    const purpleColors = ['#dda0dd', '#e6b8ea', '#d8bfd8', '#9932cc', '#ba55d3', '#9370db', '#8a2be2', '#9966cc', '#c8a2c8'];\r\n    \r\n    console.log('🎆 LEGENDARY S-GRADE MOVE! 🎆');\r\n    \r\n    // MASSIVE RING BURST - 5 waves with directional preference!\r\n    const flipDirections = this.calculateFlipDirections(x, y, flippedPositions);\r\n\r\n    for (let wave = 0; wave < 5; wave++) {\r\n      setTimeout(() => {\r\n        for (let j = 0; j < 40; j++) {\r\n          let angle: number;\r\n\r\n          if (flipDirections.length > 0 && Math.random() < 0.65) {\r\n            // 65% 機率朝向翻轉方向爆發\r\n            const directionIndex = Math.floor((j / 40) * flipDirections.length);\r\n            const direction = flipDirections[directionIndex] || flipDirections[0];\r\n            if (direction) {\r\n              angle = direction.angle + (Math.random() - 0.5) * (Math.PI / 2.5); // 72度擴散\r\n            } else {\r\n              angle = (j / 40) * Math.PI * 2;\r\n            }\r\n          } else {\r\n            // 35% 機率保持環形爆發\r\n            angle = (j / 40) * Math.PI * 2;\r\n          }\r\n\r\n          const speed = 300 + wave * 80;\r\n          const wobble = Math.sin(j * 0.5) * 20; // Add wobble\r\n\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * speed + wobble,\r\n            vy: Math.sin(angle) * speed + wobble,\r\n            life: 1.5,\r\n            maxLife: 1.5,\r\n            size: Math.random() * 5 + 3,\r\n            color: purpleColors[wave % purpleColors.length] ?? '#9932cc',\r\n            alpha: 1,\r\n            type: 'circle'\r\n          });\r\n        }\r\n      }, wave * 80);\r\n    }\r\n    \r\n    // GIANT SPIRAL VORTEX\r\n    for (let i = 0; i < 80; i++) {\r\n      const angle = (i / 8) * Math.PI;\r\n      const radius = i * 4;\r\n      \r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + Math.cos(angle) * radius * 0.3,\r\n          y: y + Math.sin(angle) * radius * 0.3,\r\n          vx: Math.cos(angle + Math.PI/2) * 150,\r\n          vy: Math.sin(angle + Math.PI/2) * 150,\r\n          life: 2.0,\r\n          maxLife: 2.0,\r\n          size: Math.random() * 4 + 2,\r\n          color: purpleColors[i % purpleColors.length] ?? '#9932cc',\r\n          alpha: 1,\r\n          type: 'circle'\r\n        });\r\n      }, i * 15);\r\n    }\r\n    \r\n    // NUCLEAR FOUNTAIN - Always spectacular regardless of flip count\r\n    for (let i = 0; i < 100 + flippedCount * 15; i++) {\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + (Math.random() - 0.5) * 40,\r\n          y: y + Math.random() * 20,\r\n          vx: (Math.random() - 0.5) * 400,\r\n          vy: -Math.random() * 500 - 200,\r\n          life: 2.5,\r\n          maxLife: 2.5,\r\n          size: Math.random() * 4 + 2,\r\n          color: purpleColors[Math.floor(Math.random() * purpleColors.length)] ?? '#8a2be2',\r\n          alpha: 1,\r\n          type: Math.random() > 0.3 ? 'spark' : 'circle'\r\n        });\r\n      }, Math.random() * 300);\r\n    }\r\n    \r\n    // SHOCKWAVE EFFECT - Expanding circles\r\n    for (let wave = 0; wave < 3; wave++) {\r\n      setTimeout(() => {\r\n        for (let angle = 0; angle < Math.PI * 2; angle += 0.1) {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * (400 + wave * 100),\r\n            vy: Math.sin(angle) * (400 + wave * 100),\r\n            life: 0.8,\r\n            maxLife: 0.8,\r\n            size: 1,\r\n            color: '#ffffff',\r\n            alpha: 0.8,\r\n            type: 'circle'\r\n          });\r\n        }\r\n      }, wave * 200);\r\n    }\r\n    \r\n    // STARBURST - Directional explosion\r\n    for (let i = 0; i < 50; i++) {\r\n      let angle: number;\r\n\r\n      if (flipDirections.length > 0 && Math.random() < 0.7) {\r\n        // 70% 機率朝向翻轉方向爆炸\r\n        const directionIndex = Math.floor((i / 50) * flipDirections.length);\r\n        const direction = flipDirections[directionIndex] || flipDirections[0];\r\n        if (direction) {\r\n          angle = direction.angle + (Math.random() - 0.5) * (Math.PI / 3); // 60度擴散\r\n        } else {\r\n          angle = (i / 50) * Math.PI * 2;\r\n        }\r\n      } else {\r\n        // 30% 機率保持星形爆炸\r\n        angle = (i / 50) * Math.PI * 2;\r\n      }\r\n\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x,\r\n          y: y,\r\n          vx: Math.cos(angle) * 500,\r\n          vy: Math.sin(angle) * 500,\r\n          life: 1.2,\r\n          maxLife: 1.2,\r\n          size: Math.random() * 6 + 2,\r\n          color: '#9932cc',\r\n          alpha: 1,\r\n          type: 'circle'\r\n        });\r\n      }, i * 20);\r\n    }\r\n  }\r\n  \r\n  private createAEffect(x: number, y: number, flippedCount: number, flippedPositions?: Array<{x: number, y: number}>): void {\r\n    // EPIC A-grade effect - AZURE BRILLIANCE!\r\n    const blueColors = ['#87ceeb', '#87cefa', '#00bfff', '#1e90ff', '#6495ed', '#4682b4', '#add8e6', '#b0e0e6', '#afeeee'];\r\n    \r\n    console.log('⭐ AMAZING A-GRADE MOVE! ⭐');\r\n    \r\n    // EPIC CROSS SWEEP - Directional waves\r\n    const flipDirections = this.calculateFlipDirections(x, y, flippedPositions);\r\n\r\n    if (flipDirections.length > 0) {\r\n      // 使用翻轉方向進行定向掃射\r\n      for (const flipDir of flipDirections) {\r\n        for (let wave = 0; wave < 3; wave++) {\r\n          for (let i = 0; i < 20; i++) {\r\n            setTimeout(() => {\r\n              // 主方向加上一些擴散\r\n              const spread = (Math.random() - 0.5) * (Math.PI / 4); // 45度擴散\r\n              const finalAngle = flipDir.angle + spread;\r\n              const speed = 250 + wave * 50;\r\n\r\n              this.particles.push({\r\n                x: x,\r\n                y: y,\r\n                vx: Math.cos(finalAngle) * speed,\r\n                vy: Math.sin(finalAngle) * speed,\r\n                life: 1.0 + wave * 0.2,\r\n                maxLife: 1.0 + wave * 0.2,\r\n                size: Math.random() * 4 + 2,\r\n                color: blueColors[wave % blueColors.length] ?? '#87ceeb',\r\n                alpha: 1,\r\n                type: 'circle'\r\n              });\r\n            }, i * 20 + wave * 150);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // 後備方案：使用原有的8方向掃射\r\n      const directions = [\r\n        [1,0], [0,1], [-1,0], [0,-1],   // Cardinals\r\n        [1,1], [-1,1], [1,-1], [-1,-1]  // Diagonals\r\n      ];\r\n\r\n      for (const [dx, dy] of directions as [number, number][]) {\r\n        for (let wave = 0; wave < 3; wave++) {\r\n          for (let i = 0; i < 15; i++) {\r\n            setTimeout(() => {\r\n              this.particles.push({\r\n                x: x,\r\n                y: y,\r\n                vx: dx * (250 + wave * 50),\r\n                vy: dy * (250 + wave * 50),\r\n                life: 1.0 + wave * 0.2,\r\n                maxLife: 1.0 + wave * 0.2,\r\n                size: Math.random() * 4 + 2,\r\n                color: blueColors[wave % blueColors.length] ?? '#87ceeb',\r\n                alpha: 1,\r\n                type: 'circle'\r\n              });\r\n            }, i * 25 + wave * 200);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    // GOLDEN RING CASCADES - Directional expanding rings\r\n    for (let ring = 0; ring < 4; ring++) {\r\n      setTimeout(() => {\r\n        for (let i = 0; i < 30; i++) {\r\n          let angle: number;\r\n\r\n          if (flipDirections.length > 0 && Math.random() < 0.4) {\r\n            // 40% 機率朝向翻轉方向\r\n            const directionIndex = Math.floor((i / 30) * flipDirections.length);\r\n            const direction = flipDirections[directionIndex] || flipDirections[0];\r\n            if (direction) {\r\n              angle = direction.angle + (Math.random() - 0.5) * (Math.PI / 3); // 60度擴散\r\n            } else {\r\n              angle = (i / 30) * Math.PI * 2;\r\n            }\r\n          } else {\r\n            // 60% 機率保持環形擴散\r\n            angle = (i / 30) * Math.PI * 2;\r\n          }\r\n\r\n          const speed = 180 + ring * 60;\r\n\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * speed,\r\n            vy: Math.sin(angle) * speed,\r\n            life: 1.2,\r\n            maxLife: 1.2,\r\n            size: Math.random() * 3 + 2,\r\n            color: blueColors[ring % blueColors.length] ?? '#87ceeb',\r\n            alpha: 1,\r\n            type: 'circle'\r\n          });\r\n        }\r\n      }, ring * 150);\r\n    }\r\n    \r\n    // GOLDEN FOUNTAIN\r\n    for (let i = 0; i < 60 + flippedCount * 8; i++) {\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + (Math.random() - 0.5) * 30,\r\n          y: y + Math.random() * 15,\r\n          vx: (Math.random() - 0.5) * 300,\r\n          vy: -Math.random() * 350 - 150,\r\n          life: 1.8,\r\n          maxLife: 1.8,\r\n          size: Math.random() * 3 + 1,\r\n          color: blueColors[Math.floor(Math.random() * blueColors.length)] ?? '#4169e1',\r\n          alpha: 1,\r\n          type: 'spark'\r\n        });\r\n      }, Math.random() * 400);\r\n    }\r\n    \r\n    // SPARKLE BURST\r\n    for (let i = 0; i < 25; i++) {\r\n      const angle = Math.random() * Math.PI * 2;\r\n      const distance = Math.random() * 100 + 50;\r\n      \r\n      this.particles.push({\r\n        x: x + Math.cos(angle) * distance,\r\n        y: y + Math.sin(angle) * distance,\r\n        vx: Math.cos(angle) * 100,\r\n        vy: Math.sin(angle) * 100,\r\n        life: 0.8,\r\n        maxLife: 0.8,\r\n        size: Math.random() * 3 + 1,\r\n        color: '#87ceeb',\r\n        alpha: 1,\r\n        type: 'circle'\r\n      });\r\n    }\r\n  }\r\n  \r\n  private createBEffect(x: number, y: number, flippedCount: number): void {\r\n    // SOLID B-grade effect - SPRING GREEN POWER!\r\n    const greenColors = ['#90ee90', '#98fb98', '#00ff7f', '#00fa9a', '#7cfc00', '#7fff00', '#adff2f', '#9aff9a', '#b4ffb4'];\r\n    \r\n    console.log('💚 GOOD B-GRADE MOVE! 💚');\r\n    \r\n    // DOUBLE RING BURST\r\n    for (let ring = 0; ring < 2; ring++) {\r\n      setTimeout(() => {\r\n        for (let i = 0; i < 25; i++) {\r\n          const angle = (i / 25) * Math.PI * 2;\r\n          const speed = 120 + ring * 40;\r\n          \r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * speed,\r\n            vy: Math.sin(angle) * speed,\r\n            life: 1.0,\r\n            maxLife: 1.0,\r\n            size: Math.random() * 2 + 2,\r\n            color: greenColors[ring % greenColors.length] ?? '#90ee90',\r\n            alpha: 1,\r\n            type: 'circle'\r\n          });\r\n        }\r\n      }, ring * 100);\r\n    }\r\n    \r\n    // GREEN SPARKS\r\n    for (let i = 0; i < 20 + flippedCount * 5; i++) {\r\n      const angle = Math.random() * Math.PI * 2;\r\n      const speed = Math.random() * 150 + 80;\r\n      \r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x,\r\n          y: y,\r\n          vx: Math.cos(angle) * speed,\r\n          vy: Math.sin(angle) * speed,\r\n          life: 1.2,\r\n          maxLife: 1.2,\r\n          size: Math.random() * 2 + 1,\r\n          color: greenColors[Math.floor(Math.random() * greenColors.length)] ?? '#00ff7f',\r\n          alpha: 1,\r\n          type: 'spark'\r\n        });\r\n      }, Math.random() * 200);\r\n    }\r\n    \r\n    // RADIATING LINES\r\n    for (let i = 0; i < 8; i++) {\r\n      const angle = (i / 8) * Math.PI * 2;\r\n      \r\n      for (let j = 0; j < 5; j++) {\r\n        setTimeout(() => {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * (150 + j * 30),\r\n            vy: Math.sin(angle) * (150 + j * 30),\r\n            life: 0.8,\r\n            maxLife: 0.8,\r\n            size: 2,\r\n            color: '#90ee90',\r\n            alpha: 1,\r\n            type: 'circle'\r\n          });\r\n        }, j * 50);\r\n      }\r\n    }\r\n  }\r\n  \r\n  private createCEffect(x: number, y: number): void {\r\n    // BASIC C-grade effect - Light gray elegance\r\n    const grayColors = ['#d3d3d3', '#c0c0c0', '#dcdcdc', '#f5f5f5', '#e0e0e0', '#f8f8f8', '#b8b8b8', '#a9a9a9', '#d8d8d8', '#e6e6e6'];\r\n    \r\n    console.log('⚪ Basic C-Grade Move');\r\n    \r\n    // SIMPLE RING - Still noticeable\r\n    for (let i = 0; i < 12; i++) {\r\n      const angle = (i / 12) * Math.PI * 2;\r\n      \r\n      this.particles.push({\r\n        x: x,\r\n        y: y,\r\n        vx: Math.cos(angle) * 80,\r\n        vy: Math.sin(angle) * 80,\r\n        life: 0.8,\r\n        maxLife: 0.8,\r\n        size: Math.random() * 1.5 + 1,\r\n        color: grayColors[i % grayColors.length] ?? '#d3d3d3',\r\n        alpha: 0.8,\r\n        type: 'circle'\r\n      });\r\n    }\r\n    \r\n    // SMALL SPARKLES\r\n    for (let i = 0; i < 6; i++) {\r\n      const angle = Math.random() * Math.PI * 2;\r\n      const speed = Math.random() * 60 + 40;\r\n      \r\n      this.particles.push({\r\n        x: x,\r\n        y: y,\r\n        vx: Math.cos(angle) * speed,\r\n        vy: Math.sin(angle) * speed,\r\n        life: 0.6,\r\n        maxLife: 0.6,\r\n        size: 1,\r\n        color: '#d3d3d3',\r\n        alpha: 0.7,\r\n        type: 'spark'\r\n      });\r\n    }\r\n  }\r\n  \r\n  // Create flip animation particles - SPECTACULAR ENHANCED!\r\n  createFlipEffect(x: number, y: number, color: string, grade?: Grade): void {\r\n    // Much more spectacular flip effects with grade-based colors!\r\n    const isBlack = color === '#000000';\r\n    \r\n    // Get grade-based colors or fallback to basic colors\r\n    let gradeColors: string[];\r\n    let intensity: number;\r\n    \r\n    if (grade) {\r\n      switch (grade) {\r\n        case 'SSS':\r\n          // Use cosmic_burst colors - golden theme\r\n          gradeColors = ['#ffd700', '#ffef94', '#fff68f', '#ffffe0', '#fffacd'];\r\n          intensity = 3.0;\r\n          break;\r\n        case 'SS':\r\n          // Use supernova colors - orange theme\r\n          gradeColors = ['#ff8c00', '#ffa500', '#ff7f00', '#ff6347', '#ff4500'];\r\n          intensity = 2.5;\r\n          break;\r\n        case 'S':\r\n          // Use light purple theme - 淺紫色系主題\r\n          gradeColors = ['#dda0dd', '#e6b8ea', '#d8bfd8', '#e0b0ff', '#dbb2ff'];\r\n          intensity = 2.0;\r\n          break;\r\n        case 'A':\r\n          // Use light blue theme - 淺藍色系主題\r\n          gradeColors = ['#87ceeb', '#add8e6', '#b0e0e6', '#afeeee', '#e0ffff'];\r\n          intensity = 1.5;\r\n          break;\r\n        case 'B':\r\n          // Use light green theme - 淺綠色系主題\r\n          gradeColors = ['#90ee90', '#98fb98', '#b4ffb4', '#c8ffc8', '#a8e6a8'];\r\n          intensity = 1.2;\r\n          break;\r\n        case 'C':\r\n          // Use white/gray theme - 白灰色系主題\r\n          gradeColors = ['#d3d3d3', '#c0c0c0', '#e0e0e0', '#f5f5f5', '#b8b8b8'];\r\n          intensity = 1.0;\r\n          break;\r\n        default:\r\n          gradeColors = isBlack ? ['#666666', '#888888', '#555555'] : ['#f0f0f0', '#e8e8e8', '#f5f5f5'];\r\n          intensity = 0.8;\r\n      }\r\n    } else {\r\n      gradeColors = isBlack ? ['#666666', '#888888', '#555555'] : ['#f0f0f0', '#e8e8e8', '#f5f5f5'];\r\n      intensity = 0.8;\r\n    }\r\n    \r\n    const primaryColor = gradeColors[0] ?? '#ffffff';\r\n    const accentColors = gradeColors;\r\n    \r\n    console.log(`🔄 Flip Effect: ${isBlack ? 'Black' : 'White'} piece flipped! Grade: ${grade || 'Basic'}`);\r\n    \r\n    // EXPLOSIVE FLIP BURST - Intensity based on grade!\r\n    const burstCount = Math.floor(15 * intensity);\r\n    for (let i = 0; i < burstCount; i++) {\r\n      const angle = (i / burstCount) * Math.PI * 2;\r\n      const speed = (Math.random() * 60 + 60) * intensity;\r\n      \r\n      this.particles.push({\r\n        x: x,\r\n        y: y,\r\n        vx: Math.cos(angle) * speed,\r\n        vy: Math.sin(angle) * speed,\r\n        life: 0.6 * intensity,\r\n        maxLife: 0.6 * intensity,\r\n        size: (Math.random() * 1.5 + 1) * intensity,\r\n        color: i % 3 === 0 ? primaryColor : accentColors[i % accentColors.length] ?? primaryColor,\r\n        alpha: 0.9,\r\n        type: i % 2 === 0 ? 'spark' : 'circle'\r\n      });\r\n    }\r\n    \r\n    // RING EXPANSION - Visual flip wave (intensity-based)\r\n    const ringCount = Math.floor(2 + intensity);\r\n    for (let ring = 0; ring < ringCount; ring++) {\r\n      setTimeout(() => {\r\n        const particlesPerRing = Math.floor(12 + intensity * 4);\r\n        for (let i = 0; i < particlesPerRing; i++) {\r\n          const angle = (i / particlesPerRing) * Math.PI * 2;\r\n          const speed = (80 + ring * 30) * intensity;\r\n          \r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * speed,\r\n            vy: Math.sin(angle) * speed,\r\n            life: 0.6 + ring * 0.2,\r\n            maxLife: 0.6 + ring * 0.2,\r\n            size: ring === 0 ? 2 : 1,\r\n            color: primaryColor,\r\n            alpha: 0.7 - ring * 0.2,\r\n            type: 'circle'\r\n          });\r\n        }\r\n      }, ring * 80);\r\n    }\r\n    \r\n    // FLIP SPARKLE TRAIL - Cascading sparkles\r\n    for (let i = 0; i < 15; i++) {\r\n      const angle = Math.random() * Math.PI * 2;\r\n      const speed = Math.random() * 60 + 40;\r\n      \r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + (Math.random() - 0.5) * 20,\r\n          y: y + (Math.random() - 0.5) * 20,\r\n          vx: Math.cos(angle) * speed,\r\n          vy: Math.sin(angle) * speed,\r\n          life: 0.7,\r\n          maxLife: 0.7,\r\n          size: Math.random() * 1.5 + 1,\r\n          color: accentColors[Math.floor(Math.random() * accentColors.length)] ?? '#d3d3d3',\r\n          alpha: 0.8,\r\n          type: 'spark'\r\n        });\r\n      }, Math.random() * 200);\r\n    }\r\n    \r\n    // MAGIC DUST - Floating ambient particles\r\n    for (let i = 0; i < 8; i++) {\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + (Math.random() - 0.5) * 30,\r\n          y: y + (Math.random() - 0.5) * 30,\r\n          vx: (Math.random() - 0.5) * 30,\r\n          vy: -Math.random() * 40 - 20,\r\n          life: 1.2,\r\n          maxLife: 1.2,\r\n          size: Math.random() * 1 + 0.5,\r\n          color: primaryColor,\r\n          alpha: 0.6,\r\n          type: 'circle'\r\n        });\r\n      }, Math.random() * 300);\r\n    }\r\n    \r\n    // FLIP SHOCKWAVE - Single expanding ring\r\n    setTimeout(() => {\r\n      for (let angle = 0; angle < Math.PI * 2; angle += 0.2) {\r\n        this.particles.push({\r\n          x: x,\r\n          y: y,\r\n          vx: Math.cos(angle) * 150,\r\n          vy: Math.sin(angle) * 150,\r\n          life: 0.4,\r\n          maxLife: 0.4,\r\n          size: 1.5,\r\n          color: isBlack ? '#333333' : '#f9f9f9',\r\n          alpha: 0.5,\r\n          type: 'circle'\r\n        });\r\n      }\r\n    }, 100);\r\n  }\r\n  \r\n  // Clean up\r\n  destroy(): void {\r\n    if (this.animationId) {\r\n      cancelAnimationFrame(this.animationId);\r\n    }\r\n    this.particles = [];\r\n    this.canvas.remove();\r\n  }\r\n  \r\n  // Get particle count for performance monitoring\r\n  getParticleCount(): number {\r\n    return this.particles.length;\r\n  }\r\n  \r\n  // Special situation effects\r\n  private createCornerExplosion(x: number, y: number): void {\r\n    // Golden castle walls effect for corner captures\r\n    const castleColors = ['#ffd700', '#ffdf00', '#ffa500'];\r\n    \r\n    // Castle wall pattern\r\n    for (let wall = 0; wall < 4; wall++) {\r\n      const angle = (wall / 4) * Math.PI * 2;\r\n      \r\n      for (let brick = 0; brick < 20; brick++) {\r\n        setTimeout(() => {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * 300 + (Math.random() - 0.5) * 100,\r\n            vy: Math.sin(angle) * 300 + (Math.random() - 0.5) * 100,\r\n            life: 1.5,\r\n            maxLife: 1.5,\r\n            size: Math.random() * 3 + 2,\r\n            color: castleColors[brick % castleColors.length] ?? '#ffd700',\r\n            alpha: 1,\r\n            type: 'circle'\r\n          });\r\n        }, brick * 30 + wall * 200);\r\n      }\r\n    }\r\n  }\r\n  \r\n  private createComebackEffect(x: number, y: number): void {\r\n    // Phoenix rising effect for comeback moves\r\n    const phoenixColors = ['#ff4500', '#ff6347', '#ffa500', '#ff1493'];\r\n    \r\n    // Rising phoenix flames\r\n    for (let i = 0; i < 80; i++) {\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + (Math.random() - 0.5) * 60,\r\n          y: y + Math.random() * 30,\r\n          vx: (Math.random() - 0.5) * 200,\r\n          vy: -Math.random() * 400 - 200,\r\n          life: 2.0,\r\n          maxLife: 2.0,\r\n          size: Math.random() * 4 + 2,\r\n          color: phoenixColors[Math.floor(Math.random() * phoenixColors.length)] ?? '#ff6347',\r\n          alpha: 0.9,\r\n          type: 'spark'\r\n        });\r\n      }, Math.random() * 600);\r\n    }\r\n  }\r\n  \r\n  private createMassiveEffect(x: number, y: number): void {\r\n    // Tsunami wave for massive flips\r\n    const waveColors = ['#0080ff', '#00bfff', '#87ceeb', '#b0e0e6'];\r\n    \r\n    // Wave fronts\r\n    for (let wave = 0; wave < 6; wave++) {\r\n      setTimeout(() => {\r\n        for (let particle = 0; particle < 40; particle++) {\r\n          const angle = (particle / 40) * Math.PI * 2;\r\n          \r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * (200 + wave * 50),\r\n            vy: Math.sin(angle) * (200 + wave * 50),\r\n            life: 1.0 + wave * 0.2,\r\n            maxLife: 1.0 + wave * 0.2,\r\n            size: Math.random() * 3 + 1,\r\n            color: waveColors[wave % waveColors.length] ?? '#0080ff',\r\n            alpha: 0.8,\r\n            type: 'circle'\r\n          });\r\n        }\r\n      }, wave * 150);\r\n    }\r\n  }\r\n  \r\n  private createDominationEffect(x: number, y: number): void {\r\n    // Crown and scepter effect for domination\r\n    const royalColors = ['#9932cc', '#8b00ff', '#ffd700', '#daa520'];\r\n    \r\n    // Crown jewels\r\n    for (let jewel = 0; jewel < 12; jewel++) {\r\n      const angle = (jewel / 12) * Math.PI * 2;\r\n      \r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + Math.cos(angle) * 50,\r\n          y: y + Math.sin(angle) * 50,\r\n          vx: Math.cos(angle) * 150,\r\n          vy: Math.sin(angle) * 150,\r\n          life: 1.8,\r\n          maxLife: 1.8,\r\n          size: Math.random() * 4 + 3,\r\n          color: royalColors[jewel % royalColors.length] ?? '#9932cc',\r\n          alpha: 1,\r\n          type: 'circle'\r\n        });\r\n      }, jewel * 80);\r\n    }\r\n  }\r\n  \r\n  // Chain reaction effect\r\n  createChainEffect(x: number, y: number): void {\r\n    if (!this.enabled) return;\r\n\r\n    // Lightning chain for chain reactions\r\n    const lightningColors = ['#ffff00', '#ffffff', '#00ffff'];\r\n    \r\n    // Lightning bolts\r\n    for (let bolt = 0; bolt < 8; bolt++) {\r\n      const angle = (bolt / 8) * Math.PI * 2;\r\n      \r\n      for (let segment = 0; segment < 10; segment++) {\r\n        setTimeout(() => {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * (100 + segment * 20) + (Math.random() - 0.5) * 60,\r\n            vy: Math.sin(angle) * (100 + segment * 20) + (Math.random() - 0.5) * 60,\r\n            life: 0.4,\r\n            maxLife: 0.4,\r\n            size: 2,\r\n            color: lightningColors[segment % lightningColors.length] ?? '#ffff00',\r\n            alpha: 1,\r\n            type: 'spark'\r\n          });\r\n        }, segment * 20 + bolt * 50);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 創建飄起的等級文字效果\r\n   */\r\n  createFloatingGradeText(x: number, y: number, grade: Grade): void {\r\n    if (!this.enabled) return;\r\n\r\n    // 定義每個等級的顏色和大小\r\n    const gradeConfig = {\r\n      'C': { color: '#d3d3d3', fontSize: 24 },\r\n      'B': { color: '#90ee90', fontSize: 28 },\r\n      'A': { color: '#87ceeb', fontSize: 32 },\r\n      'S': { color: '#9932cc', fontSize: 36 },\r\n      'SS': { color: '#ff8c00', fontSize: 42 },\r\n      'SSS': { color: '#ffd700', fontSize: 48 }\r\n    };\r\n\r\n    const config = gradeConfig[grade];\r\n    if (!config) return;\r\n\r\n    console.log(`💫 Creating floating text: ${grade} at (${x}, ${y})`);\r\n\r\n    // 嘗試創建 Canvas 文字粒子\r\n    if (this.ctx && this.canvas) {\r\n      this.particles.push({\r\n        x: x,\r\n        y: y,\r\n        vx: 0, // 不水平移動\r\n        vy: -80, // 向上飄起，速度根據等級調整\r\n        life: 2.0, // 顯示2秒\r\n        maxLife: 2.0,\r\n        size: config.fontSize,\r\n        color: config.color,\r\n        alpha: 1.0,\r\n        type: 'text',\r\n        text: grade,\r\n        fontSize: config.fontSize\r\n      });\r\n\r\n      // 為高等級創建額外的文字效果\r\n      if (grade === 'SSS') {\r\n        setTimeout(() => {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y - 10,\r\n            vx: 0,\r\n            vy: -60,\r\n            life: 2.5,\r\n            maxLife: 2.5,\r\n            size: 56,\r\n            color: '#ffa500',\r\n            alpha: 0.7,\r\n            type: 'text',\r\n            text: grade,\r\n            fontSize: 56\r\n          });\r\n        }, 100);\r\n      } else if (grade === 'SS') {\r\n        setTimeout(() => {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y - 8,\r\n            vx: 0,\r\n            vy: -65,\r\n            life: 2.2,\r\n            maxLife: 2.2,\r\n            size: 48,\r\n            color: '#ff4500',\r\n            alpha: 0.6,\r\n            type: 'text',\r\n            text: grade,\r\n            fontSize: 48\r\n          });\r\n        }, 80);\r\n      }\r\n    } else {\r\n      // 使用 CSS 後備方案\r\n      this.createCSSFloatingText(x, y, grade);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * CSS 後備方案創建飄起文字\r\n   */\r\n  private createCSSFloatingText(x: number, y: number, grade: Grade): void {\r\n    console.log(`🎨 Using CSS fallback for floating text: ${grade}`);\r\n\r\n    const container = this.canvas.parentElement;\r\n    if (!container) return;\r\n\r\n    // 創建文字元素\r\n    const textElement = document.createElement('div');\r\n    textElement.className = `floating-grade-text grade-${grade.toLowerCase()}`;\r\n    textElement.textContent = grade;\r\n\r\n    // 設定位置\r\n    textElement.style.left = `${x}px`;\r\n    textElement.style.top = `${y}px`;\r\n    textElement.style.transform = 'translate(-50%, -50%)';\r\n\r\n    // 新增到容器\r\n    container.appendChild(textElement);\r\n\r\n    // 2秒後移除\r\n    setTimeout(() => {\r\n      if (textElement.parentNode) {\r\n        textElement.parentNode.removeChild(textElement);\r\n      }\r\n    }, 2000);\r\n  }\r\n}","export type Language = 'en' | 'zh-Hant' | 'zh-Hans';\r\n\r\nlet currentLanguage: Language = 'en';\r\n\r\nconst translations: Record<Language, Record<string, string>> = {\r\n  en: {\r\n    'loading.title': 'Loading Super Reversi...',\r\n    'loading.details': 'Initializing game engine and AI systems',\r\n    'app.title': '\\ud83c\\udfae Super Reversi',\r\n    'game.black': 'Black',\r\n    'game.white': 'White',\r\n    'game.current': 'Current',\r\n    'game.currentTurn': 'Current Turn:',\r\n    'game.mode': 'Mode',\r\n    'game.pvp': 'Player vs Player',\r\n    'game.pvai': 'Player vs AI',\r\n    'game.back': '\\u2190 Back to Menu',\r\n    'game.blackWins': 'Black Wins!',\r\n    'game.whiteWins': 'White Wins!',\r\n    'game.tie': \"It's a Tie!\",\r\n    'game.gameOverTitle': 'Game Over!',\r\n    'game.totalMoves': 'Total moves',\r\n    'game.playAgain': 'Play Again',\r\n    'game.mainMenu': 'Main Menu',\r\n    'menu.chooseMode': '\\ud83c\\udfaf Choose Game Mode',\r\n    'menu.pvp': 'Player vs Player',\r\n    'menu.pvc': 'Player vs Computer',\r\n    'menu.settings': 'Settings',\r\n    'menu.help': 'How to Play',\r\n    'menu.back': '\\u2190 Back to Menu',\r\n    'menu.selectDifficulty': '\\ud83e\\udd16 Select AI Difficulty',\r\n    'menu.easy': 'Easy',\r\n    'menu.medium': 'Medium',\r\n    'menu.hard': 'Hard',\r\n    'menu.easyDesc': 'Easy: AI makes random valid moves',\r\n    'menu.mediumDesc': 'Medium: AI tries to maximize flips',\r\n    'menu.hardDesc': 'Hard: AI uses advanced strategy',\r\n    'menu.startGame': 'Start Game',\r\n    'settings.title': '\\u2699\\ufe0f Settings',\r\n    'settings.language': 'Language',\r\n    'settings.visual': 'Visual Settings',\r\n    'settings.showValid': 'Show valid moves',\r\n    'settings.showLast': 'Highlight last move',\r\n    'settings.showMobility': 'Show mobility',\r\n    'settings.animations': 'Enable animations',\r\n    'settings.game': 'Game Settings',\r\n    'settings.autoPass': 'Auto-pass when no moves',\r\n    'settings.confirm': 'Confirm moves (vs Computer)',\r\n    'settings.save': 'Save Settings',\r\n    'settings.saved': 'Settings saved!',\r\n    'help.title': '\\u2753 How to Play Reversi',\r\n    'help.objectiveTitle': '\\ud83c\\udfaf Objective',\r\n    'help.objectiveText': 'Have the most pieces when the game ends.',\r\n    'help.rulesTitle': '\\ud83d\\udccb Rules',\r\n    'help.rules1': 'Black moves first',\r\n    'help.rules2': 'Capture pieces between yours',\r\n    'help.rules3': 'Can capture in 8 directions',\r\n    'help.rules4': 'Must capture at least 1 piece',\r\n    'help.rules5': 'Pass if no valid moves',\r\n    'help.rules6': 'Game ends when no moves left',\r\n    'help.strategyTitle': '\\ud83d\\udca1 Strategy',\r\n    'help.strategy1': '<strong>Corners:</strong> Can\\'t be flipped!',\r\n    'help.strategy2': '<strong>Edges:</strong> Harder to flip',\r\n    'help.strategy3': '<strong>Mobility:</strong> Limit opponent moves',\r\n    'help.strategy4': '<strong>Patience:</strong> Less can be more',\r\n    'help.controlsTitle': '\\ud83c\\udfae Controls',\r\n    'help.controls1': 'Click highlighted cells to move',\r\n    'help.controls2': 'Green = valid moves',\r\n    'help.controls3': 'Gold = last move',\r\n    'messages.quitConfirm': 'Are you sure you want to quit the current game?',\r\n    'messages.moveConfirm': 'Confirm this move?',\r\n    'messages.invalidMove': 'Invalid move',\r\n    'difficulty.easy': 'Easy',\r\n    'difficulty.medium': 'Medium',\r\n    'difficulty.hard': 'Hard',\r\n    'combo.counter': '${count} Combo!',\r\n    'combo.double': 'Twin Strike!',\r\n    'combo.triple': 'Triple Tempest!',\r\n    'combo.quadruple': 'Quadra Blaze!',\r\n    'combo.quintuple': 'Penta Storm!',\r\n    'combo.sextuple': 'Hexa Fury!',\r\n    'combo.septuple': 'Hepta Cataclysm!',\r\n    'special.corner_joseki': 'Corner Joseki!',\r\n    'special.great_reversal': 'Great Reversal!',\r\n    'special.total_domination': 'Total Domination!',\r\n    'special.desperate_kill': 'Desperate Kill!',\r\n    'special.perfect_endgame': 'Perfect Endgame!',\r\n    'special.edge_control': 'Edge Control!',\r\n    'special.chain_reaction': 'Chain Reaction!',\r\n    'special.time_control': 'Time Control!',\r\n    'special.corner_joseki.subtitle': 'Corner Joseki',\r\n    'special.great_reversal.subtitle': 'Great Reversal',\r\n    'special.total_domination.subtitle': 'Total Domination',\r\n    'special.desperate_kill.subtitle': 'Desperate Kill',\r\n    'special.perfect_endgame.subtitle': 'Perfect Endgame',\r\n    'special.edge_control.subtitle': 'Edge Control',\r\n    'special.chain_reaction.subtitle': 'Chain Reaction',\r\n    'special.time_control.subtitle': 'Time Control',\r\n    // Modal 通用按鈕\r\n    'modal.ok': 'OK',\r\n    'modal.cancel': 'Cancel',\r\n    'modal.confirm': 'Confirm',\r\n    'modal.yes': 'Yes',\r\n    'modal.no': 'No',\r\n    // Modal 標題\r\n    'modal.info': 'Information',\r\n    'modal.warning': 'Warning',\r\n    'modal.error': 'Error',\r\n    'modal.success': 'Success',\r\n    'modal.confirm.title': 'Confirm',\r\n    // 特定訊息\r\n    'modal.settingsComing': 'Settings feature coming soon!',\r\n    'modal.testClick': 'You clicked position ${position}',\r\n    'modal.appWorking': 'Application is working!',\r\n    'modal.moveConfirm.title': 'Confirm Move',\r\n    'modal.quitConfirm.title': 'Quit Game',\r\n    'modal.settingsSaved.title': 'Settings Saved'\r\n  },\r\n  'zh-Hant': {\r\n    'loading.title': '\\u6b63\\u5728\\u8f09\\u5165\\u8d85\\u7d1a\\u9ed1\\u767d\\u68cb...',\r\n    'loading.details': '\\u6b63\\u5728\\u521d\\u59cb\\u5316\\u904a\\u6232\\u5f15\\u64ce\\u8207\\u4eba\\u5de5\\u667a\\u6167\\u7cfb\\u7d71',\r\n    'app.title': '\\ud83c\\udfae \\u8d85\\u7d1a\\u9ed1\\u767d\\u68cb',\r\n    'game.black': '\\u9ed1\\u68cb',\r\n    'game.white': '\\u767d\\u68cb',\r\n    'game.current': '\\u73fe\\u5728',\r\n    'game.currentTurn': '\\u76ee\\u524d\\u56de\\u5408\\uff1a',\r\n    'game.mode': '\\u6a21\\u5f0f',\r\n    'game.pvp': '\\u73a9\\u5bb6\\u5c0d\\u6230',\r\n    'game.pvai': '\\u73a9\\u5bb6\\u5c0d\\u96fb\\u8166',\r\n    'game.back': '\\u2190 \\u8fd4\\u56de\\u9078\\u55ae',\r\n    'game.blackWins': '\\u9ed1\\u68cb\\u52dd\\u5229\\uff01',\r\n    'game.whiteWins': '\\u767d\\u68cb\\u52dd\\u5229\\uff01',\r\n    'game.tie': '\\u5e73\\u624b\\uff01',\r\n    'game.gameOverTitle': '\\u904a\\u6232\\u7d50\\u675f\\uff01',\r\n    'game.totalMoves': '\\u7e3d\\u6b65\\u6578',\r\n    'game.playAgain': '\\u518d\\u73a9\\u4e00\\u6b21',\r\n    'game.mainMenu': '\\u56de\\u4e3b\\u9078\\u55ae',\r\n    'menu.chooseMode': '\\ud83c\\udfaf \\u9078\\u64c7\\u904a\\u6232\\u6a21\\u5f0f',\r\n    'menu.pvp': '\\u73a9\\u5bb6\\u5c0d\\u73a9\\u5bb6',\r\n    'menu.pvc': '\\u73a9\\u5bb6\\u5c0d\\u96fb\\u8166',\r\n    'menu.settings': '\\u8a2d\\u5b9a',\r\n    'menu.help': '\\u73a9\\u6cd5\\u8aaa\\u660e',\r\n    'menu.back': '\\u2190 \\u8fd4\\u56de\\u9078\\u55ae',\r\n    'menu.selectDifficulty': '\\ud83e\\udd16 \\u9078\\u64c7AI\\u96e3\\u5ea6',\r\n    'menu.easy': '\\u7c21\\u55ae',\r\n    'menu.medium': '\\u4e2d\\u7b49',\r\n    'menu.hard': '\\u56f0\\u96e3',\r\n    'menu.easyDesc': '\\u7c21\\u55ae\\uff1aAI\\u96a8\\u6a5f\\u4e0b\\u5408\\u6cd5\\u68cb',\r\n    'menu.mediumDesc': '\\u4e2d\\u7b49\\uff1aAI\\u8a66\\u8457\\u6700\\u5927\\u5316\\u7ffb\\u5b50',\r\n    'menu.hardDesc': '\\u56f0\\u96e3\\uff1aAI\\u4f7f\\u7528\\u9032\\u968e\\u7b56\\u7565',\r\n    'menu.startGame': '\\u958b\\u59cb\\u904a\\u6232',\r\n    'settings.title': '\\u2699\\ufe0f \\u8a2d\\u5b9a',\r\n    'settings.language': '\\u8a9e\\u8a00',\r\n    'settings.visual': '\\u8996\\u89ba\\u8a2d\\u5b9a',\r\n    'settings.showValid': '\\u986f\\u793a\\u53ef\\u4e0b\\u4f4d\\u7f6e',\r\n    'settings.showLast': '\\u6a19\\u793a\\u4e0a\\u4e00\\u624b',\r\n    'settings.showMobility': '\\u986f\\u793a\\u884c\\u52d5\\u529b',\r\n    'settings.animations': '\\u555f\\u7528\\u52d5\\u756b',\r\n    'settings.game': '\\u904a\\u6232\\u8a2d\\u5b9a',\r\n    'settings.autoPass': '\\u7121\\u68cb\\u53ef\\u4e0b\\u81ea\\u52d5\\u8df3\\u904e',\r\n    'settings.confirm': '\\u8207\\u96fb\\u8166\\u5c0d\\u6230\\u6642\\u78ba\\u8a8d\\u843d\\u5b50',\r\n    'settings.save': '\\u4fdd\\u5b58\\u8a2d\\u5b9a',\r\n    'settings.saved': '\\u8a2d\\u5b9a\\u5df2\\u4fdd\\u5b58\\uff01',\r\n    'help.title': '\\u2753 \\u5982\\u4f55\\u904a\\u73a9\\u9ed1\\u767d\\u68cb',\r\n    'help.objectiveTitle': '\\ud83c\\udfaf \\u76ee\\u6a19',\r\n    'help.objectiveText': '\\u904a\\u6232\\u7d50\\u675f\\u6642\\u68cb\\u5b50\\u6578\\u6700\\u591a\\u8005\\u7372\\u52dd\\u3002',\r\n    'help.rulesTitle': '\\ud83d\\udccb \\u898f\\u5247',\r\n    'help.rules1': '\\u9ed1\\u68cb\\u5148\\u884c',\r\n    'help.rules2': '\\u593e\\u4f4f\\u5c0d\\u65b9\\u68cb\\u5b50\\u4ee5\\u7ffb\\u8f49',\r\n    'help.rules3': '\\u53ef\\u5411\\u516b\\u500b\\u65b9\\u5411\\u7ffb\\u68cb',\r\n    'help.rules4': '\\u81f3\\u5c11\\u7ffb\\u4e00\\u5b50\\u624d\\u80fd\\u843d\\u5b50',\r\n    'help.rules5': '\\u7121\\u68cb\\u53ef\\u4e0b\\u6642\\u9808\\u8df3\\u904e',\r\n    'help.rules6': '\\u96d9\\u65b9\\u7686\\u7121\\u68cb\\u53ef\\u4e0b\\u6642\\u904a\\u6232\\u7d50\\u675f',\r\n    'help.strategyTitle': '\\ud83d\\udca1 \\u7b56\\u7565',\r\n    'help.strategy1': '<strong>\\u89d2\\u843d\\uff1a</strong> \\u4e0d\\u6703\\u88ab\\u7ffb\\u8f49\\uff01',\r\n    'help.strategy2': '<strong>\\u908a\\u7de3\\uff1a</strong> \\u8f03\\u4e0d\\u6613\\u88ab\\u7ffb',\r\n    'help.strategy3': '<strong>\\u884c\\u52d5\\u529b\\uff1a</strong> \\u9650\\u5236\\u5c0d\\u624b\\u843d\\u5b50',\r\n    'help.strategy4': '<strong>\\u8010\\u5fc3\\uff1a</strong> \\u6709\\u6642\\u5c11\\u537b\\u662f\\u591a',\r\n    'help.controlsTitle': '\\ud83c\\udfae \\u64cd\\u4f5c',\r\n    'help.controls1': '\\u9ede\\u64ca\\u9ad8\\u4eae\\u683c\\u5b50\\u843d\\u5b50',\r\n    'help.controls2': '\\u7da0\\u8272 = \\u53ef\\u4e0b\\u4f4d\\u7f6e',\r\n    'help.controls3': '\\u91d1\\u8272 = \\u4e0a\\u4e00\\u6b65',\r\n    'messages.quitConfirm': '\\u78ba\\u5b9a\\u8981\\u7d50\\u675f\\u76ee\\u524d\\u7684\\u904a\\u6232\\u55ce\\uff1f',\r\n    'messages.moveConfirm': '\\u78ba\\u5b9a\\u9019\\u4e00\\u6b65\\u55ce\\uff1f',\r\n    'messages.invalidMove': '\\u7121\\u6548\\u7684\\u843d\\u5b50',\r\n    'difficulty.easy': '\\u7c21\\u55ae',\r\n    'difficulty.medium': '\\u4e2d\\u7b49',\r\n    'difficulty.hard': '\\u56f0\\u96e3',\r\n    'combo.counter': '${count} \\u9023\\u64ca\\uff01',\r\n    'combo.double': '\\u96d9\\u661f\\u7206\\u64ca\\uff01',\r\n    'combo.triple': '\\u4e09\\u9023\\u98a8\\u66b4\\uff01',\r\n    'combo.quadruple': '\\u56db\\u6975\\u708e\\u821e\\uff01',\r\n    'combo.quintuple': '\\u4e94\\u8292\\u96f7\\u9cf4\\uff01',\r\n    'combo.sextuple': '\\u516d\\u9053\\u72c2\\u6012\\uff01',\r\n    'combo.septuple': '\\u4e03\\u661f\\u6bc0\\u6ec5\\uff01',\r\n    'special.corner_joseki': '\\u89d2\\u90e8\\u5b9a\\u5f0f\\uff01',\r\n    'special.great_reversal': '\\u5927\\u7ffb\\u76d8\\uff01',\r\n    'special.total_domination': '\\u5b8c\\u5168\\u538b\\u5236\\uff01',\r\n    'special.desperate_kill': '\\u7d55\\u5730\\u53cd\\u6740\\uff01',\r\n    'special.perfect_endgame': '\\u5b8c\\u7f8e\\u6536\\u5b98\\uff01',\r\n    'special.edge_control': '\\u908a\\u7dda\\u638c\\u63a7\\uff01',\r\n    'special.chain_reaction': '\\u9023\\u9396\\u53cd\\u61c9\\uff01',\r\n    'special.time_control': '\\u6642\\u9593\\u638c\\u63a7\\uff01',\r\n    'special.corner_joseki.subtitle': '\\u89d2\\u90e8\\u5b9a\\u5f0f',\r\n    'special.great_reversal.subtitle': '\\u5927\\u7ffb\\u76d8',\r\n    'special.total_domination.subtitle': '\\u5b8c\\u5168\\u538b\\u5236',\r\n    'special.desperate_kill.subtitle': '\\u7d55\\u5730\\u53cd\\u6740',\r\n    'special.perfect_endgame.subtitle': '\\u5b8c\\u7f8e\\u6536\\u5b98',\r\n    'special.edge_control.subtitle': '\\u908a\\u7dda\\u638c\\u63a7',\r\n    'special.chain_reaction.subtitle': '\\u9023\\u9396\\u53cd\\u61c9',\r\n    'special.time_control.subtitle': '\\u6642\\u9593\\u638c\\u63a7',\r\n    // Modal 通用按鈕\r\n    'modal.ok': '\\u78ba\\u5b9a',\r\n    'modal.cancel': '\\u53d6\\u6d88',\r\n    'modal.confirm': '\\u78ba\\u8a8d',\r\n    'modal.yes': '\\u662f',\r\n    'modal.no': '\\u5426',\r\n    // Modal 標題\r\n    'modal.info': '\\u8cc7\\u8a0a',\r\n    'modal.warning': '\\u8b66\\u544a',\r\n    'modal.error': '\\u932f\\u8aa4',\r\n    'modal.success': '\\u6210\\u529f',\r\n    'modal.confirm.title': '\\u78ba\\u8a8d',\r\n    // 特定訊息\r\n    'modal.settingsComing': '\\u8a2d\\u5b9a\\u529f\\u80fd\\u5373\\u5c07\\u63a8\\u51fa\\uff01',\r\n    'modal.testClick': '\\u4f60\\u9ede\\u64ca\\u4e86\\u4f4d\\u7f6e ${position}',\r\n    'modal.appWorking': '\\u61c9\\u7528\\u7a0b\\u5f0f\\u904b\\u4f5c\\u6b63\\u5e38\\uff01',\r\n    'modal.moveConfirm.title': '\\u78ba\\u8a8d\\u79fb\\u52d5',\r\n    'modal.quitConfirm.title': '\\u9000\\u51fa\\u904a\\u6232',\r\n    'modal.settingsSaved.title': '\\u8a2d\\u5b9a\\u5df2\\u5132\\u5b58'\r\n  },\r\n  'zh-Hans': {\r\n    'loading.title': '\\u6b63\\u5728\\u52a0\\u8f7d\\u8d85\\u7ea7\\u9ed1\\u767d\\u68cb...',\r\n    'loading.details': '\\u6b63\\u5728\\u521d\\u59cb\\u5316\\u6e38\\u620f\\u5f15\\u64ce\\u548c\\u4eba\\u5de5\\u667a\\u80fd\\u7cfb\\u7edf',\r\n    'app.title': '\\ud83c\\udfae \\u8d85\\u7ea7\\u9ed1\\u767d\\u68cb',\r\n    'game.black': '\\u9ed1\\u68cb',\r\n    'game.white': '\\u767d\\u68cb',\r\n    'game.current': '\\u5f53\\u524d',\r\n    'game.currentTurn': '\\u5f53\\u524d\\u56de\\u5408\\uff1a',\r\n    'game.mode': '\\u6a21\\u5f0f',\r\n    'game.pvp': '\\u73a9\\u5bb6\\u5bf9\\u6218',\r\n    'game.pvai': '\\u73a9\\u5bb6\\u5bf9\\u7535\\u8111',\r\n    'game.back': '\\u2190 \\u8fd4\\u56de\\u83dc\\u5355',\r\n    'game.blackWins': '\\u9ed1\\u68cb\\u80dc\\u5229\\uff01',\r\n    'game.whiteWins': '\\u767d\\u68cb\\u80dc\\u5229\\uff01',\r\n    'game.tie': '\\u5e73\\u5c40\\uff01',\r\n    'game.gameOverTitle': '\\u6e38\\u620f\\u7ed3\\u675f\\uff01',\r\n    'game.totalMoves': '\\u603b\\u6b65\\u6570',\r\n    'game.playAgain': '\\u518d\\u73a9\\u4e00\\u6b21',\r\n    'game.mainMenu': '\\u56de\\u4e3b\\u83dc\\u5355',\r\n    'menu.chooseMode': '\\ud83c\\udfaf \\u9009\\u62e9\\u6e38\\u620f\\u6a21\\u5f0f',\r\n    'menu.pvp': '\\u73a9\\u5bb6\\u5bf9\\u73a9\\u5bb6',\r\n    'menu.pvc': '\\u73a9\\u5bb6\\u5bf9\\u7535\\u8111',\r\n    'menu.settings': '\\u8bbe\\u7f6e',\r\n    'menu.help': '\\u73a9\\u6cd5\\u8bf4\\u660e',\r\n    'menu.back': '\\u2190 \\u8fd4\\u56de\\u83dc\\u5355',\r\n    'menu.selectDifficulty': '\\ud83e\\udd16 \\u9009\\u62e9AI\\u96be\\u5ea6',\r\n    'menu.easy': '\\u7b80\\u5355',\r\n    'menu.medium': '\\u4e2d\\u7b49',\r\n    'menu.hard': '\\u56f0\\u96be',\r\n    'menu.easyDesc': '\\u7b80\\u5355\\uff1aAI\\u968f\\u673a\\u4e0b\\u5408\\u6cd5\\u68cb',\r\n    'menu.mediumDesc': '\\u4e2d\\u7b49\\uff1aAI\\u5c1d\\u8bd5\\u6700\\u5927\\u5316\\u7ffb\\u5b50',\r\n    'menu.hardDesc': '\\u56f0\\u96be\\uff1aAI\\u4f7f\\u7528\\u9ad8\\u7ea7\\u7b56\\u7565',\r\n    'menu.startGame': '\\u5f00\\u59cb\\u6e38\\u620f',\r\n    'settings.title': '\\u2699\\ufe0f \\u8bbe\\u7f6e',\r\n    'settings.language': '\\u8bed\\u8a00',\r\n    'settings.visual': '\\u89c6\\u89c9\\u8bbe\\u7f6e',\r\n    'settings.showValid': '\\u663e\\u793a\\u53ef\\u4e0b\\u4f4d\\u7f6e',\r\n    'settings.showLast': '\\u6807\\u8bb0\\u4e0a\\u4e00\\u6b65',\r\n    'settings.showMobility': '\\u663e\\u793a\\u884c\\u52a8\\u529b',\r\n    'settings.animations': '\\u542f\\u7528\\u52a8\\u753b',\r\n    'settings.game': '\\u6e38\\u620f\\u8bbe\\u7f6e',\r\n    'settings.autoPass': '\\u65e0\\u68cb\\u53ef\\u4e0b\\u81ea\\u52a8\\u8df3\\u8fc7',\r\n    'settings.confirm': '\\u4e0e\\u7535\\u8111\\u5bf9\\u6218\\u65f6\\u786e\\u8ba4\\u843d\\u5b50',\r\n    'settings.save': '\\u4fdd\\u5b58\\u8bbe\\u7f6e',\r\n    'settings.saved': '\\u8bbe\\u7f6e\\u5df2\\u4fdd\\u5b58\\uff01',\r\n    'help.title': '\\u2753 \\u5982\\u4f55\\u73a9\\u9ed1\\u767d\\u68cb',\r\n    'help.objectiveTitle': '\\ud83c\\udfaf \\u76ee\\u6807',\r\n    'help.objectiveText': '\\u6e38\\u620f\\u7ed3\\u675f\\u65f6\\u68cb\\u5b50\\u6570\\u6700\\u591a\\u8005\\u83b7\\u80dc\\u3002',\r\n    'help.rulesTitle': '\\ud83d\\udccb \\u89c4\\u5219',\r\n    'help.rules1': '\\u9ed1\\u68cb\\u5148\\u884c',\r\n    'help.rules2': '\\u5939\\u4f4f\\u5bf9\\u65b9\\u68cb\\u5b50\\u4ee5\\u7ffb\\u8f6c',\r\n    'help.rules3': '\\u53ef\\u5411\\u516b\\u4e2a\\u65b9\\u5411\\u7ffb\\u68cb',\r\n    'help.rules4': '\\u81f3\\u5c11\\u7ffb\\u4e00\\u5b50\\u624d\\u80fd\\u843d\\u5b50',\r\n    'help.rules5': '\\u65e0\\u68cb\\u53ef\\u4e0b\\u65f6\\u987b\\u8df3\\u8fc7',\r\n    'help.rules6': '\\u53cc\\u65b9\\u5747\\u65e0\\u68cb\\u53ef\\u4e0b\\u65f6\\u6e38\\u620f\\u7ed3\\u675f',\r\n    'help.strategyTitle': '\\ud83d\\udca1 \\u7b56\\u7565',\r\n    'help.strategy1': '<strong>\\u89d2\\u843d\\uff1a</strong> \\u4e0d\\u4f1a\\u88ab\\u7ffb\\u8f6c\\uff01',\r\n    'help.strategy2': '<strong>\\u8fb9\\u7f18\\uff1a</strong> \\u8f83\\u4e0d\\u6613\\u88ab\\u7ffb',\r\n    'help.strategy3': '<strong>\\u884c\\u52a8\\u529b\\uff1a</strong> \\u9650\\u5236\\u5bf9\\u624b\\u843d\\u5b50',\r\n    'help.strategy4': '<strong>\\u8010\\u5fc3\\uff1a</strong> \\u6709\\u65f6\\u5c11\\u5374\\u662f\\u591a',\r\n    'help.controlsTitle': '\\ud83c\\udfae \\u64cd\\u4f5c',\r\n    'help.controls1': '\\u70b9\\u51fb\\u9ad8\\u4eae\\u683c\\u5b50\\u843d\\u5b50',\r\n    'help.controls2': '\\u7eff\\u8272 = \\u53ef\\u4e0b\\u4f4d\\u7f6e',\r\n    'help.controls3': '\\u91d1\\u8272 = \\u4e0a\\u4e00\\u6b65',\r\n    'messages.quitConfirm': '\\u786e\\u5b9a\\u8981\\u7ed3\\u675f\\u5f53\\u524d\\u7684\\u6e38\\u620f\\u5417\\uff1f',\r\n    'messages.moveConfirm': '\\u786e\\u8ba4\\u8fd9\\u4e00\\u6b65\\u5417\\uff1f',\r\n    'messages.invalidMove': '\\u65e0\\u6548\\u7684\\u843d\\u5b50',\r\n    'difficulty.easy': '\\u7b80\\u5355',\r\n    'difficulty.medium': '\\u4e2d\\u7b49',\r\n    'difficulty.hard': '\\u56f0\\u96be',\r\n    'combo.counter': '${count} \\u8fde\\u51fb\\uff01',\r\n    'combo.double': '\\u53cc\\u661f\\u7206\\u51fb\\uff01',\r\n    'combo.triple': '\\u4e09\\u8fde\\u98ce\\u66b4\\uff01',\r\n    'combo.quadruple': '\\u56db\\u6781\\u708e\\u821e\\uff01',\r\n    'combo.quintuple': '\\u4e94\\u8292\\u96f7\\u9e23\\uff01',\r\n    'combo.sextuple': '\\u516d\\u9053\\u72c2\\u6012\\uff01',\r\n    'combo.septuple': '\\u4e03\\u661f\\u6bc1\\u706d\\uff01',\r\n    'special.corner_joseki': '\\u89d2\\u90e8\\u5b9a\\u5f0f\\uff01',\r\n    'special.great_reversal': '\\u5927\\u7ffb\\u76d8\\uff01',\r\n    'special.total_domination': '\\u5b8c\\u5168\\u538b\\u5236\\uff01',\r\n    'special.desperate_kill': '\\u7d55\\u5730\\u53cd\\u6740\\uff01',\r\n    'special.perfect_endgame': '\\u5b8c\\u7f8e\\u6536\\u5b98\\uff01',\r\n    'special.edge_control': '\\u908a\\u7dda\\u638c\\u63a7\\uff01',\r\n    'special.chain_reaction': '\\u8fde\\u9396\\u53cd\\u61c9\\uff01',\r\n    'special.time_control': '\\u6642\\u9593\\u638c\\u63a7\\uff01',\r\n    'special.corner_joseki.subtitle': '\\u89d2\\u90e8\\u5b9a\\u5f0f',\r\n    'special.great_reversal.subtitle': '\\u5927\\u7ffb\\u76d8',\r\n    'special.total_domination.subtitle': '\\u5b8c\\u5168\\u538b\\u5236',\r\n    'special.desperate_kill.subtitle': '\\u7d55\\u5730\\u53cd\\u6740',\r\n    'special.perfect_endgame.subtitle': '\\u5b8c\\u7f8e\\u6536\\u5b98',\r\n    'special.edge_control.subtitle': '\\u908a\\u7dda\\u638c\\u63a7',\r\n    'special.chain_reaction.subtitle': '\\u8fde\\u9396\\u53cd\\u61c9',\r\n    'special.time_control.subtitle': '\\u6642\\u9593\\u638c\\u63a7',\r\n    // Modal 通用按鈕\r\n    'modal.ok': '\\u786e\\u5b9a',\r\n    'modal.cancel': '\\u53d6\\u6d88',\r\n    'modal.confirm': '\\u786e\\u8ba4',\r\n    'modal.yes': '\\u662f',\r\n    'modal.no': '\\u5426',\r\n    // Modal 標題\r\n    'modal.info': '\\u4fe1\\u606f',\r\n    'modal.warning': '\\u8b66\\u544a',\r\n    'modal.error': '\\u9519\\u8bef',\r\n    'modal.success': '\\u6210\\u529f',\r\n    'modal.confirm.title': '\\u786e\\u8ba4',\r\n    // 特定訊息\r\n    'modal.settingsComing': '\\u8bbe\\u7f6e\\u529f\\u80fd\\u5373\\u5c06\\u63a8\\u51fa\\uff01',\r\n    'modal.testClick': '\\u4f60\\u70b9\\u51fb\\u4e86\\u4f4d\\u7f6e ${position}',\r\n    'modal.appWorking': '\\u5e94\\u7528\\u7a0b\\u5e8f\\u8fd0\\u884c\\u6b63\\u5e38\\uff01',\r\n    'modal.moveConfirm.title': '\\u786e\\u8ba4\\u79fb\\u52a8',\r\n    'modal.quitConfirm.title': '\\u9000\\u51fa\\u6e38\\u620f',\r\n    'modal.settingsSaved.title': '\\u8bbe\\u7f6e\\u5df2\\u4fdd\\u5b58'\r\n  },\r\n};\r\n\r\nexport function t(key: string, params?: Record<string, string | number>): string {\r\n  let translation = translations[currentLanguage][key] ?? key;\r\n  if (params) {\r\n    translation = translation.replace(/\\$\\{(\\w+)\\}/g, (_, k) =>\r\n      Object.prototype.hasOwnProperty.call(params, k) ? String(params[k]) : ''\r\n    );\r\n  }\r\n  return translation;\r\n}\r\n\r\nexport function setLanguage(lang: Language): void {\r\n  if (translations[lang]) {\r\n    currentLanguage = lang;\r\n    if (typeof document !== 'undefined') {\r\n      document.documentElement.lang = lang;\r\n    }\r\n  }\r\n}\r\n\r\nexport function getLanguage(): Language {\r\n  return currentLanguage;\r\n}\r\n\r\nexport function applyTranslations(root: ParentNode = document): void {\r\n  const elements = root.querySelectorAll<HTMLElement>('[data-i18n]');\r\n  elements.forEach(el => {\r\n    const key = el.dataset.i18n!;\r\n    el.textContent = t(key);\r\n  });\r\n}\r\n","/**\r\n * 連擊系統\r\n * 追蹤玩家連續下棋狀態並觸發相應特效\r\n */\r\n\r\nimport type { PlayerColor } from '@/types/game-types';\r\nimport { ParticlePresetType, getPresetForSpecialMove, blendPresets, PARTICLE_PRESETS } from './particle-presets';\r\nimport { t } from '@/i18n';\r\n\r\nexport interface ComboState {\r\n  /** 連擊次數 */\r\n  count: number;\r\n  /** 當前連擊玩家 */\r\n  player: PlayerColor | null;\r\n  /** 連擊倍數 */\r\n  multiplier: number;\r\n  /** 連擊開始時間 */\r\n  startTime: number;\r\n  /** 是否處於連擊狀態 */\r\n  isActive: boolean;\r\n  /** 最高連擊記錄 */\r\n  maxCombo: number;\r\n  /** 連擊類型 */\r\n  type: ComboType;\r\n}\r\n\r\nexport type ComboType =\r\n  | 'none'\r\n  | 'double'\r\n  | 'triple'\r\n  | 'quadruple'\r\n  | 'quintuple'\r\n  | 'sextuple'\r\n  | 'septuple';\r\n\r\nexport interface ComboEffect {\r\n  /** 特效類型 */\r\n  effectType: ParticlePresetType;\r\n  /** 強度倍數 */\r\n  intensity: number;\r\n  /** 持續時間 */\r\n  duration: number;\r\n  /** 特殊音效 */\r\n  soundEffect?: string;\r\n  /** 螢幕震動 */\r\n  screenShake?: boolean;\r\n  /** 慢動作效果 */\r\n  slowMotion?: boolean;\r\n}\r\n\r\nexport interface ComboEvent {\r\n  type: 'combo_started' | 'combo_continued' | 'combo_ended' | 'combo_broken';\r\n  player: PlayerColor;\r\n  comboCount: number;\r\n  comboType: ComboType;\r\n  effect?: ComboEffect;\r\n  timestamp: number;\r\n}\r\n\r\n/**\r\n * 連擊等級配置\r\n */\r\nexport const COMBO_LEVELS: Record<ComboType, ComboEffect> = {\r\n  none: {\r\n    effectType: 'snowflake',\r\n    intensity: 1.0,\r\n    duration: 500,\r\n  },\r\n  double: {\r\n    effectType: 'magic',\r\n    intensity: 1.5,\r\n    duration: 800,\r\n    soundEffect: 'combo_double',\r\n  },\r\n  triple: {\r\n    effectType: 'fire',\r\n    intensity: 2.0,\r\n    duration: 1200,\r\n    soundEffect: 'combo_triple',\r\n    screenShake: true,\r\n  },\r\n  quadruple: {\r\n    effectType: 'explosion',\r\n    intensity: 2.5,\r\n    duration: 1500,\r\n    soundEffect: 'combo_quadruple',\r\n    screenShake: true,\r\n  },\r\n  quintuple: {\r\n    effectType: 'lightning',\r\n    intensity: 3.0,\r\n    duration: 1800,\r\n    soundEffect: 'combo_quintuple',\r\n    screenShake: true,\r\n    slowMotion: false,\r\n  },\r\n  sextuple: {\r\n    effectType: 'storm',\r\n    intensity: 4.0,\r\n    duration: 2200,\r\n    soundEffect: 'combo_sextuple',\r\n    screenShake: true,\r\n    slowMotion: true,\r\n  },\r\n  septuple: {\r\n    effectType: 'blackhole',\r\n    intensity: 5.0,\r\n    duration: 2500,\r\n    soundEffect: 'combo_septuple',\r\n    screenShake: true,\r\n    slowMotion: true,\r\n  }\r\n};\r\n\r\n/**\r\n * 連擊系統主類\r\n */\r\nexport class ComboSystem {\r\n  private _state: ComboState;\r\n  private _eventHandlers: ((event: ComboEvent) => void)[] = [];\r\n  private _history: ComboEvent[] = [];\r\n\r\n  constructor() {\r\n    this._state = this.createInitialState();\r\n  }\r\n\r\n  /**\r\n   * 創建初始狀態\r\n   */\r\n  private createInitialState(): ComboState {\r\n    return {\r\n      count: 0,\r\n      player: null,\r\n      multiplier: 1.0,\r\n      startTime: 0,\r\n      isActive: false,\r\n      maxCombo: 0,\r\n      type: 'none'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 獲取當前連擊狀態\r\n   */\r\n  get state(): Readonly<ComboState> {\r\n    return Object.freeze({ ...this._state });\r\n  }\r\n\r\n  /**\r\n   * 獲取連擊歷史\r\n   */\r\n  get history(): readonly ComboEvent[] {\r\n    return Object.freeze([...this._history]);\r\n  }\r\n\r\n  /**\r\n   * 處理玩家移動\r\n   * @param player 當前玩家\r\n   * @param opponentCanMove 對手是否能移動\r\n   * @param moveScore 當前移動分數\r\n   */\r\n  processMove(player: PlayerColor, opponentCanMove: boolean, moveScore?: number): ComboEvent | null {\r\n    console.log(`🔥 Combo: 處理移動 - Player: ${player}, 對手可移動: ${opponentCanMove}, 分數: ${moveScore}`);\r\n\r\n    // 如果對手能移動，重置連擊\r\n    if (opponentCanMove) {\r\n      console.log('🔥 Combo: 對手可移動，結束連擊');\r\n      return this.endCombo();\r\n    } else {\r\n      console.log('🔥 Combo: 對手無法移動，繼續連擊！');\r\n    }\r\n\r\n    // 檢查是否是同一玩家繼續連擊\r\n    if (this._state.player === player) {\r\n      return this.continueCombo(moveScore);\r\n    } else {\r\n      // 新玩家開始連擊\r\n      return this.startCombo(player, moveScore);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 開始新連擊\r\n   */\r\n  private startCombo(player: PlayerColor, moveScore?: number): ComboEvent {\r\n    // 結束之前的連擊\r\n    if (this._state.isActive) {\r\n      this.endCombo();\r\n    }\r\n\r\n    this._state = {\r\n      count: 2, // 第一次連擊至少是2回合\r\n      player,\r\n      multiplier: 1.2,\r\n      startTime: Date.now(),\r\n      isActive: true,\r\n      maxCombo: Math.max(this._state.maxCombo, 2),\r\n      type: 'double'\r\n    };\r\n\r\n    const event: ComboEvent = {\r\n      type: 'combo_started',\r\n      player,\r\n      comboCount: this._state.count,\r\n      comboType: this._state.type,\r\n      effect: this.getComboEffect(),\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    this._emitEvent(event);\r\n    this._history.push(event);\r\n\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * 繼續連擊\r\n   */\r\n  private continueCombo(moveScore?: number): ComboEvent {\r\n    if (!this._state.isActive || !this._state.player) {\r\n      throw new Error('Cannot continue combo: no active combo');\r\n    }\r\n\r\n    this._state.count++;\r\n    this._state.multiplier = Math.min(1.0 + (this._state.count * 0.2), 3.0);\r\n    this._state.maxCombo = Math.max(this._state.maxCombo, this._state.count);\r\n    this._state.type = this.determineComboType(this._state.count);\r\n\r\n    const event: ComboEvent = {\r\n      type: 'combo_continued',\r\n      player: this._state.player,\r\n      comboCount: this._state.count,\r\n      comboType: this._state.type,\r\n      effect: this.getComboEffect(),\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    this._emitEvent(event);\r\n    this._history.push(event);\r\n\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * 結束連擊\r\n   */\r\n  private endCombo(): ComboEvent | null {\r\n    if (!this._state.isActive || !this._state.player) {\r\n      return null;\r\n    }\r\n\r\n    const event: ComboEvent = {\r\n      type: 'combo_ended',\r\n      player: this._state.player,\r\n      comboCount: this._state.count,\r\n      comboType: this._state.type,\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    // 重置狀態\r\n    this._state = this.createInitialState();\r\n    this._state.maxCombo = this.state.maxCombo; // 保持最高記錄\r\n\r\n    this._emitEvent(event);\r\n    this._history.push(event);\r\n\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * 強制中斷連擊\r\n   */\r\n  breakCombo(reason: string = 'manual'): ComboEvent | null {\r\n    if (!this._state.isActive || !this._state.player) {\r\n      return null;\r\n    }\r\n\r\n    const event: ComboEvent = {\r\n      type: 'combo_broken',\r\n      player: this._state.player,\r\n      comboCount: this._state.count,\r\n      comboType: this._state.type,\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    this._state = this.createInitialState();\r\n    this._state.maxCombo = this.state.maxCombo;\r\n\r\n    this._emitEvent(event);\r\n    this._history.push(event);\r\n\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * 判斷連擊類型\r\n   */\r\n  private determineComboType(count: number): ComboType {\r\n    if (count >= 7) return 'septuple';\r\n    if (count >= 6) return 'sextuple';\r\n    if (count >= 5) return 'quintuple';\r\n    if (count >= 4) return 'quadruple';\r\n    if (count >= 3) return 'triple';\r\n    if (count >= 2) return 'double';\r\n    return 'none';\r\n  }\r\n\r\n  /**\r\n   * 獲取連擊特效配置\r\n   */\r\n  private getComboEffect(): ComboEffect {\r\n    const baseEffect = COMBO_LEVELS[this._state.type];\r\n\r\n    // 根據連擊次數調整強度\r\n    const intensityBonus = Math.min(this._state.count * 0.1, 1.0);\r\n\r\n    return {\r\n      ...baseEffect,\r\n      intensity: baseEffect.intensity + intensityBonus,\r\n      duration: baseEffect.duration + (this._state.count * 50)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 獲取連擊統計\r\n   */\r\n  getStats(): {\r\n    currentCombo: number;\r\n    maxCombo: number;\r\n    totalCombos: number;\r\n    averageComboLength: number;\r\n    comboTypeDistribution: Record<ComboType, number>;\r\n  } {\r\n    const combos = this._history.filter(e => e.type === 'combo_ended' || e.type === 'combo_broken');\r\n    const totalCombos = combos.length;\r\n    const averageLength = totalCombos > 0\r\n      ? combos.reduce((sum, combo) => sum + combo.comboCount, 0) / totalCombos\r\n      : 0;\r\n\r\n    const distribution: Record<ComboType, number> = {\r\n      none: 0,\r\n      double: 0,\r\n      triple: 0,\r\n      quadruple: 0,\r\n      quintuple: 0,\r\n      sextuple: 0,\r\n      septuple: 0\r\n    };\r\n\r\n    combos.forEach(combo => {\r\n      distribution[combo.comboType]++;\r\n    });\r\n\r\n    return {\r\n      currentCombo: this._state.count,\r\n      maxCombo: this._state.maxCombo,\r\n      totalCombos,\r\n      averageComboLength: averageLength,\r\n      comboTypeDistribution: distribution\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 獲取連擊建議特效\r\n   */\r\n  getSuggestedEffect(comboType: ComboType): ParticlePresetType {\r\n    switch (comboType) {\r\n      case 'septuple':\r\n        return 'blackhole';\r\n      case 'sextuple':\r\n        return 'storm';\r\n      case 'quintuple':\r\n        return 'lightning';\r\n      case 'quadruple':\r\n        return 'explosion';\r\n      case 'triple':\r\n        return 'fire';\r\n      case 'double':\r\n        return 'magic';\r\n      default:\r\n        return 'snowflake';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 檢查是否應該播放特殊音效\r\n   */\r\n  shouldPlaySpecialSound(comboType: ComboType): boolean {\r\n    return !['none', 'double'].includes(comboType);\r\n  }\r\n\r\n  /**\r\n   * 檢查是否應該觸發螢幕震動\r\n   */\r\n  shouldTriggerScreenShake(comboType: ComboType): boolean {\r\n    return ['quintuple', 'sextuple', 'septuple'].includes(comboType);\r\n  }\r\n\r\n  /**\r\n   * 檢查是否應該觸發慢動作效果\r\n   */\r\n  shouldTriggerSlowMotion(comboType: ComboType): boolean {\r\n    return comboType === 'septuple';\r\n  }\r\n\r\n  /**\r\n   * 重置系統\r\n   */\r\n  reset(): void {\r\n    this._state = this.createInitialState();\r\n    this._history = [];\r\n  }\r\n\r\n  /**\r\n   * 註冊事件處理器\r\n   */\r\n  addEventListener(handler: (event: ComboEvent) => void): void {\r\n    this._eventHandlers.push(handler);\r\n  }\r\n\r\n  /**\r\n   * 移除事件處理器\r\n   */\r\n  removeEventListener(handler: (event: ComboEvent) => void): void {\r\n    const index = this._eventHandlers.indexOf(handler);\r\n    if (index !== -1) {\r\n      this._eventHandlers.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 發送事件\r\n   */\r\n  private _emitEvent(event: ComboEvent): void {\r\n    this._eventHandlers.forEach(handler => {\r\n      try {\r\n        handler(event);\r\n      } catch (error) {\r\n        console.error('Combo event handler error:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 獲取連擊顯示文本\r\n   */\r\n  getComboDisplayText(): string {\r\n    if (!this._state.isActive) return '';\r\n\r\n    const key = `combo.${this._state.type}`;\r\n    const text = t(key);\r\n    return text === key ? `${this._state.count} combo!` : text;\r\n  }\r\n\r\n  /**\r\n   * 獲取連擊顏色\r\n   */\r\n  getComboDisplayColor(): string {\r\n    const colors = {\r\n      none: '#ffffff',\r\n      double: '#90ee90',\r\n      triple: '#ffa500',\r\n      quadruple: '#ff6347',\r\n      quintuple: '#ff1493',\r\n      sextuple: '#9932cc',\r\n      septuple: '#ffd700'\r\n    };\r\n\r\n    return colors[this._state.type as keyof typeof colors] || '#ffffff';\r\n  }\r\n}","/**\r\n * 必殺技特效系統\r\n * 處理角落支配、大規模翻轉、完美遊戲、逆轉等特殊招式\r\n */\r\n\r\nimport type { PlayerColor, BoardPosition } from '@/types/game-types';\r\nimport { ParticlePresetType, ParticlePresetConfig, PARTICLE_PRESETS, blendPresets } from './particle-presets';\r\nimport { t } from '@/i18n';\r\n\r\nexport type SpecialMoveType =\r\n  | 'corner_joseki'    // 角部定式 - 经典角部布局\r\n  | 'great_reversal'   // 大翻盘 - 乾坤大挪移，局势逆转\r\n  | 'total_domination' // 完全压制 - 如臂使指，掌控全局\r\n  | 'desperate_kill'   // 绝地反杀 - 绝境求生，反败为胜\r\n  | 'perfect_endgame'  // 完美收官 - 收官如神，无懈可击\r\n  | 'edge_control'     // 边线掌控 - 边线为王，稳扎稳打\r\n  | 'chain_reaction'   // 连锁反应 - 环环相扣，精妙计算\r\n  | 'time_control';    // 时间掌控 - 运筹帷幄，决胜千里\r\n\r\nexport interface SpecialMoveCondition {\r\n  /** 翻轉棋子數量要求 */\r\n  minFlipCount?: number;\r\n  /** 分數差距要求 */\r\n  scoreDifference?: { min: number; max: number };\r\n  /** 位置要求 */\r\n  positionType?: 'corner' | 'edge' | 'center';\r\n  /** 時機要求 */\r\n  timing?: 'early' | 'mid' | 'late';\r\n  /** 特殊條件 */\r\n  special?: string;\r\n}\r\n\r\nexport interface SpecialMoveEffect {\r\n  /** 特效類型 */\r\n  type: SpecialMoveType;\r\n  /** 粒子效果配置 */\r\n  particleEffect: ParticlePresetConfig;\r\n  /** 視覺效果 */\r\n  visual: {\r\n    screenShake: boolean;\r\n    slowMotion: boolean;\r\n    zoom: boolean;\r\n    cameraMovement: boolean;\r\n    colorFilter?: string;\r\n  };\r\n  /** 音效 */\r\n  audio: {\r\n    soundEffect: string;\r\n    volume: number;\r\n    echo?: boolean;\r\n    reverb?: boolean;\r\n  };\r\n  /** 持續時間 */\r\n  duration: number;\r\n  /** 文字顯示 */\r\n  display: {\r\n    title: string;\r\n    subtitle?: string;\r\n    color: string;\r\n    fontSize: number;\r\n    animation: 'fade' | 'zoom' | 'slide' | 'explode';\r\n  };\r\n}\r\n\r\n/**\r\n * 特殊招式檢測條件\r\n */\r\nexport const SPECIAL_MOVE_CONDITIONS: Record<SpecialMoveType, SpecialMoveCondition> = {\r\n  corner_joseki: {\r\n    positionType: 'corner',\r\n    minFlipCount: 3,\r\n    timing: 'early' as any\r\n  },\r\n  great_reversal: {\r\n    minFlipCount: 6, // 大翻盘需要至少6个棋子翻转\r\n  },\r\n  total_domination: {\r\n    scoreDifference: { min: 15, max: 999 }, // 完全压制需要领先15分以上\r\n    minFlipCount: 4 // 至少翻转4个棋子\r\n  },\r\n  desperate_kill: {\r\n    scoreDifference: { min: -15, max: -1 }, // 绝地反杀需要落后15分以内\r\n    minFlipCount: 4 // 至少翻转4个棋子实现反杀\r\n  },\r\n  perfect_endgame: {\r\n    scoreDifference: { min: 20, max: 999 }, // 完美收官需要大幅领先\r\n    special: 'near_endgame'\r\n  },\r\n  edge_control: {\r\n    positionType: 'edge',\r\n    minFlipCount: 5 // 边线掌控需要至少5个棋子翻转\r\n  },\r\n  chain_reaction: {\r\n    minFlipCount: 8, // 连锁反应需要至少8个棋子翻转\r\n    special: 'multiple_directions'\r\n  },\r\n  time_control: {\r\n    minFlipCount: 10, // 时间掌控需要至少10个棋子翻转\r\n    special: 'ultra_rare'\r\n  }\r\n};\r\n\r\n/**\r\n * 特殊招式效果配置\r\n */\r\nexport const SPECIAL_MOVE_EFFECTS: Record<SpecialMoveType, SpecialMoveEffect> = {\r\n  corner_joseki: {\r\n    type: 'corner_joseki',\r\n    particleEffect: blendPresets('explosion', 'magic', 0.7),\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: false,\r\n      zoom: true,\r\n      cameraMovement: true,\r\n      colorFilter: '#ffd700'\r\n    },\r\n    audio: {\r\n      soundEffect: 'corner_joseki',\r\n      volume: 0.8,\r\n      echo: true\r\n    },\r\n    duration: 1500,\r\n    display: {\r\n      title: t('special.corner_joseki'),\r\n      subtitle: t('special.corner_joseki.subtitle'),\r\n      color: '#ffd700',\r\n      fontSize: 36,\r\n      animation: 'explode'\r\n    }\r\n  },\r\n\r\n  great_reversal: {\r\n    type: 'great_reversal',\r\n    particleEffect: blendPresets('storm', 'lightning', 0.6),\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: true,\r\n      zoom: true,\r\n      cameraMovement: true,\r\n      colorFilter: '#87ceeb'\r\n    },\r\n    audio: {\r\n      soundEffect: 'great_reversal',\r\n      volume: 0.9,\r\n      echo: true,\r\n      reverb: true\r\n    },\r\n    duration: 2000,\r\n    display: {\r\n      title: t('special.great_reversal'),\r\n      subtitle: t('special.great_reversal.subtitle'),\r\n      color: '#87ceeb',\r\n      fontSize: 42,\r\n      animation: 'zoom'\r\n    }\r\n  },\r\n\r\n  total_domination: {\r\n    type: 'total_domination',\r\n    particleEffect: blendPresets('blackhole', 'magic', 0.8),\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: true,\r\n      zoom: false,\r\n      cameraMovement: false,\r\n      colorFilter: '#9932cc'\r\n    },\r\n    audio: {\r\n      soundEffect: 'total_domination',\r\n      volume: 1.0,\r\n      echo: true,\r\n      reverb: true\r\n    },\r\n    duration: 2500,\r\n    display: {\r\n      title: t('special.total_domination'),\r\n      subtitle: t('special.total_domination.subtitle'),\r\n      color: '#9932cc',\r\n      fontSize: 48,\r\n      animation: 'explode'\r\n    }\r\n  },\r\n\r\n  desperate_kill: {\r\n    type: 'desperate_kill',\r\n    particleEffect: blendPresets('fire', 'explosion', 0.8),\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: true,\r\n      zoom: true,\r\n      cameraMovement: true,\r\n      colorFilter: '#ff4500'\r\n    },\r\n    audio: {\r\n      soundEffect: 'desperate_kill',\r\n      volume: 0.95,\r\n      echo: true,\r\n      reverb: true\r\n    },\r\n    duration: 2200,\r\n    display: {\r\n      title: t('special.desperate_kill'),\r\n      subtitle: t('special.desperate_kill.subtitle'),\r\n      color: '#ff4500',\r\n      fontSize: 44,\r\n      animation: 'slide'\r\n    }\r\n  },\r\n\r\n  perfect_endgame: {\r\n    type: 'perfect_endgame',\r\n    particleEffect: {\r\n      ...PARTICLE_PRESETS.blackhole,\r\n      colors: ['#ffd700', '#ffdf00', '#fff700', '#ffa500', '#ffffff']\r\n    },\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: true,\r\n      zoom: true,\r\n      cameraMovement: true,\r\n      colorFilter: '#ffd700'\r\n    },\r\n    audio: {\r\n      soundEffect: 'perfect_endgame',\r\n      volume: 1.0,\r\n      echo: true,\r\n      reverb: true\r\n    },\r\n    duration: 3000,\r\n    display: {\r\n      title: t('special.perfect_endgame'),\r\n      subtitle: t('special.perfect_endgame.subtitle'),\r\n      color: '#ffd700',\r\n      fontSize: 52,\r\n      animation: 'zoom'\r\n    }\r\n  },\r\n\r\n  edge_control: {\r\n    type: 'edge_control',\r\n    particleEffect: blendPresets('lightning', 'storm', 0.5),\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: false,\r\n      zoom: false,\r\n      cameraMovement: true,\r\n      colorFilter: '#00ffff'\r\n    },\r\n    audio: {\r\n      soundEffect: 'edge_control',\r\n      volume: 0.85,\r\n      echo: false\r\n    },\r\n    duration: 1800,\r\n    display: {\r\n      title: t('special.edge_control'),\r\n      subtitle: t('special.edge_control.subtitle'),\r\n      color: '#00ffff',\r\n      fontSize: 38,\r\n      animation: 'slide'\r\n    }\r\n  },\r\n\r\n  chain_reaction: {\r\n    type: 'chain_reaction',\r\n    particleEffect: blendPresets('lightning', 'explosion', 0.7),\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: true,\r\n      zoom: false,\r\n      cameraMovement: false,\r\n      colorFilter: '#ffff00'\r\n    },\r\n    audio: {\r\n      soundEffect: 'chain_reaction',\r\n      volume: 0.9,\r\n      echo: true\r\n    },\r\n    duration: 2000,\r\n    display: {\r\n      title: t('special.chain_reaction'),\r\n      subtitle: t('special.chain_reaction.subtitle'),\r\n      color: '#ffff00',\r\n      fontSize: 40,\r\n      animation: 'explode'\r\n    }\r\n  },\r\n\r\n  time_control: {\r\n    type: 'time_control',\r\n    particleEffect: {\r\n      ...PARTICLE_PRESETS.blackhole,\r\n      colors: ['#9932cc', '#8b00ff', '#ffffff', '#87ceeb', '#000000']\r\n    },\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: true,\r\n      zoom: true,\r\n      cameraMovement: true,\r\n      colorFilter: '#9932cc'\r\n    },\r\n    audio: {\r\n      soundEffect: 'time_control',\r\n      volume: 1.0,\r\n      echo: true,\r\n      reverb: true\r\n    },\r\n    duration: 3500,\r\n    display: {\r\n      title: t('special.time_control'),\r\n      subtitle: t('special.time_control.subtitle'),\r\n      color: '#9932cc',\r\n      fontSize: 56,\r\n      animation: 'zoom'\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * 特殊招式檢測器\r\n */\r\nexport class SpecialMoveDetector {\r\n  /**\r\n   * 檢測移動是否觸發特殊招式\r\n   */\r\n  static detectSpecialMove(\r\n    position: BoardPosition,\r\n    flippedPositions: BoardPosition[],\r\n    playerScore: number,\r\n    opponentScore: number,\r\n    moveNumber: number,\r\n    totalMoves: number\r\n  ): SpecialMoveType[] {\r\n    const triggeredMoves: SpecialMoveType[] = [];\r\n    const flipCount = flippedPositions.length;\r\n    const scoreDiff = playerScore - opponentScore;\r\n\r\n    // 檢查每種特殊招式\r\n    for (const [moveType, condition] of Object.entries(SPECIAL_MOVE_CONDITIONS)) {\r\n      if (this.checkCondition(\r\n        moveType as SpecialMoveType,\r\n        condition,\r\n        position,\r\n        flipCount,\r\n        scoreDiff,\r\n        moveNumber,\r\n        totalMoves,\r\n        flippedPositions\r\n      )) {\r\n        triggeredMoves.push(moveType as SpecialMoveType);\r\n      }\r\n    }\r\n\r\n    return triggeredMoves;\r\n  }\r\n\r\n  /**\r\n   * 檢查單個條件\r\n   */\r\n  private static checkCondition(\r\n    moveType: SpecialMoveType,\r\n    condition: SpecialMoveCondition,\r\n    position: BoardPosition,\r\n    flipCount: number,\r\n    scoreDiff: number,\r\n    moveNumber: number,\r\n    totalMoves: number,\r\n    flippedPositions: BoardPosition[]\r\n  ): boolean {\r\n    // 檢查翻轉數量\r\n    if (condition.minFlipCount && flipCount < condition.minFlipCount) {\r\n      return false;\r\n    }\r\n\r\n    // 檢查分數差距\r\n    if (condition.scoreDifference) {\r\n      const { min, max } = condition.scoreDifference;\r\n      if (scoreDiff < min || scoreDiff > max) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // 檢查位置類型\r\n    if (condition.positionType) {\r\n      if (!this.checkPositionType(position, condition.positionType)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // 檢查時機\r\n    if (condition.timing) {\r\n      if (!this.checkTiming(condition.timing, moveNumber, totalMoves)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // 檢查特殊條件\r\n    if (condition.special) {\r\n      if (!this.checkSpecialCondition(moveType, condition.special, {\r\n        position,\r\n        flipCount,\r\n        scoreDiff,\r\n        moveNumber,\r\n        totalMoves,\r\n        flippedPositions\r\n      })) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 檢查位置類型\r\n   */\r\n  private static checkPositionType(position: BoardPosition, type: 'corner' | 'edge' | 'center'): boolean {\r\n    const row = Math.floor(position / 8);\r\n    const col = position % 8;\r\n\r\n    switch (type) {\r\n      case 'corner':\r\n        return (row === 0 || row === 7) && (col === 0 || col === 7);\r\n      case 'edge':\r\n        return row === 0 || row === 7 || col === 0 || col === 7;\r\n      case 'center':\r\n        return row >= 2 && row <= 5 && col >= 2 && col <= 5;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 檢查時機\r\n   */\r\n  private static checkTiming(timing: 'early' | 'mid' | 'late', moveNumber: number, totalMoves: number): boolean {\r\n    const progress = moveNumber / Math.max(totalMoves, 60); // 估計最大60步\r\n\r\n    switch (timing) {\r\n      case 'early':\r\n        return progress < 0.3;\r\n      case 'mid':\r\n        return progress >= 0.3 && progress <= 0.7;\r\n      case 'late':\r\n        return progress > 0.7;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 檢查特殊條件\r\n   */\r\n  private static checkSpecialCondition(\r\n    moveType: SpecialMoveType,\r\n    special: string,\r\n    context: {\r\n      position: BoardPosition;\r\n      flipCount: number;\r\n      scoreDiff: number;\r\n      moveNumber: number;\r\n      totalMoves: number;\r\n      flippedPositions: BoardPosition[];\r\n    }\r\n  ): boolean {\r\n    switch (special) {\r\n      case 'near_endgame':\r\n        return context.moveNumber > Math.max(context.totalMoves * 0.8, 40);\r\n\r\n      case 'multiple_directions':\r\n        // 檢查是否在多個方向翻轉棋子\r\n        return this.checkMultipleDirections(context.position, context.flippedPositions);\r\n\r\n      case 'ultra_rare':\r\n        // 超稀有條件：大量翻轉 + 高分差\r\n        return context.flipCount >= 15 && Math.abs(context.scoreDiff) > 10;\r\n\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 檢查是否在多個方向翻轉\r\n   */\r\n  private static checkMultipleDirections(position: BoardPosition, flippedPositions: BoardPosition[]): boolean {\r\n    const directions = [\r\n      [-1, -1], [-1, 0], [-1, 1],\r\n      [0, -1],           [0, 1],\r\n      [1, -1],  [1, 0],  [1, 1]\r\n    ];\r\n\r\n    const row = Math.floor(position / 8);\r\n    const col = position % 8;\r\n    let directionCount = 0;\r\n\r\n    for (const [dr, dc] of directions) {\r\n      if (dr === undefined || dc === undefined) continue;\r\n      let found = false;\r\n      let r = row + dr;\r\n      let c = col + dc;\r\n\r\n      while (r >= 0 && r < 8 && c >= 0 && c < 8) {\r\n        const pos = r * 8 + c;\r\n        if (flippedPositions.includes(pos)) {\r\n          found = true;\r\n          break;\r\n        }\r\n        r += dr!;\r\n        c += dc!;\r\n      }\r\n\r\n      if (found) {\r\n        directionCount++;\r\n      }\r\n    }\r\n\r\n    return directionCount >= 3; // 至少3個方向\r\n  }\r\n}\r\n\r\n/**\r\n * 特殊招式管理器\r\n */\r\nexport class SpecialMoveManager {\r\n  private _activeEffects: Map<string, SpecialMoveEffect> = new Map();\r\n  private _eventHandlers: ((effect: SpecialMoveEffect) => void)[] = [];\r\n\r\n  /**\r\n   * 觸發特殊招式\r\n   */\r\n  triggerSpecialMove(moveType: SpecialMoveType, position: { x: number; y: number }): void {\r\n    const effect = SPECIAL_MOVE_EFFECTS[moveType];\r\n\r\n    if (!effect) {\r\n      console.warn(`Unknown special move type: ${moveType}`);\r\n      return;\r\n    }\r\n\r\n    const effectId = `${moveType}_${Date.now()}`;\r\n    this._activeEffects.set(effectId, effect);\r\n\r\n    // 發送事件\r\n    this._emitEffect(effect);\r\n\r\n    // 設定移除時間\r\n    setTimeout(() => {\r\n      this._activeEffects.delete(effectId);\r\n    }, effect.duration);\r\n\r\n    console.log(`🎆 特殊招式觸發: ${effect.display.title}`);\r\n  }\r\n\r\n  /**\r\n   * 獲取活動中的特效\r\n   */\r\n  getActiveEffects(): SpecialMoveEffect[] {\r\n    return Array.from(this._activeEffects.values());\r\n  }\r\n\r\n  /**\r\n   * 清除所有特效\r\n   */\r\n  clearAllEffects(): void {\r\n    this._activeEffects.clear();\r\n  }\r\n\r\n  /**\r\n   * 註冊特效事件處理器\r\n   */\r\n  addEventListener(handler: (effect: SpecialMoveEffect) => void): void {\r\n    this._eventHandlers.push(handler);\r\n  }\r\n\r\n  /**\r\n   * 移除特效事件處理器\r\n   */\r\n  removeEventListener(handler: (effect: SpecialMoveEffect) => void): void {\r\n    const index = this._eventHandlers.indexOf(handler);\r\n    if (index !== -1) {\r\n      this._eventHandlers.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 發送特效事件\r\n   */\r\n  private _emitEffect(effect: SpecialMoveEffect): void {\r\n    this._eventHandlers.forEach(handler => {\r\n      try {\r\n        handler(effect);\r\n      } catch (error) {\r\n        console.error('Special move effect handler error:', error);\r\n      }\r\n    });\r\n  }\r\n}","/**\r\n * Super Reversi - Complete Game Implementation with Particle Effects\r\n * \r\n * Full working version with game logic, AI, animations, and particle effects\r\n */\r\n\r\nimport './style.css';\r\nimport { ParticleSystem, type Grade, type SpecialEffect } from './particle-system';\r\nimport { t, setLanguage, applyTranslations, type Language } from './i18n';\r\nimport { ComboSystem, type ComboEvent } from './effects/combo-system';\r\nimport { SpecialMoveDetector } from './effects/special-moves';\r\nimport { UIManager } from './ui/ui-manager';\r\nimport { ScreenType, MenuAction } from './types/ui-types';\r\nimport { ModalService } from './ui/modal-service';\r\n\r\n// Constants\r\nconst BOARD_SIZE = 8;\r\nconst EMPTY = 0;\r\nconst BLACK = 1;\r\nconst WHITE = 2;\r\nconst DIRECTIONS: [number, number][] = [\r\n  [-1, -1], [-1, 0], [-1, 1],\r\n  [0, -1],           [0, 1],\r\n  [1, -1],  [1, 0],  [1, 1]\r\n];\r\n\r\n// Game State\r\ninterface GameState {\r\n  board: number[];\r\n  currentPlayer: number;\r\n  blackScore: number;\r\n  whiteScore: number;\r\n  gameMode: 'pvp' | 'pvc';\r\n  isGameOver: boolean;\r\n  validMoves: Set<number>;\r\n  moveHistory: Array<{position: number, player: number, flipped: number[]}>;\r\n  aiDifficulty: 'easy' | 'medium' | 'hard';\r\n}\r\n\r\nclass SuperReversiGame {\r\n  private container: HTMLElement | null = null;\r\n  private currentScreen: 'menu' | 'game' | 'help' | 'settings' = 'menu';\r\n  private gameState: GameState | null = null;\r\n  private isProcessingMove = false;\r\n  private aiThinking = false;\r\n  private particleSystem: ParticleSystem;\r\n  private comboSystem: ComboSystem;\r\n  private uiManager: UIManager | null = null;\r\n  private modalService: ModalService | null = null;\r\n\r\n  // 戰鬥UI元素\r\n  private comboDisplay: HTMLElement | null = null;\r\n  private specialMoveDisplay: HTMLElement | null = null;\r\n  \r\n  constructor() {\r\n    console.log('🎮 Super Reversi Battle Enhanced - Initializing...');\r\n    this.particleSystem = new ParticleSystem();\r\n    this.comboSystem = new ComboSystem();\r\n\r\n    // 監聽連擊事件\r\n    this.comboSystem.addEventListener((comboEvent: ComboEvent) => {\r\n      this.handleComboEvent(comboEvent);\r\n    });\r\n  }\r\n  \r\n  async initialize(container: HTMLElement): Promise<void> {\r\n    this.container = container;\r\n    const settings = this.getSettings();\r\n    const lang = (settings.language as Language) || 'en';\r\n    setLanguage(lang);\r\n    applyTranslations();\r\n    this.setupUI();\r\n\r\n    // Initialize UI Manager and Modal Service - commented out to avoid conflicts with setupUI\r\n    // this.uiManager = new UIManager();\r\n    // this.uiManager.initialize(container);\r\n    // this.modalService = new ModalService(this.uiManager);\r\n\r\n    // Initialize particle system\r\n    this.particleSystem.initialize(container);\r\n\r\n    // Set particle system enabled state based on settings\r\n    this.particleSystem.setEnabled(settings.animations);\r\n\r\n    this.showMenu();\r\n    console.log('✅ Super Reversi ready!');\r\n  }\r\n  \r\n  private setupUI(): void {\r\n    if (!this.container) return;\r\n    \r\n    this.container.innerHTML = `\r\n      <div class=\"super-reversi-app\">\r\n        <div class=\"game-header\" id=\"game-header\" style=\"display: none;\">\r\n          <h1 data-i18n=\"app.title\">${t('app.title')}</h1>\r\n          <div class=\"header-right\">\r\n            <div class=\"score-display\" id=\"score-display\">\r\n              <span id=\"black-score\"></span>\r\n              <span id=\"current-turn\" style=\"color: #ffd700;\"></span>\r\n              <span id=\"white-score\"></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- 戰鬥UI覆蓋層 -->\r\n        <div class=\"battle-overlay\" id=\"battle-overlay\">\r\n          <div id=\"combo-display\" class=\"combo-display hidden\">\r\n            <div class=\"combo-count\"></div>\r\n            <div class=\"combo-text\"></div>\r\n            <div class=\"combo-multiplier\"></div>\r\n          </div>\r\n          <div id=\"special-move-display\" class=\"special-move-display hidden\">\r\n            <div class=\"special-move-title\"></div>\r\n            <div class=\"special-move-subtitle\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"screen-container\" class=\"screen-container\">\r\n          <!-- Screens render here -->\r\n        </div>\r\n\r\n        <!-- Simple Modal -->\r\n        <div id=\"simple-modal\" class=\"modal-backdrop\" style=\"display: none;\">\r\n          <div class=\"dialog modal\">\r\n            <div class=\"dialog-content\">\r\n              <h3 class=\"dialog-title\" id=\"modal-title\" data-i18n=\"modal.confirm.title\">${t('modal.confirm.title')}</h3>\r\n              <p class=\"dialog-message\" id=\"modal-message\" data-i18n=\"messages.quitConfirm\">${t('messages.quitConfirm')}</p>\r\n              <div class=\"dialog-buttons\">\r\n                <button class=\"dialog-btn primary\" id=\"modal-confirm\" data-i18n=\"modal.confirm\">${t('modal.confirm')}</button>\r\n                <button class=\"dialog-btn secondary\" id=\"modal-cancel\" data-i18n=\"modal.cancel\">${t('modal.cancel')}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // 緩存戰鬥UI元素\r\n    this.comboDisplay = this.container.querySelector('#combo-display');\r\n    this.specialMoveDisplay = this.container.querySelector('#special-move-display');\r\n\r\n    this.addStyles();\r\n  }\r\n\r\n  /**\r\n   * 處理連擊事件\r\n   */\r\n  private handleComboEvent(event: ComboEvent): void {\r\n    console.log(`🔥 戰鬥: 連擊事件 - ${event.type}, 計數: ${event.comboCount}, 玩家: ${event.player}`);\r\n\r\n    if (event.type === 'combo_started' || event.type === 'combo_continued') {\r\n      // 🎆 顯示視覺化連擊UI\r\n      this.showComboUI(event.comboCount, event.player, event.comboType);\r\n\r\n      // 顯示舊版訊息作為備用\r\n      this.showMessage(`🔥 ${event.comboCount} 連擊！`);\r\n\r\n      // 觸發螢幕中央鏈鎖效果\r\n      if (this.container) {\r\n        const rect = this.container.getBoundingClientRect();\r\n        const centerX = rect.width / 2;\r\n        const centerY = rect.height / 2;\r\n        this.particleSystem.createChainEffect(centerX, centerY);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 顯示視覺化連擊UI\r\n   */\r\n  private showComboUI(count: number, player: number, comboType: string): void {\r\n    if (!this.comboDisplay) return;\r\n\r\n    console.log(`🔥 UI: 顯示連擊UI - ${count} 連擊 (${comboType}) for player ${player}`);\r\n\r\n    const countElement = this.comboDisplay.querySelector('.combo-count') as HTMLElement;\r\n    const textElement = this.comboDisplay.querySelector('.combo-text') as HTMLElement;\r\n    const multiplierElement = this.comboDisplay.querySelector('.combo-multiplier') as HTMLElement;\r\n\r\n    if (countElement) countElement.textContent = count.toString();\r\n    if (textElement) textElement.textContent = t('combo.counter', { count });\r\n    // 隱藏倍率顯示\r\n    if (multiplierElement) multiplierElement.style.display = 'none';\r\n\r\n    // 根據連擊數設定顏色\r\n    const colors = {\r\n      2: '#90ee90',\r\n      3: '#ffa500',\r\n      4: '#ff6347',\r\n      5: '#ff1493',\r\n      6: '#9932cc',\r\n      7: '#ffd700'\r\n    } as const;\r\n    const color = colors[Math.min(count, 7) as keyof typeof colors] || '#ffd700';\r\n    this.comboDisplay.style.background = `linear-gradient(135deg, ${color}, ${color}aa)`;\r\n\r\n    // 顯示動畫\r\n    this.comboDisplay.classList.remove('hidden');\r\n    this.comboDisplay.classList.add('combo-animation');\r\n\r\n    // 3秒後隱藏\r\n    setTimeout(() => {\r\n      this.comboDisplay?.classList.add('hidden');\r\n      this.comboDisplay?.classList.remove('combo-animation');\r\n    }, 3000);\r\n  }\r\n\r\n  /**\r\n   * 檢測並處理特殊招式\r\n   */\r\n  private detectSpecialMoves(position: number, flippedPositions: number[], currentScore: number, opponentScore: number): void {\r\n    console.log(`🔍 檢測特殊招式: 位置=${position}, 翻轉=${flippedPositions.length}個, 分數差=${currentScore - opponentScore}`);\r\n\r\n    const specialMoves = SpecialMoveDetector.detectSpecialMove(\r\n      position,\r\n      flippedPositions, // 傳遞實際的翻轉位置陣列\r\n      currentScore,\r\n      opponentScore,\r\n      this.gameState?.moveHistory.length || 0,\r\n      60\r\n    );\r\n\r\n    console.log(`✨ 檢測結果: ${specialMoves.length > 0 ? specialMoves.join(', ') : '無特殊招式'}`);\r\n\r\n    if (specialMoves.length > 0) {\r\n      specialMoves.forEach((moveType, index) => {\r\n        setTimeout(() => {\r\n          const title = t(`special.${moveType}`);\r\n\r\n          // 🎆 顯示視覺化特殊招式UI\r\n          this.showSpecialMoveUI(title, moveType);\r\n\r\n          // 顯示舊版訊息作為備用\r\n          this.showMessage(`⚡ ${title}`);\r\n          console.log(`⚡ 特殊招式: ${title}`);\r\n        }, index * 1000);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 顯示視覺化特殊招式UI\r\n   */\r\n  private showSpecialMoveUI(title: string, moveType: string): void {\r\n    if (!this.specialMoveDisplay) {\r\n      console.warn('⚡ UI: specialMoveDisplay 元素不存在');\r\n      return;\r\n    }\r\n\r\n    console.log(`⚡ UI: 顯示特殊招式UI - ${title} (${moveType})`);\r\n\r\n    const titleElement = this.specialMoveDisplay.querySelector('.special-move-title') as HTMLElement;\r\n    const subtitleElement = this.specialMoveDisplay.querySelector('.special-move-subtitle') as HTMLElement;\r\n\r\n    if (titleElement) {\r\n      titleElement.textContent = title;\r\n      console.log(`⚡ UI: 設置標題文字 - ${title}`);\r\n    } else {\r\n      console.warn('⚡ UI: 找不到 .special-move-title 元素');\r\n    }\r\n\r\n    if (subtitleElement) {\r\n      const subtitle = t(`special.${moveType}.subtitle`);\r\n      subtitleElement.textContent = subtitle;\r\n      console.log(`⚡ UI: 設置副標題文字 - ${subtitle}`);\r\n    } else {\r\n      console.warn('⚡ UI: 找不到 .special-move-subtitle 元素');\r\n    }\r\n\r\n    // 根據招式類型設定不同顏色\r\n    const effectColors = {\r\n      corner_master: '#ffd700',\r\n      mega_flip: '#ff4500',\r\n      phoenix_rise: '#ff69b4',\r\n      domination: '#9932cc',\r\n      time_warp: '#8b00ff'\r\n    };\r\n\r\n    const color = effectColors[moveType as keyof typeof effectColors] || '#ffd700';\r\n    if (titleElement) {\r\n      // 直接設置文字顏色而非背景\r\n      titleElement.style.color = color;\r\n      titleElement.style.textShadow = `\r\n        0 0 20px ${color}88,\r\n        0 0 40px ${color}66,\r\n        0 4px 8px rgba(0, 0, 0, 0.8)\r\n      `;\r\n      console.log(`⚡ UI: 設置顏色 - ${color}`);\r\n    }\r\n\r\n    // 顯示動畫\r\n    this.specialMoveDisplay.classList.remove('hidden');\r\n    this.specialMoveDisplay.classList.add('special-move-animation');\r\n    console.log(`⚡ UI: 顯示動畫已啟動`);\r\n\r\n    // 2.5秒後隱藏\r\n    setTimeout(() => {\r\n      this.specialMoveDisplay?.classList.add('hidden');\r\n      this.specialMoveDisplay?.classList.remove('special-move-animation');\r\n    }, 2500);\r\n  }\r\n\r\n  private refreshUI(): void {\r\n    switch (this.currentScreen) {\r\n      case 'menu':\r\n        this.showMenu();\r\n        break;\r\n      case 'settings':\r\n        this.showSettings();\r\n        break;\r\n      case 'help':\r\n        this.showHelp();\r\n        break;\r\n      case 'game':\r\n        this.showGameScreen();\r\n        this.updateDisplay();\r\n        break;\r\n    }\r\n  }\r\n\r\n  private addStyles(): void {\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      body, html {\r\n        margin: 0;\r\n        padding: 0;\r\n        height: 100%;\r\n        overflow: hidden;\r\n      }\r\n      \r\n      #app {\r\n        width: 100%;\r\n        min-height: 100vh;\r\n        height: 100dvh;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);\r\n      }\r\n      \r\n      #game-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n      \r\n      .super-reversi-app {\r\n        width: 100%;\r\n        height: 100%;\r\n        max-width: 75rem;\r\n        max-height: 56.25rem;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding: 1.25rem;\r\n        font-family: 'Segoe UI', Arial, sans-serif;\r\n        box-sizing: border-box;\r\n      }\r\n      \r\n      .game-header {\r\n        width: 100%;\r\n        max-width: 50rem;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 1.25rem;\r\n        background: rgba(42, 42, 42, 0.9);\r\n        border-radius: 0.75rem;\r\n        margin-bottom: 1.25rem;\r\n        box-shadow: 0 0.25rem 0.75rem rgba(0,0,0,0.3);\r\n      }\r\n      \r\n      .game-header h1 {\r\n        color: #00ff7f;\r\n        margin: 0;\r\n        font-size: 1.75rem;\r\n        text-shadow: 0 0 0.625rem rgba(0,255,127,0.5);\r\n      }\r\n      \r\n      .score-display {\r\n        display: flex;\r\n        gap: 1.875rem;\r\n        color: white;\r\n        font-size: 1.125rem;\r\n        font-weight: bold;\r\n      }\r\n\r\n      .header-right {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 1rem;\r\n      }\r\n\r\n      .language-select {\r\n        padding: 0.25rem;\r\n        font-size: 1rem;\r\n      }\r\n\r\n      .screen-container {\r\n        width: 100%;\r\n        max-width: min(90vw, 56.25rem);\r\n        height: auto;\r\n        flex: 1;\r\n        background: rgba(26, 26, 26, 0.95);\r\n        border-radius: 0.75rem;\r\n        padding: 1.875rem;\r\n        box-shadow: 0 0.5rem 1.5rem rgba(0,0,0,0.4);\r\n        box-sizing: border-box;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        overflow: hidden;\r\n      }\r\n      \r\n      .menu-screen {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 1.25rem;\r\n        padding: 2.5rem;\r\n        animation: fadeIn 0.5s ease;\r\n        height: 100%;\r\n      }\r\n      \r\n      @keyframes fadeIn {\r\n        from { opacity: 0; transform: translateY(1.25rem); }\r\n        to { opacity: 1; transform: translateY(0); }\r\n      }\r\n      \r\n      .menu-title {\r\n        font-size: 2.25rem;\r\n        color: #00ff7f;\r\n        margin-bottom: 1.25rem;\r\n        text-align: center;\r\n        text-shadow: 0 0 1.25rem rgba(0,255,127,0.5);\r\n      }\r\n      \r\n      .menu-button {\r\n        width: 15.625rem;\r\n        padding: 1.125rem 1.875rem;\r\n        font-size: 1.125rem;\r\n        font-weight: bold;\r\n        background: linear-gradient(135deg, #00ff7f, #00cc65);\r\n        color: #1a1a1a;\r\n        border: none;\r\n        border-radius: 0.625rem;\r\n        cursor: pointer;\r\n        transition: all 0.3s ease;\r\n        box-shadow: 0 0.25rem 0.75rem rgba(0,255,127,0.3);\r\n      }\r\n      \r\n      .menu-button:hover {\r\n        transform: translateY(-0.125rem);\r\n        box-shadow: 0 0.375rem 1.25rem rgba(0,255,127,0.5);\r\n      }\r\n      \r\n      .menu-button:active {\r\n        transform: translateY(0);\r\n      }\r\n      \r\n      .difficulty-selector {\r\n        display: flex;\r\n        gap: 0.625rem;\r\n        margin: 1.25rem 0;\r\n      }\r\n      \r\n      .difficulty-button {\r\n        padding: 0.625rem 1.25rem;\r\n        background: #444;\r\n        color: white;\r\n        border: 0.125rem solid transparent;\r\n        border-radius: 0.375rem;\r\n        cursor: pointer;\r\n        transition: all 0.3s;\r\n      }\r\n      \r\n      .difficulty-button.active {\r\n        background: #00ff7f;\r\n        color: #1a1a1a;\r\n        border-color: #00ff7f;\r\n      }\r\n      \r\n      .game-board {\r\n        width: min(28.125rem, 70vmin);\r\n        height: min(28.125rem, 70vmin);\r\n        display: grid;\r\n        grid-template-columns: repeat(8, 1fr);\r\n        grid-template-rows: repeat(8, 1fr);\r\n        gap: 0.125rem;\r\n        background: #1a3d1a;\r\n        padding: 0.625rem;\r\n        border-radius: 0.75rem;\r\n        margin: 0.625rem auto;\r\n        box-shadow: inset 0 0 1.25rem rgba(0,0,0,0.5);\r\n        flex-shrink: 0;\r\n      }\r\n      \r\n      @media (max-height: 43.75rem) {\r\n        .game-board {\r\n          width: min(21.875rem, 60vh);\r\n          height: min(21.875rem, 60vh);\r\n        }\r\n      }\r\n      \r\n      .board-cell {\r\n        background: #2d4a2d;\r\n        border: 0.0625rem solid #1a3d1a;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease;\r\n        position: relative;\r\n      }\r\n      \r\n      .board-cell:hover {\r\n        background: #3a5a3a;\r\n      }\r\n      \r\n      .board-cell.valid-move {\r\n        background: #4a6a4a;\r\n        box-shadow: inset 0 0 0.625rem rgba(0,255,127,0.3);\r\n      }\r\n      \r\n      .board-cell.valid-move::after {\r\n        content: '•';\r\n        color: rgba(0,255,127,0.5);\r\n        font-size: 1.5rem;\r\n        position: absolute;\r\n      }\r\n      \r\n      .board-cell.last-move {\r\n        box-shadow: inset 0 0 0.9375rem rgba(255,215,0,0.5);\r\n      }\r\n\r\n      .mobility-indicator {\r\n        position: absolute;\r\n        top: 0.125rem;\r\n        right: 0.125rem;\r\n        background: rgba(0, 0, 0, 0.9);\r\n        color: white;\r\n        font-size: 0.55rem;\r\n        font-weight: bold;\r\n        padding: 0.125rem 0.2rem;\r\n        border-radius: 0.25rem;\r\n        min-width: 1.2rem;\r\n        text-align: center;\r\n        z-index: 10;\r\n        border: 0.125rem solid;\r\n        font-family: 'Courier New', monospace;\r\n      }\r\n\r\n      .mobility-indicator.mobility-positive {\r\n        border-color: #00ff7f;\r\n        background: rgba(0, 0, 0, 0.85);\r\n        color: #00ff7f;\r\n        box-shadow: 0 0 0.3rem rgba(0, 255, 127, 0.5);\r\n      }\r\n\r\n      .mobility-indicator.mobility-negative {\r\n        border-color: #ff4444;\r\n        background: rgba(0, 0, 0, 0.85);\r\n        color: #ff4444;\r\n        box-shadow: 0 0 0.3rem rgba(255, 68, 68, 0.5);\r\n      }\r\n\r\n      .mobility-indicator.mobility-neutral {\r\n        border-color: #ffaa00;\r\n        background: rgba(0, 0, 0, 0.85);\r\n        color: #ffaa00;\r\n        box-shadow: 0 0 0.3rem rgba(255, 170, 0, 0.5);\r\n      }\r\n      \r\n      .piece {\r\n        width: 85%;\r\n        height: 85%;\r\n        border-radius: 50%;\r\n        transition: all 0.3s ease;\r\n        box-shadow: 0 0.125rem 0.5rem rgba(0,0,0,0.4);\r\n      }\r\n      \r\n      .piece-black {\r\n        background: radial-gradient(circle at 30% 30%, #444, #000);\r\n        border: 0.125rem solid #222;\r\n      }\r\n      \r\n      .piece-white {\r\n        background: radial-gradient(circle at 30% 30%, #fff, #ddd);\r\n        border: 0.125rem solid #ccc;\r\n      }\r\n      \r\n      @keyframes flipPiece {\r\n        0% { transform: rotateY(0deg) scale(1); }\r\n        50% { transform: rotateY(90deg) scale(0.8); }\r\n        100% { transform: rotateY(180deg) scale(1); }\r\n      }\r\n      \r\n      .piece.flipping {\r\n        animation: flipPiece 0.5s ease-in-out;\r\n      }\r\n      \r\n      @keyframes placePiece {\r\n        0% { transform: scale(0) rotate(0deg); opacity: 0; }\r\n        50% { transform: scale(1.2) rotate(180deg); opacity: 1; }\r\n        100% { transform: scale(1) rotate(360deg); opacity: 1; }\r\n      }\r\n      \r\n      .piece.placing {\r\n        animation: placePiece 0.4s ease-out;\r\n      }\r\n      \r\n      .game-screen {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: hidden;\r\n        gap: 0.625rem;\r\n      }\r\n      \r\n      .game-controls {\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        margin-bottom: 1.25rem;\r\n      }\r\n      \r\n      .back-button {\r\n        padding: 0.75rem 1.5rem;\r\n        background: #666;\r\n        color: white;\r\n        border: none;\r\n        border-radius: 0.375rem;\r\n        cursor: pointer;\r\n        font-size: 1rem;\r\n        transition: background 0.3s, transform 0.3s;\r\n        white-space: nowrap; /* Prevent text wrap */\r\n      }\r\n      \r\n      .back-button:hover {\r\n        background: #777;\r\n        transform: translateX(-0.3125rem);\r\n      }\r\n      \r\n      .game-info {\r\n        text-align: center;\r\n        color: #ccc;\r\n        font-size: 0.875rem;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        gap: 0.3125rem;\r\n        flex-shrink: 0;\r\n      }\r\n      \r\n      #ai-status {\r\n        height: 1.25rem;\r\n        font-size: 0.875rem;\r\n      }\r\n      \r\n      .game-over-modal {\r\n        position: fixed;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        background: rgba(42, 42, 42, 0.98);\r\n        padding: 2.5rem;\r\n        border-radius: 1.25rem;\r\n        text-align: center;\r\n        box-shadow: 0 0.625rem 2.5rem rgba(0,0,0,0.5);\r\n        z-index: 1000;\r\n        animation: modalAppear 0.3s ease;\r\n      }\r\n      \r\n      @keyframes modalAppear {\r\n        from { opacity: 0; transform: translate(-50%, -50%) scale(0.8); }\r\n        to { opacity: 1; transform: translate(-50%, -50%) scale(1); }\r\n      }\r\n      \r\n      .game-over-title {\r\n        font-size: 2rem;\r\n        color: #00ff7f;\r\n        margin-bottom: 1.25rem;\r\n      }\r\n      \r\n      .final-scores {\r\n        font-size: 1.5rem;\r\n        color: white;\r\n        margin: 1.25rem 0;\r\n      }\r\n      \r\n      .modal-buttons {\r\n        display: flex;\r\n        gap: 1.25rem;\r\n        justify-content: center;\r\n        margin-top: 1.875rem;\r\n      }\r\n      \r\n      .ai-thinking {\r\n        display: inline-block;\r\n        color: #ffd700;\r\n        font-style: italic;\r\n        animation: pulse 1s infinite;\r\n      }\r\n      \r\n      @keyframes pulse {\r\n        0%, 100% { opacity: 1; }\r\n        50% { opacity: 0.5; }\r\n      }\r\n      \r\n      .settings-screen {\r\n        color: white;\r\n        flex: 1;\r\n        overflow-y: auto;\r\n        padding-right: 0.625rem;\r\n      }\r\n      \r\n      .settings-group {\r\n        margin: 1.5625rem 0;\r\n      }\r\n      \r\n      .settings-group h3 {\r\n        color: #00ff7f;\r\n        margin-bottom: 0.9375rem;\r\n        font-size: 1.25rem;\r\n      }\r\n      \r\n      .settings-screen label {\r\n        display: block;\r\n        margin: 0.625rem 0;\r\n        font-size: 1rem;\r\n        cursor: pointer;\r\n      }\r\n      \r\n      .settings-screen input[type=\"checkbox\"] {\r\n        margin-right: 0.625rem;\r\n        cursor: pointer;\r\n      }\r\n      \r\n      .help-screen {\r\n        color: #ccc;\r\n        line-height: 1.6;\r\n        flex: 1;\r\n        overflow-y: auto; /* Allow scrolling if content is too long */\r\n        padding-right: 0.625rem;\r\n      }\r\n      \r\n      .help-screen h2 {\r\n        color: #00ff7f;\r\n        margin-bottom: 0.9375rem;\r\n        font-size: 1.5rem;\r\n      }\r\n      \r\n      .help-screen h3 {\r\n        color: #ffd700;\r\n        margin-top: 0.9375rem;\r\n        margin-bottom: 0.5rem;\r\n        font-size: 1.125rem;\r\n      }\r\n      \r\n      .help-screen ul {\r\n        margin-left: 1.25rem;\r\n        margin-bottom: 0.625rem;\r\n      }\r\n      \r\n      .help-screen li {\r\n        margin: 0.3125rem 0;\r\n        font-size: 0.875rem;\r\n      }\r\n      \r\n      .help-screen p {\r\n        margin: 0.5rem 0;\r\n        font-size: 0.875rem;\r\n      }\r\n      \r\n      /* Custom scrollbar for help screen */\r\n      .help-screen::-webkit-scrollbar {\r\n        width: 0.5rem;\r\n      }\r\n      \r\n      .help-screen::-webkit-scrollbar-track {\r\n        background: rgba(255, 255, 255, 0.1);\r\n        border-radius: 0.25rem;\r\n      }\r\n      \r\n      .help-screen::-webkit-scrollbar-thumb {\r\n        background: rgba(0, 255, 127, 0.5);\r\n        border-radius: 0.25rem;\r\n      }\r\n      \r\n      .help-screen::-webkit-scrollbar-thumb:hover {\r\n        background: rgba(0, 255, 127, 0.7);\r\n      }\r\n\r\n      /* ========== 戰鬥UI樣式 ========== */\r\n\r\n      .battle-overlay {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        pointer-events: none;\r\n        z-index: 9999;\r\n        font-family: 'Orbitron', 'Arial', sans-serif;\r\n      }\r\n\r\n      .combo-display {\r\n        position: absolute;\r\n        top: 80px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        padding: 20px 40px;\r\n        border-radius: 25px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 20px;\r\n        background: linear-gradient(135deg, #ff6b6b, #ff8e8e);\r\n        box-shadow: 0 0 60px rgba(255, 107, 107, 0.9), 0 10px 40px rgba(0, 0, 0, 0.7);\r\n        transition: all 0.3s ease;\r\n      }\r\n\r\n      .combo-display.hidden {\r\n        display: none;\r\n      }\r\n\r\n      .combo-display.combo-animation {\r\n        animation: combo-bounce 0.6s ease;\r\n      }\r\n\r\n      .combo-count {\r\n        font-size: 72px;\r\n        font-weight: bold;\r\n        color: #fff;\r\n        text-shadow: 0 4px 20px rgba(0, 0, 0, 0.8), 0 0 30px currentColor;\r\n      }\r\n\r\n      .combo-text {\r\n        font-size: 32px;\r\n        color: #fff;\r\n        font-weight: bold;\r\n        text-shadow: 0 4px 20px rgba(0, 0, 0, 0.8), 0 0 30px currentColor;\r\n      }\r\n\r\n      .combo-multiplier {\r\n        font-size: 28px;\r\n        color: #ffeb3b;\r\n        font-weight: bold;\r\n        background: rgba(0, 0, 0, 0.3);\r\n        padding: 8px 16px;\r\n        border-radius: 20px;\r\n        text-shadow: 0 4px 20px rgba(0, 0, 0, 0.8), 0 0 30px currentColor;\r\n      }\r\n\r\n      .special-move-display {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        text-align: center;\r\n        z-index: 10000;\r\n      }\r\n\r\n      .special-move-display.hidden {\r\n        display: none;\r\n      }\r\n\r\n      .special-move-display.special-move-animation {\r\n        animation: special-move-intro 1.2s ease;\r\n      }\r\n\r\n      .special-move-title {\r\n        font-size: 64px;\r\n        font-weight: bold;\r\n        color: #ffd700;\r\n        text-shadow:\r\n          0 0 20px rgba(255, 215, 0, 0.8),\r\n          0 0 40px rgba(255, 215, 0, 0.6),\r\n          0 4px 8px rgba(0, 0, 0, 0.8);\r\n        margin-bottom: 10px;\r\n        letter-spacing: 2px;\r\n        animation: special-title-glow 2s ease-in-out infinite alternate;\r\n      }\r\n\r\n      .special-move-subtitle {\r\n        font-size: 28px;\r\n        color: #ffffff;\r\n        text-shadow:\r\n          0 0 15px rgba(255, 255, 255, 0.8),\r\n          0 4px 8px rgba(0, 0, 0, 0.8);\r\n        letter-spacing: 1px;\r\n        opacity: 0.9;\r\n      }\r\n\r\n      /* 戰鬥動畫定義 */\r\n      @keyframes combo-bounce {\r\n        0% {\r\n          transform: translateX(-50%) scale(0.8);\r\n          opacity: 0;\r\n        }\r\n        50% {\r\n          transform: translateX(-50%) scale(1.1);\r\n        }\r\n        100% {\r\n          transform: translateX(-50%) scale(1);\r\n          opacity: 1;\r\n        }\r\n      }\r\n\r\n      @keyframes special-move-intro {\r\n        0% {\r\n          transform: translate(-50%, -50%) scale(0);\r\n          opacity: 0;\r\n        }\r\n        50% {\r\n          transform: translate(-50%, -50%) scale(1.2);\r\n        }\r\n        100% {\r\n          transform: translate(-50%, -50%) scale(1);\r\n          opacity: 1;\r\n        }\r\n      }\r\n\r\n      @keyframes special-title-glow {\r\n        0% {\r\n          text-shadow:\r\n            0 0 20px rgba(255, 215, 0, 0.8),\r\n            0 0 40px rgba(255, 215, 0, 0.6),\r\n            0 4px 8px rgba(0, 0, 0, 0.8);\r\n        }\r\n        100% {\r\n          text-shadow:\r\n            0 0 30px rgba(255, 215, 0, 1.0),\r\n            0 0 60px rgba(255, 215, 0, 0.8),\r\n            0 4px 8px rgba(0, 0, 0, 0.8);\r\n        }\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n  }\r\n  \r\n  // ===== MENU SCREENS =====\r\n  \r\n  private showMenu(): void {\r\n    const screenContainer = document.getElementById('screen-container');\r\n    if (!screenContainer) return;\r\n    \r\n    this.currentScreen = 'menu';\r\n    const header = document.getElementById('game-header');\r\n    if (header) header.style.display = 'none';\r\n    \r\n    screenContainer.innerHTML = `\r\n      <div class=\"menu-screen\">\r\n        <h2 class=\"menu-title\">${t('menu.chooseMode')}</h2>\r\n        <button class=\"menu-button\" id=\"pvp-btn\">👥 ${t('menu.pvp')}</button>\r\n        <button class=\"menu-button\" id=\"pvc-btn\">🤖 ${t('menu.pvc')}</button>\r\n        <button class=\"menu-button\" id=\"settings-btn\">⚙️ ${t('menu.settings')}</button>\r\n        <button class=\"menu-button\" id=\"help-btn\">❓ ${t('menu.help')}</button>\r\n      </div>\r\n    `;\r\n    \r\n    document.getElementById('pvp-btn')?.addEventListener('click', () => {\r\n      this.startNewGame('pvp');\r\n    });\r\n    \r\n    document.getElementById('pvc-btn')?.addEventListener('click', () => {\r\n      this.showAIDifficultyMenu();\r\n    });\r\n    \r\n    document.getElementById('settings-btn')?.addEventListener('click', () => {\r\n      this.showSettings();\r\n    });\r\n    \r\n    document.getElementById('help-btn')?.addEventListener('click', () => {\r\n      this.showHelp();\r\n    });\r\n  }\r\n  \r\n  private showAIDifficultyMenu(): void {\r\n    const screenContainer = document.getElementById('screen-container');\r\n    if (!screenContainer) return;\r\n    \r\n    screenContainer.innerHTML = `\r\n      <div class=\"menu-screen\">\r\n        <button class=\"back-button\" id=\"back-btn\" style=\"align-self: flex-start; margin-bottom: 1.25rem;\">${t('menu.back')}</button>\r\n        <h2 class=\"menu-title\">${t('menu.selectDifficulty')}</h2>\r\n        <div class=\"difficulty-selector\">\r\n          <button class=\"difficulty-button active\" data-diff=\"easy\">${t('menu.easy')}</button>\r\n          <button class=\"difficulty-button\" data-diff=\"medium\">${t('menu.medium')}</button>\r\n          <button class=\"difficulty-button\" data-diff=\"hard\">${t('menu.hard')}</button>\r\n        </div>\r\n        <p style=\"color: #ccc; text-align: center; margin: 1.25rem 0;\">\r\n          <span id=\"diff-desc\">${t('menu.easyDesc')}</span>\r\n        </p>\r\n        <button class=\"menu-button\" id=\"start-ai-btn\">${t('menu.startGame')}</button>\r\n      </div>\r\n    `;\r\n    \r\n    let selectedDifficulty: 'easy' | 'medium' | 'hard' = 'easy';\r\n    \r\n    const diffButtons = document.querySelectorAll('.difficulty-button');\r\n    const diffDesc = document.getElementById('diff-desc');\r\n    \r\n    const descriptions = {\r\n      easy: t('menu.easyDesc'),\r\n      medium: t('menu.mediumDesc'),\r\n      hard: t('menu.hardDesc')\r\n    } as const;\r\n    \r\n    diffButtons.forEach(btn => {\r\n      btn.addEventListener('click', () => {\r\n        diffButtons.forEach(b => b.classList.remove('active'));\r\n        btn.classList.add('active');\r\n        selectedDifficulty = btn.getAttribute('data-diff') as any;\r\n        if (diffDesc) {\r\n          diffDesc.textContent = descriptions[selectedDifficulty];\r\n        }\r\n      });\r\n    });\r\n    \r\n    document.getElementById('back-btn')?.addEventListener('click', () => {\r\n      this.showMenu();\r\n    });\r\n    \r\n    document.getElementById('start-ai-btn')?.addEventListener('click', () => {\r\n      this.startNewGame('pvc', selectedDifficulty);\r\n    });\r\n  }\r\n  \r\n  private showSettings(): void {\r\n    const screenContainer = document.getElementById('screen-container');\r\n    if (!screenContainer) return;\r\n    \r\n    this.currentScreen = 'settings';\r\n    \r\n    screenContainer.innerHTML = `\r\n      <button class=\"back-button\" id=\"back-btn\" style=\"margin-bottom: 0.9375rem;\">${t('menu.back')}</button>\r\n      <div class=\"settings-screen\">\r\n        <h2 style=\"color: #00ff7f; margin-bottom: 1.25rem;\">${t('settings.title')}</h2>\r\n\r\n        <div class=\"settings-group\">\r\n          <h3>${t('settings.language')}</h3>\r\n          <select id=\"language-select\" class=\"language-select\">\r\n            <option value=\"en\">English</option>\r\n            <option value=\"zh-Hant\">繁體中文</option>\r\n            <option value=\"zh-Hans\">简体中文</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"settings-group\">\r\n          <h3>${t('settings.visual')}</h3>\r\n          <label>\r\n            <input type=\"checkbox\" id=\"show-valid\" checked> ${t('settings.showValid')}\r\n          </label>\r\n          <label>\r\n            <input type=\"checkbox\" id=\"show-last\" checked> ${t('settings.showLast')}\r\n          </label>\r\n          <label>\r\n            <input type=\"checkbox\" id=\"show-mobility\"> ${t('settings.showMobility')}\r\n          </label>\r\n          <label>\r\n            <input type=\"checkbox\" id=\"animations\" checked> ${t('settings.animations')}\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"settings-group\">\r\n          <h3>${t('settings.game')}</h3>\r\n          <label>\r\n            <input type=\"checkbox\" id=\"auto-pass\" checked> ${t('settings.autoPass')}\r\n          </label>\r\n          <label>\r\n            <input type=\"checkbox\" id=\"confirm-moves\"> ${t('settings.confirm')}\r\n          </label>\r\n        </div>\r\n\r\n        <button class=\"menu-button\" id=\"save-settings\" style=\"margin-top: 1.25rem;\">\r\n          ${t('settings.save')}\r\n        </button>\r\n      </div>\r\n    `;\r\n\r\n    const settings = this.getSettings();\r\n    (document.getElementById('language-select') as HTMLSelectElement).value = settings.language || 'en';\r\n    (document.getElementById('show-valid') as HTMLInputElement).checked = settings.showValid;\r\n    (document.getElementById('show-last') as HTMLInputElement).checked = settings.showLast;\r\n    (document.getElementById('show-mobility') as HTMLInputElement).checked = settings.showMobility;\r\n    (document.getElementById('animations') as HTMLInputElement).checked = settings.animations;\r\n    (document.getElementById('auto-pass') as HTMLInputElement).checked = settings.autoPass;\r\n    (document.getElementById('confirm-moves') as HTMLInputElement).checked = settings.confirmMoves;\r\n\r\n    document.getElementById('back-btn')?.addEventListener('click', () => {\r\n      this.showMenu();\r\n    });\r\n\r\n    document.getElementById('save-settings')?.addEventListener('click', () => {\r\n      const lang = (document.getElementById('language-select') as HTMLSelectElement).value as Language;\r\n      const settings = {\r\n        language: lang,\r\n        showValid: (document.getElementById('show-valid') as HTMLInputElement)?.checked,\r\n        showLast: (document.getElementById('show-last') as HTMLInputElement)?.checked,\r\n        showMobility: (document.getElementById('show-mobility') as HTMLInputElement)?.checked,\r\n        animations: (document.getElementById('animations') as HTMLInputElement)?.checked,\r\n        autoPass: (document.getElementById('auto-pass') as HTMLInputElement)?.checked,\r\n        confirmMoves: (document.getElementById('confirm-moves') as HTMLInputElement)?.checked\r\n      };\r\n      localStorage.setItem('reversi-settings', JSON.stringify(settings));\r\n      localStorage.setItem('language', lang);\r\n      setLanguage(lang);\r\n      applyTranslations();\r\n\r\n      // Update particle system enabled state when animations setting changes\r\n      this.particleSystem.setEnabled(settings.animations);\r\n\r\n      if (this.modalService) {\r\n        this.modalService.showSuccess(\r\n          t('settings.saved'),\r\n          t('modal.settingsSaved.title')\r\n        );\r\n      }\r\n      this.refreshUI();\r\n    });\r\n  }\r\n  \r\n  private showHelp(): void {\r\n    const screenContainer = document.getElementById('screen-container');\r\n    if (!screenContainer) return;\r\n    \r\n    this.currentScreen = 'help';\r\n    \r\n    screenContainer.innerHTML = `\r\n      <button class=\"back-button\" id=\"back-btn\" style=\"margin-bottom: 0.9375rem;\">${t('menu.back')}</button>\r\n      <div class=\"help-screen\">\r\n        <h2>${t('help.title')}</h2>\r\n\r\n        <h3>${t('help.objectiveTitle')}</h3>\r\n        <p>${t('help.objectiveText')}</p>\r\n\r\n        <h3>${t('help.rulesTitle')}</h3>\r\n        <ul>\r\n          <li>${t('help.rules1')}</li>\r\n          <li>${t('help.rules2')}</li>\r\n          <li>${t('help.rules3')}</li>\r\n          <li>${t('help.rules4')}</li>\r\n          <li>${t('help.rules5')}</li>\r\n          <li>${t('help.rules6')}</li>\r\n        </ul>\r\n\r\n        <h3>${t('help.strategyTitle')}</h3>\r\n        <ul>\r\n          <li>${t('help.strategy1')}</li>\r\n          <li>${t('help.strategy2')}</li>\r\n          <li>${t('help.strategy3')}</li>\r\n          <li>${t('help.strategy4')}</li>\r\n        </ul>\r\n\r\n        <h3>${t('help.controlsTitle')}</h3>\r\n        <ul>\r\n          <li>${t('help.controls1')}</li>\r\n          <li>${t('help.controls2')}</li>\r\n          <li>${t('help.controls3')}</li>\r\n        </ul>\r\n      </div>\r\n    `;\r\n    \r\n    document.getElementById('back-btn')?.addEventListener('click', () => {\r\n      this.showMenu();\r\n    });\r\n  }\r\n  \r\n  // ===== GAME LOGIC =====\r\n  \r\n  private startNewGame(mode: 'pvp' | 'pvc', aiDifficulty: 'easy' | 'medium' | 'hard' = 'easy'): void {\r\n    // Initialize game state\r\n    this.gameState = {\r\n      board: this.createInitialBoard(),\r\n      currentPlayer: BLACK,\r\n      blackScore: 2,\r\n      whiteScore: 2,\r\n      gameMode: mode,\r\n      isGameOver: false,\r\n      validMoves: new Set(),\r\n      moveHistory: [],\r\n      aiDifficulty: aiDifficulty\r\n    };\r\n    \r\n    // Calculate initial valid moves\r\n    this.updateValidMoves();\r\n    \r\n    // Show game screen\r\n    this.showGameScreen();\r\n    \r\n    // Update display\r\n    this.updateDisplay();\r\n  }\r\n  \r\n  private createInitialBoard(): number[] {\r\n    const board = new Array(64).fill(EMPTY);\r\n    board[27] = WHITE;\r\n    board[28] = BLACK;\r\n    board[35] = BLACK;\r\n    board[36] = WHITE;\r\n    return board;\r\n  }\r\n  \r\n  private showGameScreen(): void {\r\n    const screenContainer = document.getElementById('screen-container');\r\n    if (!screenContainer || !this.gameState) return;\r\n    \r\n    this.currentScreen = 'game';\r\n    const header = document.getElementById('game-header');\r\n    if (header) header.style.display = 'flex';\r\n    \r\n    const modeText = this.gameState.gameMode === 'pvp'\r\n      ? t('game.pvp')\r\n      : `${t('game.pvai')} (${t('difficulty.' + this.gameState.aiDifficulty)})`;\r\n\r\n    screenContainer.innerHTML = `\r\n      <div class=\"game-screen\">\r\n        <div class=\"game-controls\">\r\n          <button class=\"back-button\" id=\"back-btn\">${t('game.back')}</button>\r\n        </div>\r\n        <div class=\"game-info\">\r\n          <div>${t('game.mode')}: ${modeText}</div>\r\n          <div id=\"turn-indicator\">${t('game.currentTurn')} <span style=\"color: #ffd700;\">${t('game.black')}</span></div>\r\n          <div id=\"ai-status\"></div>\r\n        </div>\r\n        <div class=\"game-board\" id=\"game-board\"></div>\r\n        <div id=\"game-over-modal\" style=\"display: none;\"></div>\r\n      </div>\r\n    `;\r\n    \r\n    // Create board cells\r\n    this.createBoardCells();\r\n    \r\n    // Add back button handler\r\n    document.getElementById('back-btn')?.addEventListener('click', async () => {\r\n      const confirmed = await this.showSimpleConfirm(\r\n        t('messages.quitConfirm'),\r\n        t('modal.quitConfirm.title')\r\n      );\r\n      if (confirmed) {\r\n        this.showMenu();\r\n      }\r\n    });\r\n  }\r\n  \r\n  private createBoardCells(): void {\r\n    const board = document.getElementById('game-board');\r\n    if (!board || !this.gameState) return;\r\n    \r\n    board.innerHTML = '';\r\n    \r\n    for (let i = 0; i < 64; i++) {\r\n      const cell = document.createElement('div');\r\n      cell.className = 'board-cell';\r\n      cell.dataset.position = i.toString();\r\n      \r\n      // Add click handler\r\n      cell.addEventListener('click', () => {\r\n        if (!this.isProcessingMove && !this.aiThinking) {\r\n          this.handleCellClick(i);\r\n        }\r\n      });\r\n      \r\n      board.appendChild(cell);\r\n    }\r\n    \r\n    // Render initial pieces\r\n    this.renderBoard();\r\n  }\r\n  \r\n  private renderBoard(): void {\r\n    if (!this.gameState) return;\r\n\r\n    const settings = this.getSettings();\r\n\r\n    // Calculate mobility for all valid moves if setting is enabled\r\n    const mobilityMap = new Map<number, { player: number; opponent: number }>();\r\n    if (settings.showMobility && this.gameState.validMoves.size > 0) {\r\n      for (const position of this.gameState.validMoves) {\r\n        const mobility = this.calculateMoveMobility(position, this.gameState.currentPlayer);\r\n        mobilityMap.set(position, mobility);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < 64; i++) {\r\n      const cell = document.querySelector(`[data-position=\"${i}\"]`) as HTMLElement;\r\n      if (!cell) continue;\r\n\r\n      // Clear cell classes\r\n      cell.className = 'board-cell';\r\n\r\n      // Clear cell content first\r\n      cell.innerHTML = '';\r\n\r\n      // Add piece if exists\r\n      if (this.gameState.board[i] !== EMPTY) {\r\n        const piece = document.createElement('div');\r\n        piece.className = `piece ${this.gameState.board[i] === BLACK ? 'piece-black' : 'piece-white'}`;\r\n        cell.appendChild(piece);\r\n      }\r\n\r\n      // Show valid moves\r\n      if (settings.showValid && this.gameState.validMoves.has(i)) {\r\n        cell.classList.add('valid-move');\r\n\r\n        // Show mobility if enabled\r\n        if (settings.showMobility && mobilityMap.has(i)) {\r\n          const mobility = mobilityMap.get(i)!;\r\n          const mobilityIndicator = document.createElement('div');\r\n          mobilityIndicator.className = 'mobility-indicator';\r\n\r\n          // Display as \"player-opponent\" format\r\n          mobilityIndicator.textContent = `${mobility.player}-${mobility.opponent}`;\r\n\r\n          // Color code based on mobility difference\r\n          const difference = mobility.player - mobility.opponent;\r\n          if (difference > 0) {\r\n            mobilityIndicator.classList.add('mobility-positive');\r\n          } else if (difference < 0) {\r\n            mobilityIndicator.classList.add('mobility-negative');\r\n          } else {\r\n            mobilityIndicator.classList.add('mobility-neutral');\r\n          }\r\n\r\n          cell.appendChild(mobilityIndicator);\r\n        }\r\n      }\r\n\r\n      // Show last move\r\n      if (settings.showLast && this.gameState.moveHistory.length > 0) {\r\n        const lastMove = this.gameState.moveHistory[this.gameState.moveHistory.length - 1];\r\n        if (lastMove && lastMove.position === i) {\r\n          cell.classList.add('last-move');\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  private getSettings(): any {\r\n    const stored = localStorage.getItem('reversi-settings');\r\n    if (stored) {\r\n      return JSON.parse(stored);\r\n    }\r\n    const lang = (localStorage.getItem('language') as Language) || 'en';\r\n    return {\r\n      language: lang,\r\n      showValid: true,\r\n      showLast: true,\r\n      showMobility: false,\r\n      animations: true,\r\n      autoPass: true,\r\n      confirmMoves: false\r\n    };\r\n  }\r\n  \r\n  private async handleCellClick(position: number): Promise<void> {\r\n    if (!this.gameState || this.gameState.isGameOver) return;\r\n\r\n    // Check if it's a valid move\r\n    if (!this.gameState.validMoves.has(position)) {\r\n      console.log(t('messages.invalidMove'));\r\n      return;\r\n    }\r\n    \r\n    // For PvC mode with confirmMoves setting\r\n    const settings = this.getSettings();\r\n    if (this.gameState.gameMode === 'pvc' &&\r\n        this.gameState.currentPlayer === BLACK &&\r\n        settings.confirmMoves) {\r\n      const confirmed = await this.showSimpleConfirm(\r\n        t('messages.moveConfirm'),\r\n        t('modal.moveConfirm.title')\r\n      );\r\n      if (!confirmed) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // Make the move\r\n    this.makeMove(position);\r\n  }\r\n  \r\n  private makeMove(position: number): void {\r\n    if (!this.gameState) return;\r\n\r\n    this.isProcessingMove = true;\r\n\r\n    // Get settings for animation checks\r\n    const settings = this.getSettings();\r\n    \r\n    // Get pieces to flip\r\n    const toFlip = this.getFlippedPieces(position, this.gameState.currentPlayer);\r\n    \r\n    // Analyze game situation for special effects\r\n    const specialEffects: SpecialEffect = {\r\n      corner: position === 0 || position === 7 || position === 56 || position === 63,\r\n      edge: this.isEdgePosition(position),\r\n      massive: toFlip.length >= 10,\r\n      chain: this.isChainMove(toFlip),\r\n      comeback: this.isComebackMove(),\r\n      domination: this.isDominationMove()\r\n    };\r\n    \r\n    // Calculate move grade with special effects\r\n    const grade = this.particleSystem.calculateGrade(toFlip.length, position, specialEffects);\r\n    \r\n    // Get cell position for particle effects\r\n    const cell = document.querySelector(`[data-position=\"${position}\"]`) as HTMLElement;\r\n    if (cell) {\r\n      const rect = cell.getBoundingClientRect();\r\n      const containerRect = this.container!.getBoundingClientRect();\r\n      const x = rect.left + rect.width / 2 - containerRect.left;\r\n      const y = rect.top + rect.height / 2 - containerRect.top;\r\n      \r\n      // Calculate flipped positions in pixel coordinates for directional particles\r\n      const flippedPixelPositions = toFlip.map(pos => {\r\n        const flippedCell = document.querySelector(`[data-position=\"${pos}\"]`) as HTMLElement;\r\n        if (flippedCell) {\r\n          const flippedRect = flippedCell.getBoundingClientRect();\r\n          return {\r\n            x: flippedRect.left + flippedRect.width / 2 - containerRect.left,\r\n            y: flippedRect.top + flippedRect.height / 2 - containerRect.top\r\n          };\r\n        }\r\n        return { x, y }; // Fallback to source position\r\n      });\r\n\r\n      // Trigger particle effect based on grade with special effects and directional info\r\n      if (settings.animations) {\r\n        this.particleSystem.triggerMoveEffect(x, y, grade, toFlip.length, specialEffects, flippedPixelPositions);\r\n\r\n        // Additional special effects\r\n        if (specialEffects.chain) {\r\n          this.particleSystem.createChainEffect(x, y);\r\n        }\r\n\r\n        // Show grade indicator\r\n        this.showGradeIndicator(grade, x, y);\r\n      }\r\n    }\r\n    \r\n    // Record move in history\r\n    this.gameState.moveHistory.push({\r\n      position: position,\r\n      player: this.gameState.currentPlayer,\r\n      flipped: toFlip\r\n    });\r\n    \r\n    // Add screen shake for higher grades\r\n    this.triggerScreenShake(grade);\r\n    \r\n    // Place the piece with animation\r\n    this.gameState.board[position] = this.gameState.currentPlayer;\r\n    if (cell) {\r\n      const piece = document.createElement('div');\r\n      piece.className = `piece ${this.gameState.currentPlayer === BLACK ? 'piece-black' : 'piece-white'} placing`;\r\n      cell.innerHTML = '';\r\n      cell.appendChild(piece);\r\n    }\r\n    \r\n    // Flip pieces with animation and particles\r\n    if (settings.animations) {\r\n      setTimeout(() => {\r\n        this.flipPiecesWithEffects(toFlip, grade);\r\n        // Adjust timeout based on number of pieces being flipped\r\n        const flipDuration = toFlip.length * 80 + 300;\r\n        setTimeout(() => {\r\n          this.afterMove();\r\n        }, flipDuration);\r\n      }, 200);\r\n    } else {\r\n      this.flipPiecesWithEffects(toFlip, grade);\r\n      this.afterMove();\r\n    }\r\n  }\r\n  \r\n  private showGradeIndicator(grade: Grade, x: number, y: number): void {\r\n    // Create a temporary grade indicator\r\n    const indicator = document.createElement('div');\r\n    indicator.style.position = 'absolute';\r\n    indicator.style.left = `${x}px`;\r\n    indicator.style.top = `${y - 50}px`;\r\n    indicator.style.transform = 'translateX(-50%)';\r\n    indicator.style.fontSize = '3rem';\r\n    indicator.style.fontWeight = 'bold';\r\n    indicator.style.zIndex = '200';\r\n    indicator.style.pointerEvents = 'none';\r\n    indicator.style.animation = 'gradePopup 1s ease-out forwards';\r\n    \r\n    // Set grade text and color\r\n    switch (grade) {\r\n      case 'SSS':\r\n        indicator.textContent = 'SSS';\r\n        indicator.style.color = '#ff0080';\r\n        indicator.style.textShadow = '0 0 1.875rem #ff0080, 0 0 3.75rem #ff69b4';\r\n        indicator.style.fontSize = '3.5rem';\r\n        indicator.style.animation = 'gradePopup 2s ease-out forwards, rainbow 2s infinite';\r\n        break;\r\n      case 'SS':\r\n        indicator.textContent = 'SS';\r\n        indicator.style.color = '#9932cc';\r\n        indicator.style.textShadow = '0 0 1.5625rem #9932cc, 0 0 3.125rem #8b00ff';\r\n        indicator.style.fontSize = '3.25rem';\r\n        indicator.style.animation = 'gradePopup 1.5s ease-out forwards, glow 1.5s infinite';\r\n        break;\r\n      case 'S':\r\n        indicator.textContent = 'S';\r\n        indicator.style.color = '#ff69b4';\r\n        indicator.style.textShadow = '0 0 1.25rem #ff69b4';\r\n        indicator.style.fontSize = '3rem';\r\n        break;\r\n      case 'A':\r\n        indicator.textContent = 'A';\r\n        indicator.style.color = '#ffd700';\r\n        indicator.style.textShadow = '0 0 1.25rem #ffd700';\r\n        break;\r\n      case 'B':\r\n        indicator.textContent = 'B';\r\n        indicator.style.color = '#00ff7f';\r\n        indicator.style.textShadow = '0 0 0.9375rem #00ff7f';\r\n        break;\r\n      case 'C':\r\n        indicator.textContent = 'C';\r\n        indicator.style.color = '#888888';\r\n        indicator.style.textShadow = '0 0 0.625rem #888888';\r\n        break;\r\n    }\r\n    \r\n    // Add animation style if not exists\r\n    if (!document.getElementById('grade-animation-style')) {\r\n      const style = document.createElement('style');\r\n      style.id = 'grade-animation-style';\r\n      style.textContent = `\r\n        @keyframes gradePopup {\r\n          0% {\r\n            opacity: 0;\r\n            transform: translateX(-50%) translateY(0) scale(0.5);\r\n          }\r\n          50% {\r\n            opacity: 1;\r\n            transform: translateX(-50%) translateY(-1.25rem) scale(1.2);\r\n          }\r\n          100% {\r\n            opacity: 0;\r\n            transform: translateX(-50%) translateY(-2.5rem) scale(1);\r\n          }\r\n        }\r\n        \r\n        @keyframes rainbow {\r\n          0% { color: #ff0000; }\r\n          16% { color: #ff8000; }\r\n          32% { color: #ffff00; }\r\n          48% { color: #00ff00; }\r\n          64% { color: #0080ff; }\r\n          80% { color: #8000ff; }\r\n          100% { color: #ff0080; }\r\n        }\r\n        \r\n        @keyframes glow {\r\n          0%, 100% { \r\n            text-shadow: 0 0 1.5625rem #9932cc, 0 0 3.125rem #8b00ff;\r\n          }\r\n          50% { \r\n            text-shadow: 0 0 2.5rem #9932cc, 0 0 5rem #8b00ff, 0 0 7.5rem #ff00ff;\r\n          }\r\n        }\r\n      `;\r\n      document.head.appendChild(style);\r\n    }\r\n    \r\n    this.container?.appendChild(indicator);\r\n    \r\n    // Remove after animation\r\n    setTimeout(() => {\r\n      indicator.remove();\r\n    }, 1000);\r\n  }\r\n  \r\n  private flipPiecesWithEffects(positions: number[], grade?: Grade): void {\r\n    if (!this.gameState) return;\r\n    \r\n    const settings = this.getSettings();\r\n    \r\n    // Sequential flipping with delays for dynamic effect\r\n    positions.forEach((pos, index) => {\r\n      setTimeout(() => {\r\n        this.gameState!.board[pos] = this.gameState!.currentPlayer;\r\n        \r\n        const cell = document.querySelector(`[data-position=\"${pos}\"]`) as HTMLElement;\r\n        if (cell) {\r\n          // Create flip particle effect with grade-based colors\r\n          const rect = cell.getBoundingClientRect();\r\n          const containerRect = this.container!.getBoundingClientRect();\r\n          const x = rect.left + rect.width / 2 - containerRect.left;\r\n          const y = rect.top + rect.height / 2 - containerRect.top;\r\n          \r\n          const color = this.gameState!.currentPlayer === BLACK ? '#000000' : '#ffffff';\r\n          this.particleSystem.createFlipEffect(x, y, color, grade);\r\n          \r\n          const piece = cell.querySelector('.piece');\r\n          if (piece && settings.animations) {\r\n            piece.classList.add('flipping');\r\n            setTimeout(() => {\r\n              piece.className = `piece ${this.gameState!.currentPlayer === BLACK ? 'piece-black' : 'piece-white'}`;\r\n            }, 250);\r\n          } else if (piece) {\r\n            piece.className = `piece ${this.gameState!.currentPlayer === BLACK ? 'piece-black' : 'piece-white'}`;\r\n          }\r\n        }\r\n      }, index * 80); // 80ms delay between each flip for dynamic effect\r\n    });\r\n  }\r\n  \r\n  private flipPieces(positions: number[]): void {\r\n    if (!this.gameState) return;\r\n    \r\n    const settings = this.getSettings();\r\n    \r\n    positions.forEach(pos => {\r\n      this.gameState!.board[pos] = this.gameState!.currentPlayer;\r\n      \r\n      const cell = document.querySelector(`[data-position=\"${pos}\"]`) as HTMLElement;\r\n      if (cell) {\r\n        const piece = cell.querySelector('.piece');\r\n        if (piece && settings.animations) {\r\n          piece.classList.add('flipping');\r\n          setTimeout(() => {\r\n            piece.className = `piece ${this.gameState!.currentPlayer === BLACK ? 'piece-black' : 'piece-white'}`;\r\n          }, 250);\r\n        } else if (piece) {\r\n          piece.className = `piece ${this.gameState!.currentPlayer === BLACK ? 'piece-black' : 'piece-white'}`;\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n  private afterMove(): void {\r\n    if (!this.gameState) return;\r\n    \r\n    // Update scores\r\n    this.updateScores();\r\n    \r\n    // Switch player\r\n    this.gameState.currentPlayer = this.gameState.currentPlayer === BLACK ? WHITE : BLACK;\r\n    \r\n    // Update valid moves for new player\r\n    this.updateValidMoves();\r\n\r\n    // 🔥 戰鬥系統增強：檢測連擊和特殊招式\r\n    const previousPlayer = this.gameState.currentPlayer === BLACK ? WHITE : BLACK;\r\n    const opponentCanMove = this.gameState.validMoves.size > 0;\r\n    const lastMove = this.gameState.moveHistory[this.gameState.moveHistory.length - 1];\r\n\r\n    if (lastMove) {\r\n      // 處理連擊 (當對手無法移動時)\r\n      this.comboSystem.processMove(\r\n        previousPlayer === BLACK ? 1 : 2, // 轉換為 PlayerColor enum 值\r\n        opponentCanMove,\r\n        lastMove.flipped.length\r\n      );\r\n\r\n      // 檢測特殊招式\r\n      this.detectSpecialMoves(\r\n        lastMove.position,\r\n        lastMove.flipped, // 傳遞翻轉位置陣列而非長度\r\n        previousPlayer === BLACK ? this.gameState.blackScore : this.gameState.whiteScore,\r\n        previousPlayer === BLACK ? this.gameState.whiteScore : this.gameState.blackScore\r\n      );\r\n    }\r\n\r\n    // Check for game over or pass\r\n    if (!this.checkGameStatus()) {\r\n      // Update display\r\n      this.updateDisplay();\r\n      \r\n      // If it's AI's turn, make AI move\r\n      if (this.gameState.gameMode === 'pvc' && this.gameState.currentPlayer === WHITE) {\r\n        this.makeAIMove();\r\n      }\r\n    }\r\n    \r\n    this.isProcessingMove = false;\r\n  }\r\n  \r\n  private updateValidMoves(): void {\r\n    if (!this.gameState) return;\r\n    \r\n    this.gameState.validMoves.clear();\r\n    \r\n    for (let i = 0; i < 64; i++) {\r\n      if (this.gameState.board[i] === EMPTY) {\r\n        if (this.isValidMove(i, this.gameState.currentPlayer)) {\r\n          this.gameState.validMoves.add(i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  private isValidMove(position: number, player: number): boolean {\r\n    if (!this.gameState || this.gameState.board[position] !== EMPTY) {\r\n      return false;\r\n    }\r\n    \r\n    // Check all directions\r\n    for (const [dx, dy] of DIRECTIONS) {\r\n      if (this.checkDirection(position, player, dx || 0, dy || 0).length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  private checkDirection(position: number, player: number, dx: number, dy: number): number[] {\r\n    if (!this.gameState) return [];\r\n    \r\n    const flipped: number[] = [];\r\n    const row = Math.floor(position / 8);\r\n    const col = position % 8;\r\n    const opponent = player === BLACK ? WHITE : BLACK;\r\n    \r\n    let r = row + dy;\r\n    let c = col + dx;\r\n    \r\n    // Find opponent pieces\r\n    while (r >= 0 && r < 8 && c >= 0 && c < 8) {\r\n      const pos = r * 8 + c;\r\n      \r\n      if (this.gameState.board[pos] === EMPTY) {\r\n        return []; // Empty cell, no valid line\r\n      } else if (this.gameState.board[pos] === opponent) {\r\n        flipped.push(pos);\r\n      } else {\r\n        // Found our piece\r\n        return flipped.length > 0 ? flipped : [];\r\n      }\r\n      \r\n      r += dy;\r\n      c += dx;\r\n    }\r\n    \r\n    return []; // Hit edge without finding our piece\r\n  }\r\n  \r\n  private getFlippedPieces(position: number, player: number): number[] {\r\n    const allFlipped: number[] = [];\r\n\r\n    for (const [dx, dy] of DIRECTIONS) {\r\n      const flipped = this.checkDirection(position, player, dx, dy);\r\n      allFlipped.push(...flipped);\r\n    }\r\n\r\n    return allFlipped;\r\n  }\r\n\r\n  private calculateMoveMobility(position: number, player: number): { player: number; opponent: number } {\r\n    if (!this.gameState) return { player: 0, opponent: 0 };\r\n\r\n    // Create a temporary board with the move applied\r\n    const tempBoard = [...this.gameState.board];\r\n    const flippedPieces = this.getFlippedPieces(position, player);\r\n\r\n    // Apply the move\r\n    tempBoard[position] = player;\r\n    for (const pos of flippedPieces) {\r\n      tempBoard[pos] = player;\r\n    }\r\n\r\n    // Calculate valid moves for both players after this move\r\n    const opponent = player === BLACK ? WHITE : BLACK;\r\n\r\n    // Count opponent's valid moves after this move\r\n    let opponentMoves = 0;\r\n    for (let i = 0; i < 64; i++) {\r\n      if (tempBoard[i] === EMPTY) {\r\n        if (this.isValidMoveOnBoard(i, opponent, tempBoard)) {\r\n          opponentMoves++;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Count player's valid moves after this move (after opponent's turn)\r\n    let playerMoves = 0;\r\n    for (let i = 0; i < 64; i++) {\r\n      if (tempBoard[i] === EMPTY) {\r\n        if (this.isValidMoveOnBoard(i, player, tempBoard)) {\r\n          playerMoves++;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Return both player and opponent mobility\r\n    return { player: playerMoves, opponent: opponentMoves };\r\n  }\r\n\r\n  private isValidMoveOnBoard(position: number, player: number, board: number[]): boolean {\r\n    if (board[position] !== EMPTY) {\r\n      return false;\r\n    }\r\n\r\n    // Check all directions\r\n    for (const [dx, dy] of DIRECTIONS) {\r\n      if (this.checkDirectionOnBoard(position, player, dx || 0, dy || 0, board).length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private checkDirectionOnBoard(position: number, player: number, dx: number, dy: number, board: number[]): number[] {\r\n    const flipped: number[] = [];\r\n    const row = Math.floor(position / 8);\r\n    const col = position % 8;\r\n    const opponent = player === BLACK ? WHITE : BLACK;\r\n\r\n    let r = row + dy;\r\n    let c = col + dx;\r\n\r\n    // Find opponent pieces\r\n    while (r >= 0 && r < 8 && c >= 0 && c < 8) {\r\n      const pos = r * 8 + c;\r\n\r\n      if (board[pos] === EMPTY) {\r\n        return []; // Empty cell, no valid line\r\n      } else if (board[pos] === opponent) {\r\n        flipped.push(pos);\r\n      } else {\r\n        // Found our piece\r\n        return flipped.length > 0 ? flipped : [];\r\n      }\r\n\r\n      r += dy;\r\n      c += dx;\r\n    }\r\n\r\n    return []; // Hit edge without finding our piece\r\n  }\r\n  \r\n  private updateScores(): void {\r\n    if (!this.gameState) return;\r\n    \r\n    let black = 0;\r\n    let white = 0;\r\n    \r\n    for (const piece of this.gameState.board) {\r\n      if (piece === BLACK) black++;\r\n      else if (piece === WHITE) white++;\r\n    }\r\n    \r\n    this.gameState.blackScore = black;\r\n    this.gameState.whiteScore = white;\r\n  }\r\n  \r\n  private checkGameStatus(): boolean {\r\n    if (!this.gameState) return false;\r\n    \r\n    // No valid moves for current player\r\n    if (this.gameState.validMoves.size === 0) {\r\n      // Switch to other player\r\n      this.gameState.currentPlayer = this.gameState.currentPlayer === BLACK ? WHITE : BLACK;\r\n      this.updateValidMoves();\r\n      \r\n      // Other player also has no moves - game over\r\n      if (this.gameState.validMoves.size === 0) {\r\n        this.gameOver();\r\n        return true;\r\n      } else {\r\n        // Pass turn\r\n        const settings = this.getSettings();\r\n        if (settings.autoPass) {\r\n          const color = this.gameState.currentPlayer === BLACK ? 'Black' : 'White';\r\n          this.showMessage(`No valid moves - passing to ${color}`);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  private gameOver(): void {\r\n    if (!this.gameState) return;\r\n    \r\n    this.gameState.isGameOver = true;\r\n    \r\n    let winner: string;\r\n    let winnerColor: string;\r\n    \r\n    if (this.gameState.blackScore > this.gameState.whiteScore) {\r\n      winner = t('game.blackWins');\r\n      winnerColor = '#000';\r\n    } else if (this.gameState.whiteScore > this.gameState.blackScore) {\r\n      winner = t('game.whiteWins');\r\n      winnerColor = '#fff';\r\n    } else {\r\n      winner = t('game.tie');\r\n      winnerColor = '#ffd700';\r\n    }\r\n    \r\n    const modal = document.getElementById('game-over-modal');\r\n    if (modal) {\r\n      modal.style.display = 'block';\r\n      modal.className = 'game-over-modal';\r\n      modal.innerHTML = `\r\n        <h2 class=\"game-over-title\">🏆 ${t('game.gameOverTitle')}</h2>\r\n        <div class=\"final-scores\">\r\n          <p style=\"font-size: 2.25rem; color: ${winnerColor}; margin: 1.25rem 0;\">\r\n            ${winner}\r\n          </p>\r\n          <p>⚫ ${t('game.black')}: ${this.gameState.blackScore}</p>\r\n          <p>⚪ ${t('game.white')}: ${this.gameState.whiteScore}</p>\r\n          <p style=\"margin-top: 1.25rem; font-size: 1.125rem;\">\r\n            ${t('game.totalMoves')}: ${this.gameState.moveHistory.length}\r\n          </p>\r\n        </div>\r\n        <div class=\"modal-buttons\">\r\n          <button class=\"menu-button\" id=\"play-again\">${t('game.playAgain')}</button>\r\n          <button class=\"menu-button\" id=\"main-menu\">${t('game.mainMenu')}</button>\r\n        </div>\r\n      `;\r\n      \r\n      document.getElementById('play-again')?.addEventListener('click', () => {\r\n        modal.style.display = 'none';\r\n        this.startNewGame(this.gameState!.gameMode, this.gameState!.aiDifficulty);\r\n      });\r\n      \r\n      document.getElementById('main-menu')?.addEventListener('click', () => {\r\n        modal.style.display = 'none';\r\n        this.showMenu();\r\n      });\r\n    }\r\n  }\r\n  \r\n  private updateDisplay(): void {\r\n    if (!this.gameState) return;\r\n    \r\n    // Update scores\r\n    document.getElementById('black-score')!.textContent = `⚫ ${t('game.black')}: ${this.gameState.blackScore}`;\r\n    document.getElementById('white-score')!.textContent = `⚪ ${t('game.white')}: ${this.gameState.whiteScore}`;\r\n\r\n    // Update current turn\r\n    const currentColor = this.gameState.currentPlayer === BLACK ? t('game.black') : t('game.white');\r\n    document.getElementById('current-turn')!.innerHTML = `${t('game.current')}: <span style=\"color: ${this.gameState.currentPlayer === BLACK ? '#000' : '#fff'};\">${currentColor}</span>`;\r\n\r\n    const turnIndicator = document.getElementById('turn-indicator');\r\n    if (turnIndicator) {\r\n      const color = this.gameState.currentPlayer === BLACK ? '#000' : '#fff';\r\n      turnIndicator.innerHTML = `${t('game.currentTurn')} <span style=\"color: ${color}; font-weight: bold;\">${currentColor}</span>`;\r\n    }\r\n    \r\n    // Render board\r\n    this.renderBoard();\r\n  }\r\n  \r\n  private showMessage(message: string): void {\r\n    const aiStatus = document.getElementById('ai-status');\r\n    if (aiStatus) {\r\n      aiStatus.textContent = message;\r\n      setTimeout(() => {\r\n        aiStatus.textContent = '';\r\n      }, 2000);\r\n    }\r\n  }\r\n  \r\n  private triggerScreenShake(grade: Grade): void {\r\n    if (!this.container) return;\r\n    \r\n    const settings = this.getSettings();\r\n    if (!settings.animations) return; // Skip if animations disabled\r\n    \r\n    let intensity = 0;\r\n    let duration = 0;\r\n    \r\n    switch (grade) {\r\n      case 'SSS':\r\n        intensity = 8;  // 從20減少至8\r\n        duration = 600;  // 從1200減少至600\r\n        console.log('🌍 REALITY SHAKE - LEGENDARY!!!');\r\n        break;\r\n      case 'SS':\r\n        intensity = 7;  // 從16減少至7\r\n        duration = 550;  // 從1000減少至550\r\n        console.log('🌪️ WORLD SHAKE - MYTHICAL!!');\r\n        break;\r\n      case 'S':\r\n        intensity = 12;\r\n        duration = 800;\r\n        console.log('💥 SCREEN SHAKE - EPIC!');\r\n        break;\r\n      case 'A':\r\n        intensity = 6;\r\n        duration = 500;\r\n        console.log('📳 Screen shake - Great!');\r\n        break;\r\n      case 'B':\r\n        intensity = 3;\r\n        duration = 300;\r\n        console.log('📱 Screen shake - Good!');\r\n        break;\r\n      case 'C':\r\n        // No shake for C grade\r\n        return;\r\n    }\r\n    \r\n    // Apply shake animation\r\n    const app = this.container.querySelector('.super-reversi-app') as HTMLElement;\r\n    if (app) {\r\n      app.style.animation = `shake ${duration}ms ease-in-out`;\r\n      \r\n      // Add shake keyframes if not exists\r\n      if (!document.getElementById('shake-animation')) {\r\n        const style = document.createElement('style');\r\n        style.id = 'shake-animation';\r\n        style.textContent = `\r\n          @keyframes shake {\r\n            0%, 100% { transform: translate(0, 0) rotate(0deg); }\r\n            10% { transform: translate(-${intensity}px, -${intensity/2}px) rotate(-1deg); }\r\n            20% { transform: translate(${intensity}px, -${intensity}px) rotate(1deg); }\r\n            30% { transform: translate(-${intensity}px, ${intensity/2}px) rotate(0deg); }\r\n            40% { transform: translate(${intensity}px, ${intensity}px) rotate(1deg); }\r\n            50% { transform: translate(-${intensity/2}px, -${intensity}px) rotate(-1deg); }\r\n            60% { transform: translate(${intensity/2}px, ${intensity}px) rotate(0deg); }\r\n            70% { transform: translate(-${intensity/2}px, ${intensity/2}px) rotate(-1deg); }\r\n            80% { transform: translate(${intensity/2}px, -${intensity/2}px) rotate(1deg); }\r\n            90% { transform: translate(-${intensity/4}px, ${intensity/4}px) rotate(0deg); }\r\n          }\r\n        `;\r\n        document.head.appendChild(style);\r\n      }\r\n      \r\n      // Remove animation after completion\r\n      setTimeout(() => {\r\n        app.style.animation = '';\r\n      }, duration);\r\n    }\r\n  }\r\n  \r\n  // ===== AI LOGIC =====\r\n  \r\n  private makeAIMove(): void {\r\n    if (!this.gameState || this.gameState.validMoves.size === 0) return;\r\n    \r\n    this.aiThinking = true;\r\n    const aiStatus = document.getElementById('ai-status');\r\n    if (aiStatus) {\r\n      aiStatus.innerHTML = '<span class=\"ai-thinking\">AI is thinking...</span>';\r\n    }\r\n    \r\n    // Simulate thinking time\r\n    setTimeout(() => {\r\n      const move = this.selectAIMove();\r\n      if (move !== -1) {\r\n        this.makeMove(move);\r\n      }\r\n      \r\n      if (aiStatus) {\r\n        aiStatus.textContent = '';\r\n      }\r\n      this.aiThinking = false;\r\n    }, 800);\r\n  }\r\n  \r\n  private selectAIMove(): number {\r\n    if (!this.gameState) return -1;\r\n    \r\n    const moves = Array.from(this.gameState.validMoves);\r\n    if (moves.length === 0) return -1;\r\n    \r\n    switch (this.gameState.aiDifficulty) {\r\n      case 'easy':\r\n        return this.selectRandomMove(moves);\r\n      \r\n      case 'medium':\r\n        return this.selectGreedyMove(moves);\r\n      \r\n      case 'hard':\r\n        return this.selectStrategicMove(moves);\r\n      \r\n      default:\r\n        return moves[0] ?? 0;\r\n    }\r\n  }\r\n  \r\n  private selectRandomMove(moves: number[]): number {\r\n    return moves[Math.floor(Math.random() * moves.length)] ?? 0;\r\n  }\r\n  \r\n  private selectGreedyMove(moves: number[]): number {\r\n    if (!this.gameState) return moves[0] ?? 0;\r\n    \r\n    let bestMove = moves[0] ?? 0;\r\n    let maxFlips = 0;\r\n    \r\n    for (const move of moves) {\r\n      const flips = this.getFlippedPieces(move, WHITE).length;\r\n      if (flips > maxFlips) {\r\n        maxFlips = flips;\r\n        bestMove = move;\r\n      }\r\n    }\r\n    \r\n    return bestMove;\r\n  }\r\n  \r\n  private selectStrategicMove(moves: number[]): number {\r\n    if (!this.gameState) return moves[0] ?? 0;\r\n    \r\n    // Position weights for strategic play\r\n    const weights = [\r\n      120, -20,  20,   5,   5,  20, -20, 120,\r\n      -20, -40,  -5,  -5,  -5,  -5, -40, -20,\r\n       20,  -5,  15,   3,   3,  15,  -5,  20,\r\n        5,  -5,   3,   3,   3,   3,  -5,   5,\r\n        5,  -5,   3,   3,   3,   3,  -5,   5,\r\n       20,  -5,  15,   3,   3,  15,  -5,  20,\r\n      -20, -40,  -5,  -5,  -5,  -5, -40, -20,\r\n      120, -20,  20,   5,   5,  20, -20, 120\r\n    ];\r\n    \r\n    let bestMove = moves[0] ?? 0;\r\n    let bestScore = -1000;\r\n    \r\n    for (const move of moves) {\r\n      const flips = this.getFlippedPieces(move, WHITE).length;\r\n      const positionScore = weights[move] ?? 0;\r\n      const totalScore = positionScore + flips * 10;\r\n      \r\n      if (totalScore > bestScore) {\r\n        bestScore = totalScore;\r\n        bestMove = move;\r\n      }\r\n    }\r\n    \r\n    return bestMove;\r\n  }\r\n  \r\n  // Helper functions for special effects detection\r\n  private isEdgePosition(position: number): boolean {\r\n    const row = Math.floor(position / 8);\r\n    const col = position % 8;\r\n    return (row === 0 || row === 7 || col === 0 || col === 7) && \r\n           !(position === 0 || position === 7 || position === 56 || position === 63);\r\n  }\r\n  \r\n  private isChainMove(flippedPositions: number[]): boolean {\r\n    if (!this.gameState || this.gameState.moveHistory.length === 0) return false;\r\n    \r\n    // Check if this move flips pieces that were recently placed/flipped\r\n    const lastMove = this.gameState.moveHistory[this.gameState.moveHistory.length - 1];\r\n    \r\n    // If last move flipped a lot and this move also flips a lot, it's likely a chain\r\n    return (lastMove as any)?.flipped?.length >= 3 && flippedPositions.length >= 3;\r\n  }\r\n  \r\n  private isComebackMove(): boolean {\r\n    if (!this.gameState) return false;\r\n    \r\n    const scoreDiff = this.gameState.currentPlayer === BLACK ? \r\n      this.gameState.blackScore - this.gameState.whiteScore :\r\n      this.gameState.whiteScore - this.gameState.blackScore;\r\n    \r\n    // Comeback if currently losing by 5+ pieces\r\n    return scoreDiff <= -5;\r\n  }\r\n  \r\n  private isDominationMove(): boolean {\r\n    if (!this.gameState) return false;\r\n    \r\n    const scoreDiff = this.gameState.currentPlayer === BLACK ? \r\n      this.gameState.blackScore - this.gameState.whiteScore :\r\n      this.gameState.whiteScore - this.gameState.blackScore;\r\n    \r\n    // Domination if currently winning by 10+ pieces\r\n    return scoreDiff >= 10;\r\n  }\r\n\r\n  // Simple Modal Methods\r\n  private showSimpleConfirm(message: string, title?: string): Promise<boolean> {\r\n    return new Promise((resolve) => {\r\n      const modal = document.getElementById('simple-modal');\r\n      const modalTitle = document.getElementById('modal-title');\r\n      const modalMessage = document.getElementById('modal-message');\r\n      const confirmBtn = document.getElementById('modal-confirm');\r\n      const cancelBtn = document.getElementById('modal-cancel');\r\n\r\n      if (!modal || !modalTitle || !modalMessage || !confirmBtn || !cancelBtn) {\r\n        // Fallback to native confirm\r\n        resolve(confirm(message));\r\n        return;\r\n      }\r\n\r\n      // Set modal content with i18n support\r\n      modalTitle.textContent = title || t('modal.confirm.title');\r\n      modalMessage.textContent = message;\r\n\r\n      // Update button texts with current language\r\n      confirmBtn.textContent = t('modal.confirm');\r\n      cancelBtn.textContent = t('modal.cancel');\r\n\r\n      // Show modal\r\n      modal.style.display = 'flex';\r\n\r\n      // Handle confirm\r\n      const handleConfirm = () => {\r\n        modal.style.display = 'none';\r\n        confirmBtn.removeEventListener('click', handleConfirm);\r\n        cancelBtn.removeEventListener('click', handleCancel);\r\n        resolve(true);\r\n      };\r\n\r\n      // Handle cancel\r\n      const handleCancel = () => {\r\n        modal.style.display = 'none';\r\n        confirmBtn.removeEventListener('click', handleConfirm);\r\n        cancelBtn.removeEventListener('click', handleCancel);\r\n        resolve(false);\r\n      };\r\n\r\n      // Add event listeners\r\n      confirmBtn.addEventListener('click', handleConfirm);\r\n      cancelBtn.addEventListener('click', handleCancel);\r\n\r\n      // Close on backdrop click\r\n      modal.addEventListener('click', (e) => {\r\n        if (e.target === modal) {\r\n          handleCancel();\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n// Initialize application\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  console.log('DOM loaded - initializing Super Reversi');\r\n  const container = document.getElementById('game-container');\r\n  \r\n  if (container) {\r\n    try {\r\n      const game = new SuperReversiGame();\r\n      await game.initialize(container);\r\n      \r\n      // Store globally for debugging\r\n      (window as any).superReversiGame = game;\r\n      \r\n      console.log('🎮 Game ready to play!');\r\n    } catch (error) {\r\n      console.error('Failed to initialize:', error);\r\n      container.innerHTML = `\r\n        <div style=\"padding: 1.25rem; color: red;\">\r\n          <h2>Error Loading Game</h2>\r\n          <p>${error}</p>\r\n        </div>\r\n      `;\r\n    }\r\n  } else {\r\n    console.error('Container not found!');\r\n  }\r\n});\r\n\r\nexport default SuperReversiGame;"],"names":["PARTICLE_PRESETS","getPresetForGrade","grade","blendPresets","preset1","preset2","ratio","config1","config2","ParticleSystem","ctx","container","rect","enabled","animate","time","deltaTime","i","p","outerRadius","innerRadius","radius","angle","x","y","flippedCount","position","specialEffects","isCorner","row","col","isEdge","score","flippedPositions","presetType","preset","flipDirections","intensityMultiplier","particleCount","sourceX","sourceY","_","pos","dx","dy","distance","index","total","colors","color","speed","directionIndex","direction","baseAngle","spreadAngle","spreadRadius","startX","startY","size","life","wave","goldColors","j","wobble","vortex","vortexX","rift","redColors","spiral","vx","vy","spread","finalAngle","purpleColors","blueColors","flipDir","directions","ring","greenColors","grayColors","isBlack","gradeColors","intensity","primaryColor","accentColors","burstCount","ringCount","particlesPerRing","castleColors","wall","brick","phoenixColors","waveColors","particle","royalColors","jewel","lightningColors","bolt","segment","config","textElement","currentLanguage","translations","t","key","params","translation","k","setLanguage","lang","applyTranslations","root","el","COMBO_LEVELS","ComboSystem","player","opponentCanMove","moveScore","event","reason","count","baseEffect","intensityBonus","combos","e","totalCombos","averageLength","sum","combo","distribution","comboType","handler","text","SPECIAL_MOVE_CONDITIONS","SpecialMoveDetector","playerScore","opponentScore","moveNumber","totalMoves","triggeredMoves","flipCount","scoreDiff","moveType","condition","min","max","type","timing","progress","special","context","directionCount","dr","dc","found","r","c","EMPTY","BLACK","WHITE","DIRECTIONS","SuperReversiGame","comboEvent","settings","centerX","centerY","countElement","multiplierElement","currentScore","specialMoves","title","titleElement","subtitleElement","subtitle","style","screenContainer","header","selectedDifficulty","diffButtons","diffDesc","descriptions","btn","b","mode","aiDifficulty","board","modeText","cell","mobilityMap","mobility","piece","mobilityIndicator","difference","lastMove","stored","toFlip","containerRect","flippedPixelPositions","flippedCell","flippedRect","flipDuration","indicator","positions","previousPlayer","flipped","opponent","allFlipped","tempBoard","flippedPieces","opponentMoves","playerMoves","black","white","winner","winnerColor","modal","currentColor","turnIndicator","message","aiStatus","duration","app","move","moves","bestMove","maxFlips","flips","weights","bestScore","totalScore","resolve","modalTitle","modalMessage","confirmBtn","cancelBtn","handleConfirm","handleCancel","game","error"],"mappings":"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"}