{"version":3,"file":"index-BkuILu9b.js","sources":["../../src/effects/particle-presets.ts","../../src/effects/green-lotus-effect.ts","../../src/effects/unlimited-blade-works.ts","../../src/effects/divine-sword-thunder.ts","../../src/effects/nine-finale-effect.ts","../../src/effects/ice-spear-effect.ts","../../src/particle-system.ts","../../src/i18n/index.ts","../../src/effects/combo-system.ts","../../src/effects/special-moves.ts","../../src/main-complete.ts"],"sourcesContent":["/**\r\n * 粒子效果預設庫\r\n * 提供多種視覺特效預設配置：雪花、火焰、閃電、黑洞等\r\n */\r\n\r\nexport type ParticlePresetType = 'snowflake' | 'fire' | 'lightning' | 'blackhole' | 'explosion' | 'magic' | 'storm' | 'supernova' | 'cosmic_burst' | 'green_lotus' | 'unlimited_blade_works' | 'divine_thunder' | 'nine_finale';\r\n\r\nexport interface ParticlePresetConfig {\r\n  type: ParticlePresetType;\r\n  colors: string[];\r\n  behavior: ParticleBehavior;\r\n  physics: ParticlePhysics;\r\n  visual: ParticleVisual;\r\n  animation: ParticleAnimation;\r\n  spawning: ParticleSpawning;\r\n}\r\n\r\nexport interface ParticleBehavior {\r\n  movement: 'float' | 'rise' | 'fall' | 'spiral' | 'chain' | 'implode' | 'explode';\r\n  gravity: number;\r\n  drag: number;\r\n  turbulence: number;\r\n}\r\n\r\nexport interface ParticlePhysics {\r\n  velocity: { min: number; max: number };\r\n  acceleration: { x: number; y: number };\r\n  mass: number;\r\n  elasticity: number;\r\n}\r\n\r\nexport interface ParticleVisual {\r\n  size: { min: number; max: number };\r\n  opacity: { start: number; end: number };\r\n  scale: { start: number; end: number };\r\n  rotation: { enabled: boolean; speed: number };\r\n  glow: { enabled: boolean; intensity: number };\r\n}\r\n\r\nexport interface ParticleAnimation {\r\n  lifespan: { min: number; max: number };\r\n  fadeIn: number;\r\n  fadeOut: number;\r\n  pulsing: { enabled: boolean; frequency: number };\r\n}\r\n\r\nexport interface ParticleSpawning {\r\n  count: { min: number; max: number };\r\n  delay: { min: number; max: number };\r\n  spread: { angle: number; radius: number };\r\n  burst: boolean;\r\n}\r\n\r\n/**\r\n * 預設效果配置\r\n */\r\nexport const PARTICLE_PRESETS: Record<ParticlePresetType, ParticlePresetConfig> = {\r\n  /**\r\n   * ❄️ 雪花效果 - 優雅飄落 (C級基礎效果)\r\n   */\r\n  snowflake: {\r\n    type: 'snowflake',\r\n    colors: ['#ffffff', '#e6f3ff', '#cce7ff', '#b3d9ff', '#f0f8ff'],\r\n    behavior: {\r\n      movement: 'float',\r\n      gravity: 30,\r\n      drag: 0.95,\r\n      turbulence: 0.3,\r\n    },\r\n    physics: {\r\n      velocity: { min: 20, max: 60 },\r\n      acceleration: { x: 0, y: 30 },\r\n      mass: 0.5,\r\n      elasticity: 0.1,\r\n    },\r\n    visual: {\r\n      size: { min: 1, max: 3 },  // C級基礎尺寸\r\n      opacity: { start: 0.6, end: 0.1 },\r\n      scale: { start: 0.8, end: 0.2 },\r\n      rotation: { enabled: true, speed: 0.02 },\r\n      glow: { enabled: false, intensity: 0 },\r\n    },\r\n    animation: {\r\n      lifespan: { min: 800, max: 1200 },  // 縮短生命週期\r\n      fadeIn: 100,\r\n      fadeOut: 400,\r\n      pulsing: { enabled: false, frequency: 0 },\r\n    },\r\n    spawning: {\r\n      count: { min: 30, max: 60 },  // C級: 30-60\r\n      delay: { min: 0, max: 50 },\r\n      spread: { angle: Math.PI * 0.2, radius: 40 },\r\n      burst: false,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * 🔥 火焰效果 - 熾熱燃燒 (S級效果)\r\n   */\r\n  fire: {\r\n    type: 'fire',\r\n    colors: ['#dda0dd', '#e6b8ea', '#d8bfd8', '#9932cc', '#ba55d3'],\r\n    behavior: {\r\n      movement: 'rise',\r\n      gravity: -100,\r\n      drag: 0.92,\r\n      turbulence: 0.8,\r\n    },\r\n    physics: {\r\n      velocity: { min: 80, max: 200 },\r\n      acceleration: { x: 0, y: -150 },\r\n      mass: 0.3,\r\n      elasticity: 0,\r\n    },\r\n    visual: {\r\n      size: { min: 5, max: 12 },  // S級特大型尺寸\r\n      opacity: { start: 0.9, end: 0.0 },\r\n      scale: { start: 0.5, end: 1.6 },\r\n      rotation: { enabled: false, speed: 0 },\r\n      glow: { enabled: true, intensity: 1.2 },\r\n    },\r\n    animation: {\r\n      lifespan: { min: 800, max: 1500 },\r\n      fadeIn: 50,\r\n      fadeOut: 600,\r\n      pulsing: { enabled: true, frequency: 0.1 },\r\n    },\r\n    spawning: {\r\n      count: { min: 140, max: 170 },  // S級: 140-170\r\n      delay: { min: 0, max: 150 },\r\n      spread: { angle: Math.PI * 0.4, radius: 40 },\r\n      burst: true,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * ⚡ 閃電效果 - 電光鏈鎖 (SS級效果)\r\n   */\r\n  lightning: {\r\n    type: 'lightning',\r\n    colors: ['#ffff00', '#ffffff', '#00ffff', '#87ceeb', '#e0ffff'],\r\n    behavior: {\r\n      movement: 'chain',\r\n      gravity: 0,\r\n      drag: 0.99,\r\n      turbulence: 1.5,\r\n    },\r\n    physics: {\r\n      velocity: { min: 300, max: 600 },\r\n      acceleration: { x: 0, y: 0 },\r\n      mass: 0.1,\r\n      elasticity: 0,\r\n    },\r\n    visual: {\r\n      size: { min: 8, max: 16 },  // SS級超大型尺寸\r\n      opacity: { start: 1.0, end: 0.0 },\r\n      scale: { start: 1.0, end: 1.0 },\r\n      rotation: { enabled: false, speed: 0 },\r\n      glow: { enabled: true, intensity: 2.0 },\r\n    },\r\n    animation: {\r\n      lifespan: { min: 100, max: 300 },\r\n      fadeIn: 0,\r\n      fadeOut: 150,\r\n      pulsing: { enabled: true, frequency: 0.5 },\r\n    },\r\n    spawning: {\r\n      count: { min: 180, max: 210 },  // SS級: 180-210\r\n      delay: { min: 0, max: 50 },\r\n      spread: { angle: Math.PI * 2, radius: 0 },\r\n      burst: true,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * 🌀 黑洞效果 - 螺旋吞噬 (SSS級傳說效果)\r\n   */\r\n  blackhole: {\r\n    type: 'blackhole',\r\n    colors: ['#000000', '#4b0082', '#9400d3', '#8b00ff', '#1a1a1a'],\r\n    behavior: {\r\n      movement: 'implode',\r\n      gravity: 800,\r\n      drag: 1.02, // 反向阻力，加速內吸\r\n      turbulence: 0.1,\r\n    },\r\n    physics: {\r\n      velocity: { min: 100, max: 300 },\r\n      acceleration: { x: 0, y: 0 },\r\n      mass: 1.0,\r\n      elasticity: 0,\r\n    },\r\n    visual: {\r\n      size: { min: 12, max: 20 },  // SSS級傳說尺寸\r\n      opacity: { start: 0.8, end: 1.0 },\r\n      scale: { start: 1.5, end: 0.1 },\r\n      rotation: { enabled: true, speed: 0.15 },\r\n      glow: { enabled: true, intensity: 2.5 },\r\n    },\r\n    animation: {\r\n      lifespan: { min: 1500, max: 2500 },\r\n      fadeIn: 100,\r\n      fadeOut: 500,\r\n      pulsing: { enabled: false, frequency: 0 },\r\n    },\r\n    spawning: {\r\n      count: { min: 220, max: 300 },  // SSS級: 220-300\r\n      delay: { min: 0, max: 300 },\r\n      spread: { angle: Math.PI * 2, radius: 120 },\r\n      burst: false,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * 💥 爆炸效果 - 劇烈衝擊 (A級效果)\r\n   */\r\n  explosion: {\r\n    type: 'explosion',\r\n    colors: ['#87ceeb', '#add8e6', '#b0e0e6', '#87cefa', '#00bfff'],\r\n    behavior: {\r\n      movement: 'explode',\r\n      gravity: 50,\r\n      drag: 0.88,\r\n      turbulence: 0.6,\r\n    },\r\n    physics: {\r\n      velocity: { min: 150, max: 300 },  // 降低速度\r\n      acceleration: { x: 0, y: 100 },\r\n      mass: 0.8,\r\n      elasticity: 0.3,\r\n    },\r\n    visual: {\r\n      size: { min: 3, max: 8 },  // A級大型尺寸\r\n      opacity: { start: 0.9, end: 0.0 },\r\n      scale: { start: 0.3, end: 1.2 },\r\n      rotation: { enabled: true, speed: 0.1 },\r\n      glow: { enabled: true, intensity: 1.0 },\r\n    },\r\n    animation: {\r\n      lifespan: { min: 500, max: 1000 },  // 縮短生命週期\r\n      fadeIn: 20,\r\n      fadeOut: 300,\r\n      pulsing: { enabled: false, frequency: 0 },\r\n    },\r\n    spawning: {\r\n      count: { min: 110, max: 130 },  // A級: 110-130\r\n      delay: { min: 0, max: 30 },\r\n      spread: { angle: Math.PI * 2, radius: 0 },\r\n      burst: true,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * ✨ 魔法效果 - 神秘光芒 (B級效果)\r\n   */\r\n  magic: {\r\n    type: 'magic',\r\n    colors: ['#90ee90', '#98fb98', '#b4ffb4', '#7fff00', '#adff2f'],\r\n    behavior: {\r\n      movement: 'float',\r\n      gravity: -20,\r\n      drag: 0.98,\r\n      turbulence: 0.4,\r\n    },\r\n    physics: {\r\n      velocity: { min: 30, max: 120 },\r\n      acceleration: { x: 0, y: -50 },\r\n      mass: 0.2,\r\n      elasticity: 0.8,\r\n    },\r\n    visual: {\r\n      size: { min: 2, max: 5 },  // B級中型尺寸\r\n      opacity: { start: 0.7, end: 0.1 },\r\n      scale: { start: 0.6, end: 1.0 },\r\n      rotation: { enabled: true, speed: 0.05 },\r\n      glow: { enabled: true, intensity: 0.6 },\r\n    },\r\n    animation: {\r\n      lifespan: { min: 1000, max: 1500 },  // 縮短生命週期\r\n      fadeIn: 200,\r\n      fadeOut: 400,\r\n      pulsing: { enabled: true, frequency: 0.08 },\r\n    },\r\n    spawning: {\r\n      count: { min: 70, max: 100 },  // B級: 70-100\r\n      delay: { min: 0, max: 100 },\r\n      spread: { angle: Math.PI * 0.4, radius: 50 },\r\n      burst: false,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * 🌪️ 風暴效果 - 狂亂旋渦\r\n   */\r\n  storm: {\r\n    type: 'storm',\r\n    colors: ['#708090', '#778899', '#b0c4de', '#87ceeb', '#4682b4'],\r\n    behavior: {\r\n      movement: 'spiral',\r\n      gravity: 20,\r\n      drag: 0.96,\r\n      turbulence: 1.2,\r\n    },\r\n    physics: {\r\n      velocity: { min: 150, max: 350 },\r\n      acceleration: { x: 0, y: 50 },\r\n      mass: 0.6,\r\n      elasticity: 0.2,\r\n    },\r\n    visual: {\r\n      size: { min: 2, max: 8 },\r\n      opacity: { start: 0.7, end: 0.2 },\r\n      scale: { start: 1.0, end: 0.5 },\r\n      rotation: { enabled: true, speed: 0.12 },\r\n      glow: { enabled: false, intensity: 0 },\r\n    },\r\n    animation: {\r\n      lifespan: { min: 1200, max: 2000 },\r\n      fadeIn: 150,\r\n      fadeOut: 500,\r\n      pulsing: { enabled: false, frequency: 0 },\r\n    },\r\n    spawning: {\r\n      count: { min: 60, max: 120 },\r\n      delay: { min: 0, max: 100 },\r\n      spread: { angle: Math.PI * 2, radius: 100 },\r\n      burst: false,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * 🌟 超新星效果 - 橘色爆發 (SS級效果)\r\n   */\r\n  supernova: {\r\n    type: 'supernova',\r\n    colors: ['#ff8c00', '#ffa500', '#ff7f00', '#ff6347', '#ff4500'],\r\n    behavior: {\r\n      movement: 'explode',\r\n      gravity: -50,\r\n      drag: 0.85,\r\n      turbulence: 1.8,\r\n    },\r\n    physics: {\r\n      velocity: { min: 200, max: 400 },\r\n      acceleration: { x: 0, y: -100 },\r\n      mass: 0.4,\r\n      elasticity: 0.1,\r\n    },\r\n    visual: {\r\n      size: { min: 4, max: 9 },  // 減少至接近A級大小\r\n      opacity: { start: 1.0, end: 0.0 },\r\n      scale: { start: 0.4, end: 1.3 },  // 減少結束縮放\r\n      rotation: { enabled: true, speed: 0.2 },\r\n      glow: { enabled: true, intensity: 2.2 },\r\n    },\r\n    animation: {\r\n      lifespan: { min: 1000, max: 1800 },\r\n      fadeIn: 50,\r\n      fadeOut: 800,\r\n      pulsing: { enabled: true, frequency: 0.15 },\r\n    },\r\n    spawning: {\r\n      count: { min: 120, max: 150 },  // 減少至接近A級數量\r\n      delay: { min: 0, max: 80 },\r\n      spread: { angle: Math.PI * 2, radius: 0 },\r\n      burst: true,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * 🌌 宇宙爆發效果 - 金色光輝 (SSS級傳說效果)\r\n   */\r\n  cosmic_burst: {\r\n    type: 'cosmic_burst',\r\n    colors: ['#ffd700', '#ffef94', '#fff68f', '#ffffe0', '#fffacd'],\r\n    behavior: {\r\n      movement: 'explode',\r\n      gravity: -80,\r\n      drag: 0.88,\r\n      turbulence: 2.5,\r\n    },\r\n    physics: {\r\n      velocity: { min: 300, max: 600 },\r\n      acceleration: { x: 0, y: -200 },\r\n      mass: 0.2,\r\n      elasticity: 0,\r\n    },\r\n    visual: {\r\n      size: { min: 5, max: 10 },  // 減少至略大於A級\r\n      opacity: { start: 1.0, end: 0.0 },\r\n      scale: { start: 0.2, end: 1.4 },  // 大幅減少結束縮放\r\n      rotation: { enabled: true, speed: 0.25 },\r\n      glow: { enabled: true, intensity: 3.0 },\r\n    },\r\n    animation: {\r\n      lifespan: { min: 1500, max: 2800 },\r\n      fadeIn: 100,\r\n      fadeOut: 1000,\r\n      pulsing: { enabled: true, frequency: 0.2 },\r\n    },\r\n    spawning: {\r\n      count: { min: 130, max: 160 },  // 大幅減少至接近A級\r\n      delay: { min: 0, max: 200 },\r\n      spread: { angle: Math.PI * 2, radius: 30 },  // 大幅減少擴散範圍\r\n      burst: true,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * 🌸 青蓮劍歌效果 - 劍氣指向 (B級效果)\r\n   */\r\n  green_lotus: {\r\n    type: 'green_lotus',\r\n    colors: ['#b4ffb4', '#90ee90', '#98fb98', '#adff2f', '#c8ffc8'],\r\n    behavior: {\r\n      movement: 'float',\r\n      gravity: -10,\r\n      drag: 0.96,\r\n      turbulence: 0.2,\r\n    },\r\n    physics: {\r\n      velocity: { min: 40, max: 80 },\r\n      acceleration: { x: 0, y: -30 },\r\n      mass: 0.3,\r\n      elasticity: 0.5,\r\n    },\r\n    visual: {\r\n      size: { min: 2, max: 4 },  // B級中小型尺寸\r\n      opacity: { start: 0.8, end: 0.1 },\r\n      scale: { start: 0.6, end: 1.2 },\r\n      rotation: { enabled: true, speed: 0.03 },\r\n      glow: { enabled: true, intensity: 0.8 },\r\n    },\r\n    animation: {\r\n      lifespan: { min: 1000, max: 1500 },\r\n      fadeIn: 200,\r\n      fadeOut: 500,\r\n      pulsing: { enabled: true, frequency: 0.05 },\r\n    },\r\n    spawning: {\r\n      count: { min: 60, max: 90 },  // B級: 60-90\r\n      delay: { min: 0, max: 80 },\r\n      spread: { angle: Math.PI * 0.3, radius: 40 },\r\n      burst: false,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * ⚔️ 無限劍制效果 - 劍雨落下 (C級效果)\r\n   */\r\n  unlimited_blade_works: {\r\n    type: 'unlimited_blade_works',\r\n    colors: ['#c0c0c0', '#d3d3d3', '#dcdcdc', '#e0e0e0', '#f0f0f0'],\r\n    behavior: {\r\n      movement: 'fall',\r\n      gravity: 800,\r\n      drag: 0.99,\r\n      turbulence: 0.1,\r\n    },\r\n    physics: {\r\n      velocity: { min: 300, max: 500 },\r\n      acceleration: { x: 0, y: 800 },\r\n      mass: 0.8,\r\n      elasticity: 0,\r\n    },\r\n    visual: {\r\n      size: { min: 1, max: 2 },  // C級小型尺寸\r\n      opacity: { start: 0.7, end: 0.2 },\r\n      scale: { start: 0.5, end: 0.7 },\r\n      rotation: { enabled: false, speed: 0 },\r\n      glow: { enabled: true, intensity: 0.4 },\r\n    },\r\n    animation: {\r\n      lifespan: { min: 800, max: 1200 },\r\n      fadeIn: 150,\r\n      fadeOut: 200,\r\n      pulsing: { enabled: false, frequency: 0 },\r\n    },\r\n    spawning: {\r\n      count: { min: 20, max: 40 },  // C級: 20-40\r\n      delay: { min: 0, max: 60 },\r\n      spread: { angle: Math.PI * 0.2, radius: 30 },\r\n      burst: false,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * ⚡ 神劍御雷效果 - 分形閃電 (S級效果)\r\n   */\r\n  divine_thunder: {\r\n    type: 'divine_thunder',\r\n    colors: ['#c8a0ff', '#b480ff', '#dda0dd', '#9932cc', '#ba55d3'],\r\n    behavior: {\r\n      movement: 'chain',\r\n      gravity: 0,\r\n      drag: 0.98,\r\n      turbulence: 2.0,\r\n    },\r\n    physics: {\r\n      velocity: { min: 400, max: 800 },\r\n      acceleration: { x: 0, y: 0 },\r\n      mass: 0.1,\r\n      elasticity: 0,\r\n    },\r\n    visual: {\r\n      size: { min: 6, max: 12 },  // S級大型尺寸\r\n      opacity: { start: 1.0, end: 0.0 },\r\n      scale: { start: 1.0, end: 1.2 },\r\n      rotation: { enabled: false, speed: 0 },\r\n      glow: { enabled: true, intensity: 2.5 },\r\n    },\r\n    animation: {\r\n      lifespan: { min: 1500, max: 2000 },\r\n      fadeIn: 120,\r\n      fadeOut: 250,\r\n      pulsing: { enabled: true, frequency: 0.3 },\r\n    },\r\n    spawning: {\r\n      count: { min: 120, max: 160 },  // S級: 120-160\r\n      delay: { min: 0, max: 100 },\r\n      spread: { angle: Math.PI * 2, radius: 80 },\r\n      burst: true,\r\n    },\r\n  },\r\n\r\n  /**\r\n   * 🔥 九俱焚滅效果 - 流星雨集結 (SS級效果)\r\n   */\r\n  nine_finale: {\r\n    type: 'nine_finale',\r\n    colors: ['#ff8c40', '#ff5028', '#ffb870', '#ff6030', '#ffa060'],\r\n    behavior: {\r\n      movement: 'explode',\r\n      gravity: 0.8,\r\n      drag: 0.95,\r\n      turbulence: 1.5,\r\n    },\r\n    physics: {\r\n      velocity: { min: 600, max: 1000 },\r\n      acceleration: { x: 0, y: 500 },\r\n      mass: 0.3,\r\n      elasticity: 0.1,\r\n    },\r\n    visual: {\r\n      size: { min: 8, max: 16 },  // SS級超大型尺寸\r\n      opacity: { start: 1.0, end: 0.0 },\r\n      scale: { start: 0.8, end: 1.4 },\r\n      rotation: { enabled: true, speed: 2.0 },\r\n      glow: { enabled: true, intensity: 3.0 },\r\n    },\r\n    animation: {\r\n      lifespan: { min: 1600, max: 2200 },\r\n      fadeIn: 100,\r\n      fadeOut: 300,\r\n      pulsing: { enabled: true, frequency: 0.5 },\r\n    },\r\n    spawning: {\r\n      count: { min: 180, max: 210 },  // SS級: 180-210\r\n      delay: { min: 0, max: 120 },\r\n      spread: { angle: Math.PI * 2, radius: 100 },\r\n      burst: true,\r\n    },\r\n  },\r\n};\r\n\r\n/**\r\n * 根據遊戲等級獲取建議的粒子效果\r\n */\r\nexport function getPresetForGrade(grade: string): ParticlePresetType {\r\n  switch (grade) {\r\n    case 'SSS':\r\n      return 'cosmic_burst';\r\n    case 'SS':\r\n      return 'nine_finale';\r\n    case 'S':\r\n      return 'divine_thunder';\r\n    case 'A':\r\n      return 'explosion';\r\n    case 'B':\r\n      return 'green_lotus';\r\n    case 'C':\r\n      return 'unlimited_blade_works';\r\n    default:\r\n      return 'snowflake';\r\n  }\r\n}\r\n\r\n/**\r\n * 根據特殊情況獲取粒子效果\r\n */\r\nexport function getPresetForSpecialMove(type: 'corner' | 'massive' | 'comeback' | 'domination' | 'combo'): ParticlePresetType {\r\n  switch (type) {\r\n    case 'corner':\r\n      return 'explosion';\r\n    case 'massive':\r\n      return 'storm';\r\n    case 'comeback':\r\n      return 'fire';\r\n    case 'domination':\r\n      return 'blackhole';\r\n    case 'combo':\r\n      return 'lightning';\r\n    default:\r\n      return 'magic';\r\n  }\r\n}\r\n\r\n/**\r\n * 混合兩種預設效果\r\n */\r\nexport function blendPresets(preset1: ParticlePresetType, preset2: ParticlePresetType, ratio: number = 0.5): ParticlePresetConfig {\r\n  const config1 = PARTICLE_PRESETS[preset1];\r\n  const config2 = PARTICLE_PRESETS[preset2];\r\n\r\n  return {\r\n    type: preset1,\r\n    colors: [...config1.colors, ...config2.colors],\r\n    behavior: {\r\n      movement: ratio > 0.5 ? config1.behavior.movement : config2.behavior.movement,\r\n      gravity: config1.behavior.gravity * ratio + config2.behavior.gravity * (1 - ratio),\r\n      drag: config1.behavior.drag * ratio + config2.behavior.drag * (1 - ratio),\r\n      turbulence: config1.behavior.turbulence * ratio + config2.behavior.turbulence * (1 - ratio),\r\n    },\r\n    physics: {\r\n      velocity: {\r\n        min: Math.min(config1.physics.velocity.min, config2.physics.velocity.min),\r\n        max: Math.max(config1.physics.velocity.max, config2.physics.velocity.max),\r\n      },\r\n      acceleration: {\r\n        x: config1.physics.acceleration.x * ratio + config2.physics.acceleration.x * (1 - ratio),\r\n        y: config1.physics.acceleration.y * ratio + config2.physics.acceleration.y * (1 - ratio),\r\n      },\r\n      mass: config1.physics.mass * ratio + config2.physics.mass * (1 - ratio),\r\n      elasticity: config1.physics.elasticity * ratio + config2.physics.elasticity * (1 - ratio),\r\n    },\r\n    visual: {\r\n      size: {\r\n        min: Math.min(config1.visual.size.min, config2.visual.size.min),\r\n        max: Math.max(config1.visual.size.max, config2.visual.size.max),\r\n      },\r\n      opacity: {\r\n        start: Math.max(config1.visual.opacity.start, config2.visual.opacity.start),\r\n        end: Math.min(config1.visual.opacity.end, config2.visual.opacity.end),\r\n      },\r\n      scale: {\r\n        start: config1.visual.scale.start * ratio + config2.visual.scale.start * (1 - ratio),\r\n        end: config1.visual.scale.end * ratio + config2.visual.scale.end * (1 - ratio),\r\n      },\r\n      rotation: {\r\n        enabled: config1.visual.rotation.enabled || config2.visual.rotation.enabled,\r\n        speed: config1.visual.rotation.speed * ratio + config2.visual.rotation.speed * (1 - ratio),\r\n      },\r\n      glow: {\r\n        enabled: config1.visual.glow.enabled || config2.visual.glow.enabled,\r\n        intensity: Math.max(config1.visual.glow.intensity, config2.visual.glow.intensity),\r\n      },\r\n    },\r\n    animation: {\r\n      lifespan: {\r\n        min: Math.min(config1.animation.lifespan.min, config2.animation.lifespan.min),\r\n        max: Math.max(config1.animation.lifespan.max, config2.animation.lifespan.max),\r\n      },\r\n      fadeIn: Math.max(config1.animation.fadeIn, config2.animation.fadeIn),\r\n      fadeOut: Math.max(config1.animation.fadeOut, config2.animation.fadeOut),\r\n      pulsing: {\r\n        enabled: config1.animation.pulsing.enabled || config2.animation.pulsing.enabled,\r\n        frequency: config1.animation.pulsing.frequency * ratio + config2.animation.pulsing.frequency * (1 - ratio),\r\n      },\r\n    },\r\n    spawning: {\r\n      count: {\r\n        min: Math.max(config1.spawning.count.min, config2.spawning.count.min),\r\n        max: Math.max(config1.spawning.count.max, config2.spawning.count.max),\r\n      },\r\n      delay: {\r\n        min: Math.min(config1.spawning.delay.min, config2.spawning.delay.min),\r\n        max: Math.max(config1.spawning.delay.max, config2.spawning.delay.max),\r\n      },\r\n      spread: {\r\n        angle: Math.max(config1.spawning.spread.angle, config2.spawning.spread.angle),\r\n        radius: Math.max(config1.spawning.spread.radius, config2.spawning.spread.radius),\r\n      },\r\n      burst: config1.spawning.burst || config2.spawning.burst,\r\n    },\r\n  };\r\n}","/**\n * 青蓮劍歌特效系統\n * B級特殊效果，劍氣具有指向性，朝向被翻轉的棋子方向發射\n */\n\nexport interface Position {\n  x: number;\n  y: number;\n}\n\nexport interface PetalConfig {\n  x: number;\n  y: number;\n  angle: number;\n  scale: number;\n  life: number;\n  velocity: number;\n  rotation: number;\n  acceleration: number;\n}\n\nexport interface SwordBeamConfig {\n  x: number;\n  y: number;\n  angle: number;\n  targetPosition?: Position;\n}\n\n/**\n * 青蓮花瓣粒子\n */\nexport class LotusePetal {\n  public x: number;\n  public y: number;\n  public angle: number;\n  public scale: number;\n  public life: number;\n  public maxLife: number;\n  public velocity: number;\n  public rotation: number;\n  public acceleration: number;\n  public dead = false;\n  private time = 0;\n\n  constructor(config: PetalConfig) {\n    this.x = config.x;\n    this.y = config.y;\n    this.angle = config.angle;\n    this.scale = config.scale;\n    this.life = config.life;\n    this.maxLife = config.life;\n    this.velocity = config.velocity;\n    this.rotation = config.rotation;\n    this.acceleration = config.acceleration;\n  }\n\n  update(deltaTime: number): void {\n    this.time += deltaTime;\n\n    if (this.time > this.life) {\n      this.dead = true;\n      return;\n    }\n\n    // 更新位置\n    this.x += Math.cos(this.angle) * this.velocity * deltaTime;\n    this.y += Math.sin(this.angle) * this.velocity * deltaTime;\n\n    // 更新旋轉\n    this.acceleration += this.rotation * deltaTime;\n  }\n\n  draw(ctx: CanvasRenderingContext2D): void {\n    const alpha = 1 - this.time / this.life;\n\n    ctx.save();\n    ctx.globalAlpha = alpha * 0.9;\n    ctx.translate(this.x, this.y);\n    ctx.rotate(this.acceleration);\n    ctx.scale(this.scale, this.scale);\n\n    // 繪製花瓣形狀\n    this.drawPetal(ctx);\n\n    ctx.restore();\n  }\n\n  private drawPetal(ctx: CanvasRenderingContext2D): void {\n    const gradient = ctx.createLinearGradient(0, 0, 80, 55);\n    gradient.addColorStop(0, 'rgba(180,255,220,0.9)');\n    gradient.addColorStop(1, 'rgba(120,220,180,0.1)');\n\n    ctx.fillStyle = gradient;\n    ctx.beginPath();\n    ctx.moveTo(12, 25);\n    ctx.bezierCurveTo(32, 8, 58, 12, 65, 25);\n    ctx.bezierCurveTo(58, 38, 32, 42, 12, 25);\n    ctx.closePath();\n    ctx.fill();\n  }\n}\n\n/**\n * 劍氣束\n */\nexport class GreenSwordBeam {\n  public x: number;\n  public y: number;\n  public angle: number;\n  public dead = false;\n  private time = 0;\n  private maxTime = 0.5;\n  private speed = 600;\n\n  constructor(config: SwordBeamConfig) {\n    this.x = config.x;\n    this.y = config.y;\n    this.angle = config.angle;\n  }\n\n  update(deltaTime: number): void {\n    this.time += deltaTime;\n\n    if (this.time > this.maxTime) {\n      this.dead = true;\n      return;\n    }\n\n    // 沿著角度方向移動\n    this.x += Math.cos(this.angle) * this.speed * deltaTime;\n    this.y += Math.sin(this.angle) * this.speed * deltaTime;\n  }\n\n  draw(ctx: CanvasRenderingContext2D): void {\n    ctx.save();\n    ctx.translate(this.x, this.y);\n    ctx.rotate(this.angle);\n\n    // 繪製劍氣束\n    this.drawBeam(ctx);\n\n    ctx.restore();\n  }\n\n  private drawBeam(ctx: CanvasRenderingContext2D): void {\n    const gradient = ctx.createLinearGradient(0, 0, 160, 0);\n    gradient.addColorStop(0, 'rgba(200,255,230,0)');\n    gradient.addColorStop(0.3, 'rgba(200,255,230,0.8)');\n    gradient.addColorStop(0.8, 'rgba(200,255,230,0.8)');\n    gradient.addColorStop(1, 'rgba(200,255,230,0)');\n\n    ctx.fillStyle = gradient;\n    ctx.fillRect(-80, -6, 160, 12);\n  }\n}\n\n/**\n * 青蓮劍歌主效果\n */\nexport class GreenLotusEffect {\n  public x: number;\n  public y: number;\n  public dead = false;\n  private time = 0;\n  private phase = 0;\n  private petals: LotusePetal[] = [];\n  private swords: GreenSwordBeam[] = [];\n  private targetPositions: Position[];\n\n  constructor(x: number, y: number, targetPositions: Position[] = []) {\n    this.x = x;\n    this.y = y;\n    this.targetPositions = targetPositions;\n  }\n\n  update(deltaTime: number): void {\n    this.time += deltaTime;\n\n    switch (this.phase) {\n      case 0: // 蓮花綻放階段\n        if (this.time > 0.5) {\n          this.createPetals();\n          this.phase = 1;\n          this.time = 0;\n        }\n        break;\n\n      case 1: // 劍束發射階段\n        if (this.time > 0.4) {\n          this.createSwordBeams();\n          this.phase = 2;\n          this.time = 0;\n        }\n        break;\n\n      case 2: // 效果結束階段\n        if (this.time > 1.5) {\n          this.dead = true;\n        }\n        break;\n    }\n\n    // 更新花瓣\n    this.petals.forEach(petal => petal.update(deltaTime));\n    this.petals = this.petals.filter(petal => !petal.dead);\n\n    // 更新劍束\n    this.swords.forEach(sword => sword.update(deltaTime));\n    this.swords = this.swords.filter(sword => !sword.dead);\n  }\n\n  draw(ctx: CanvasRenderingContext2D): void {\n    // 繪製光暈效果\n    this.drawAura(ctx);\n\n    // 繪製青蓮花瓣 (phase 0 主要顯示)\n    if (this.phase === 0) {\n      this.drawLotusFlower(ctx);\n    }\n\n    // 繪製花瓣粒子\n    this.petals.forEach(petal => petal.draw(ctx));\n\n    // 繪製劍束\n    this.swords.forEach(sword => sword.draw(ctx));\n  }\n\n  private drawAura(ctx: CanvasRenderingContext2D): void {\n    let alpha = 1;\n\n    if (this.phase === 0) {\n      alpha = Math.min(1, this.time / 0.5); // 淡入\n    } else if (this.phase === 2) {\n      alpha = Math.max(0, 1 - this.time / 1.5); // 淡出\n    }\n\n    ctx.save();\n    ctx.globalAlpha = alpha;\n\n    const gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, 130);\n    gradient.addColorStop(0, 'rgba(180,255,220,0.8)');\n    gradient.addColorStop(1, 'rgba(180,255,220,0)');\n\n    ctx.fillStyle = gradient;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, 130, 0, Math.PI * 2);\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  private drawLotusFlower(ctx: CanvasRenderingContext2D): void {\n    const petalCount = 8;\n\n    for (let i = 0; i < petalCount; i++) {\n      const angle = (i * Math.PI * 2) / petalCount + this.time * 1.5;\n\n      ctx.save();\n      ctx.translate(this.x, this.y);\n      ctx.rotate(angle);\n\n      // 直接繪製花瓣形狀\n      const gradient = ctx.createLinearGradient(0, 0, 80, 55);\n      gradient.addColorStop(0, 'rgba(180,255,220,0.9)');\n      gradient.addColorStop(1, 'rgba(120,220,180,0.1)');\n\n      ctx.fillStyle = gradient;\n      ctx.beginPath();\n      ctx.moveTo(12, 25);\n      ctx.bezierCurveTo(32, 8, 58, 12, 65, 25);\n      ctx.bezierCurveTo(58, 38, 32, 42, 12, 25);\n      ctx.closePath();\n      ctx.fill();\n\n      ctx.restore();\n    }\n  }\n\n  private createPetals(): void {\n    for (let i = 0; i < 12; i++) {\n      const angle = (i * Math.PI * 2) / 12;\n\n      this.petals.push(new LotusePetal({\n        x: this.x,\n        y: this.y,\n        angle: angle,\n        scale: 0.8 + Math.random() * 0.5,\n        life: 1 + Math.random() * 0.5,\n        velocity: 40 + Math.random() * 40,\n        rotation: -2 + Math.random() * 4,\n        acceleration: -0.5 + Math.random(),\n      }));\n    }\n  }\n\n  private createSwordBeams(): void {\n    if (this.targetPositions.length > 0) {\n      // 為每個目標位置創建定向劍束\n      this.targetPositions.forEach(target => {\n        const angle = Math.atan2(target.y - this.y, target.x - this.x);\n        const variation = -0.1 + Math.random() * 0.2; // 添加輕微隨機偏移\n\n        this.swords.push(new GreenSwordBeam({\n          x: this.x,\n          y: this.y,\n          angle: angle + variation,\n          targetPosition: target,\n        }));\n      });\n    } else {\n      // 如果沒有目標位置，創建環形劍束\n      for (let i = 0; i < 12; i++) {\n        const angle = (i * Math.PI * 2) / 12 + (-0.1 + Math.random() * 0.2);\n\n        this.swords.push(new GreenSwordBeam({\n          x: this.x,\n          y: this.y,\n          angle: angle,\n        }));\n      }\n    }\n  }\n}","/**\n * 無限劍制特效系統 (簡化版)\n * C級特殊效果，劍雨具有指向性，落向被翻轉的棋子\n */\n\nexport interface Position {\n  x: number;\n  y: number;\n}\n\n\n\n/**\n * 簡化版陀飛輪（C級適用）\n */\nexport class SimplifiedTourbillon {\n  public x: number;\n  public y: number;\n  private time = 0;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  update(deltaTime: number): void {\n    this.time += deltaTime;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, alpha: number): void {\n    const minDimension = Math.min(window.innerWidth, window.innerHeight);\n    const baseRadius = minDimension * 0.14; // 進一步增大齒輪尺寸\n    const rotation = this.time * 0.3; // 較慢的旋轉速度\n\n    ctx.save();\n    ctx.translate(this.x, this.y - window.innerHeight * 0.02);\n    ctx.globalAlpha = alpha * 0.5; // C級較低透明度\n\n    // 外環（簡化版）\n    this.drawSimplifiedRing(ctx, baseRadius, rotation);\n\n    // 中心擺輪（簡化版）\n    this.drawSimplifiedBalance(ctx, baseRadius, this.time);\n\n    ctx.restore();\n  }\n\n  private drawSimplifiedRing(ctx: CanvasRenderingContext2D, radius: number, rotation: number): void {\n    ctx.save();\n    ctx.rotate(-rotation * 0.5);\n\n    // 外層厚重環 - 增加厚度和重量感\n    const outerGradient = ctx.createRadialGradient(0, 0, radius * 0.65, 0, 0, radius);\n    outerGradient.addColorStop(0, 'rgba(240,240,240,0.8)');\n    outerGradient.addColorStop(0.3, 'rgba(200,200,200,0.9)');\n    outerGradient.addColorStop(0.7, 'rgba(160,160,160,0.8)');\n    outerGradient.addColorStop(1, 'rgba(100,100,100,0.6)');\n\n    ctx.fillStyle = outerGradient;\n    ctx.beginPath();\n    ctx.arc(0, 0, radius, 0, Math.PI * 2);\n    ctx.arc(0, 0, radius * 0.65, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n\n    // 中層環 - 增加層次感\n    const midGradient = ctx.createRadialGradient(0, 0, radius * 0.55, 0, 0, radius * 0.75);\n    midGradient.addColorStop(0, 'rgba(220,220,220,0.7)');\n    midGradient.addColorStop(1, 'rgba(140,140,140,0.5)');\n\n    ctx.fillStyle = midGradient;\n    ctx.beginPath();\n    ctx.arc(0, 0, radius * 0.75, 0, Math.PI * 2);\n    ctx.arc(0, 0, radius * 0.55, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n\n    // 外層大齒 - 厚重的齒輪結構\n    ctx.strokeStyle = 'rgba(255,255,255,0.8)';\n    ctx.lineWidth = 4;\n    for (let i = 0; i < 24; i++) {\n      const angle = (i * Math.PI * 2) / 24;\n      ctx.beginPath();\n      ctx.moveTo(Math.cos(angle) * radius * 0.65, Math.sin(angle) * radius * 0.65);\n      ctx.lineTo(Math.cos(angle) * radius * 0.98, Math.sin(angle) * radius * 0.98);\n      ctx.stroke();\n\n      // 齒輪頂端加厚\n      ctx.lineWidth = 6;\n      ctx.strokeStyle = 'rgba(255,255,255,0.9)';\n      ctx.beginPath();\n      ctx.moveTo(Math.cos(angle) * radius * 0.92, Math.sin(angle) * radius * 0.92);\n      ctx.lineTo(Math.cos(angle) * radius * 0.98, Math.sin(angle) * radius * 0.98);\n      ctx.stroke();\n      ctx.lineWidth = 4;\n      ctx.strokeStyle = 'rgba(255,255,255,0.8)';\n    }\n\n    // 中層精密齒輪 - 更細緻的紋理\n    ctx.strokeStyle = 'rgba(220,220,220,0.7)';\n    ctx.lineWidth = 2;\n    for (let i = 0; i < 48; i++) {\n      const angle = (i * Math.PI * 2) / 48;\n      ctx.beginPath();\n      ctx.moveTo(Math.cos(angle) * radius * 0.55, Math.sin(angle) * radius * 0.55);\n      ctx.lineTo(Math.cos(angle) * radius * 0.72, Math.sin(angle) * radius * 0.72);\n      ctx.stroke();\n\n      // 每8個齒輪添加強化線\n      if (i % 8 === 0) {\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = 'rgba(240,240,240,0.8)';\n        ctx.beginPath();\n        ctx.moveTo(Math.cos(angle) * radius * 0.52, Math.sin(angle) * radius * 0.52);\n        ctx.lineTo(Math.cos(angle) * radius * 0.75, Math.sin(angle) * radius * 0.75);\n        ctx.stroke();\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = 'rgba(220,220,220,0.7)';\n      }\n    }\n\n    // 內層複雜機械結構\n    for (let ring = 0; ring < 3; ring++) {\n      const ringRadius = radius * (0.45 - ring * 0.08);\n      const teethCount = 36 - ring * 8;\n\n      ctx.strokeStyle = `rgba(200,200,200,${0.6 - ring * 0.1})`;\n      ctx.lineWidth = 2 - ring * 0.3;\n\n      for (let i = 0; i < teethCount; i++) {\n        const angle = (i * Math.PI * 2) / teethCount;\n        ctx.beginPath();\n        ctx.moveTo(Math.cos(angle) * ringRadius * 0.85, Math.sin(angle) * ringRadius * 0.85);\n        ctx.lineTo(Math.cos(angle) * ringRadius * 1.1, Math.sin(angle) * ringRadius * 1.1);\n        ctx.stroke();\n      }\n    }\n\n    ctx.restore();\n  }\n\n  private drawSimplifiedBalance(ctx: CanvasRenderingContext2D, radius: number, time: number): void {\n    ctx.save();\n    ctx.rotate(Math.sin(time * 4) * 0.2); // 擺輪搖擺\n\n    // 外層擺輪環 - 更精緻的漸層\n    const outerBalanceGradient = ctx.createRadialGradient(0, 0, radius * 0.12, 0, 0, radius * 0.32);\n    outerBalanceGradient.addColorStop(0, 'rgba(255,255,255,0.9)');\n    outerBalanceGradient.addColorStop(0.3, 'rgba(240,240,240,0.8)');\n    outerBalanceGradient.addColorStop(0.7, 'rgba(180,180,180,0.7)');\n    outerBalanceGradient.addColorStop(1, 'rgba(120,120,120,0.5)');\n\n    ctx.fillStyle = outerBalanceGradient;\n    ctx.beginPath();\n    ctx.arc(0, 0, radius * 0.32, 0, Math.PI * 2);\n    ctx.arc(0, 0, radius * 0.12, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n\n    // 內層擺輪環 - 金屬質感\n    const innerBalanceGradient = ctx.createRadialGradient(0, 0, radius * 0.08, 0, 0, radius * 0.18);\n    innerBalanceGradient.addColorStop(0, 'rgba(255,255,255,1.0)');\n    innerBalanceGradient.addColorStop(0.5, 'rgba(200,200,200,0.9)');\n    innerBalanceGradient.addColorStop(1, 'rgba(150,150,150,0.7)');\n\n    ctx.fillStyle = innerBalanceGradient;\n    ctx.beginPath();\n    ctx.arc(0, 0, radius * 0.18, 0, Math.PI * 2);\n    ctx.arc(0, 0, radius * 0.08, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n\n    // 擺輪輻條 - 精細的機械結構\n    ctx.strokeStyle = 'rgba(255,255,255,0.8)';\n    ctx.lineWidth = 2;\n    for (let i = 0; i < 12; i++) {\n      const angle = (i * Math.PI * 2) / 12;\n      ctx.beginPath();\n      ctx.moveTo(Math.cos(angle) * radius * 0.08, Math.sin(angle) * radius * 0.08);\n      ctx.lineTo(Math.cos(angle) * radius * 0.30, Math.sin(angle) * radius * 0.30);\n      ctx.stroke();\n\n      // 主輻條加強\n      if (i % 3 === 0) {\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = 'rgba(255,255,255,0.95)';\n        ctx.beginPath();\n        ctx.moveTo(Math.cos(angle) * radius * 0.08, Math.sin(angle) * radius * 0.08);\n        ctx.lineTo(Math.cos(angle) * radius * 0.32, Math.sin(angle) * radius * 0.32);\n        ctx.stroke();\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = 'rgba(255,255,255,0.8)';\n      }\n    }\n\n    // 擺輪配重塊\n    for (let i = 0; i < 4; i++) {\n      const angle = (i * Math.PI * 2) / 4;\n      const weightX = Math.cos(angle) * radius * 0.28;\n      const weightY = Math.sin(angle) * radius * 0.28;\n\n      ctx.fillStyle = 'rgba(255,255,255,0.9)';\n      ctx.beginPath();\n      ctx.arc(weightX, weightY, radius * 0.03, 0, Math.PI * 2);\n      ctx.fill();\n\n      ctx.strokeStyle = 'rgba(200,200,200,0.8)';\n      ctx.lineWidth = 1;\n      ctx.stroke();\n    }\n\n    // 中心軸 - 更精緻的中心點\n    const centerGradient = ctx.createRadialGradient(0, 0, 0, 0, 0, radius * 0.05);\n    centerGradient.addColorStop(0, 'rgba(255,255,255,1.0)');\n    centerGradient.addColorStop(0.7, 'rgba(220,220,220,0.9)');\n    centerGradient.addColorStop(1, 'rgba(180,180,180,0.7)');\n\n    ctx.fillStyle = centerGradient;\n    ctx.beginPath();\n    ctx.arc(0, 0, radius * 0.05, 0, Math.PI * 2);\n    ctx.fill();\n\n    // 中心點反光\n    ctx.fillStyle = 'rgba(255,255,255,0.8)';\n    ctx.beginPath();\n    ctx.arc(-radius * 0.01, -radius * 0.01, radius * 0.02, 0, Math.PI * 2);\n    ctx.fill();\n\n    ctx.restore();\n  }\n}\n\n/**\n * 無限劍制主效果（C級版本）- 純齒輪特效\n */\nexport class UnlimitedBladeWorksEffect {\n  public x: number;\n  public y: number;\n  public dead = false;\n  private time = 0;\n  private duration = 2.0; // 延長齒輪顯示時間\n  private tourbillon: SimplifiedTourbillon;\n\n  constructor(x: number, y: number, targetPositions: Position[] = []) {\n    this.x = x;\n    this.y = y;\n    this.tourbillon = new SimplifiedTourbillon(x, y);\n  }\n\n  update(deltaTime: number): void {\n    this.time += deltaTime;\n\n    if (this.time > this.duration) {\n      this.dead = true;\n      return;\n    }\n\n    // 更新陀飛輪\n    this.tourbillon.update(deltaTime);\n  }\n\n  draw(ctx: CanvasRenderingContext2D): void {\n    if (this.dead) {return;}\n\n    // 計算淡入淡出\n    let alpha = 1;\n    if (this.time < 0.3) {\n      alpha = this.time / 0.3; // 較慢淡入\n    } else if (this.time > this.duration - 0.4) {\n      alpha = (this.duration - this.time) / 0.4; // 較慢淡出\n    }\n\n    // 只繪製陀飛輪\n    this.tourbillon.draw(ctx, alpha);\n  }\n\n}","/**\n * 神劍御雷真訣特效系統\n * S級特殊效果，紫色雷電劍柱具有指向性，落向被翻轉的棋子\n */\n\nexport interface Position {\n  x: number;\n  y: number;\n}\n\nexport interface LightningPoint {\n  x: number;\n  y: number;\n}\n\nexport interface FractalBolt {\n  points: LightningPoint[];\n  branches: FractalBolt[];\n}\n\nexport interface ElectricSparkConfig {\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  life: number;\n}\n\nexport interface ThunderTarget {\n  start: Position;\n  end: Position;\n  delay: number;\n}\n\n/**\n * 神劍御雷主題顏色配置\n */\nexport const THUNDER_THEME = {\n  core: 'rgba(200,160,255,1.0)',      // 核心紫色\n  bolt: 'rgba(180,140,255,0.95)',     // 閃電主體\n  haze: 'rgba(160,120,255,0.25)',     // 光暈\n  spark: 'rgba(220,200,255,0.9)',     // 電火花\n  ring: 'rgba(210,190,255,0.65)',     // 衝擊環\n  blade: 'rgba(190,160,255,0.9)',     // 劍柱\n};\n\n/**\n * 電火花粒子\n */\nexport class ElectricSpark {\n  public x: number;\n  public y: number;\n  public vx: number;\n  public vy: number;\n  public time = 0;\n  public life: number;\n  public dead = false;\n\n  constructor(config: ElectricSparkConfig) {\n    this.x = config.x;\n    this.y = config.y;\n    this.vx = config.vx;\n    this.vy = config.vy;\n    this.life = config.life;\n  }\n\n  update(deltaTime: number): void {\n    this.time += deltaTime;\n\n    if (this.time > this.life) {\n      this.dead = true;\n      return;\n    }\n\n    // 重力影響\n    this.vy += 900 * deltaTime;\n\n    // 更新位置\n    this.x += this.vx * deltaTime;\n    this.y += this.vy * deltaTime;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, alpha: number): void {\n    if (this.dead) {return;}\n\n    const k = 1 - this.time / this.life;\n\n    ctx.save();\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.globalAlpha = alpha * k;\n    ctx.strokeStyle = THUNDER_THEME.spark;\n    ctx.lineWidth = 2;\n\n    // 繪製十字型電火花\n    ctx.beginPath();\n    ctx.moveTo(this.x - 2, this.y);\n    ctx.lineTo(this.x + 2, this.y);\n    ctx.moveTo(this.x, this.y - 2);\n    ctx.lineTo(this.x, this.y + 2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n}\n\n/**\n * 衝擊波環\n */\nexport class ShockwaveRing {\n  public x: number;\n  public y: number;\n  public time = 0;\n  public duration = 1.0;\n  public dead = false;\n  public maxRadius = 180;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  update(deltaTime: number): void {\n    this.time += deltaTime * 2.2;\n\n    if (this.time >= this.duration * 1.1) {\n      this.dead = true;\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D, alpha: number): void {\n    if (this.dead || this.time <= 0) {return;}\n\n    const progress = Math.min(1, this.time / this.duration);\n    const radius = 20 + progress * this.maxRadius;\n\n    ctx.save();\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.globalAlpha = alpha * (1 - progress);\n    ctx.strokeStyle = THUNDER_THEME.ring;\n    ctx.lineWidth = 3 + 6 * (1 - progress);\n\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, radius, 0, Math.PI * 2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n}\n\n/**\n * 分形閃電生成器\n */\nexport class FractalLightningGenerator {\n  /**\n   * 生成分形閃電路徑\n   */\n  static generateBolt(\n    start: Position,\n    end: Position,\n    depth = 5,\n    displacement = 48,\n    branchProbability = 0.35,\n  ): FractalBolt {\n    const points: LightningPoint[] = [\n      { x: start.x, y: start.y },\n      { x: end.x, y: end.y },\n    ];\n\n    // 中點位移算法\n    for (let d = 0; d < depth; d++) {\n      for (let i = points.length - 1; i > 0; i--) {\n        const a = points[i - 1];\n        const b = points[i];\n\n        if (!a || !b) {continue;}\n\n        const midX = (a.x + b.x) / 2;\n        const midY = (a.y + b.y) / 2;\n\n        // 計算垂直方向\n        const dx = b.x - a.x;\n        const dy = b.y - a.y;\n        const length = Math.hypot(dx, dy) || 1;\n\n        // 垂直向量（旋轉90度）\n        const perpX = -dy / length;\n        const perpY = dx / length;\n\n        // 隨機位移\n        const offset = (Math.random() * 2 - 1) * displacement;\n\n        points.splice(i, 0, {\n          x: midX + perpX * offset,\n          y: midY + perpY * offset,\n        });\n      }\n      displacement *= 0.55; // 遞減位移量\n    }\n\n    // 生成分支\n    const branches: FractalBolt[] = [];\n    for (let i = 2; i < points.length - 2; i++) {\n      if (Math.random() < branchProbability) {\n        const point = points[i];\n        const nextPoint = points[i + 1];\n\n        if (!point || !nextPoint) {continue;}\n\n        const dirX = nextPoint.x - point.x;\n        const dirY = nextPoint.y - point.y;\n        const length = Math.hypot(dirX, dirY) || 1;\n        const scale = 0.35 + Math.random() * 0.25;\n\n        const branchEnd = {\n          x: point.x + (dirX / length) * (40 + Math.random() * 50),\n          y: point.y + (dirY / length) * (40 + Math.random() * 50),\n        };\n\n        branches.push(this.generateBolt(\n          point,\n          branchEnd,\n          3,\n          displacement * 0.6,\n          0.15,\n        ));\n      }\n    }\n\n    return { points, branches };\n  }\n\n  /**\n   * 繪製分形閃電\n   */\n  static drawBolt(ctx: CanvasRenderingContext2D, bolt: FractalBolt, baseWidth = 3): void {\n    ctx.save();\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n\n    // 外暈（淡紫）\n    ctx.strokeStyle = THUNDER_THEME.haze;\n    ctx.lineWidth = baseWidth * 4;\n    this.pathBolt(ctx, bolt);\n    ctx.stroke();\n\n    // 主體（亮紫）\n    ctx.strokeStyle = THUNDER_THEME.bolt;\n    ctx.lineWidth = baseWidth;\n    this.pathBolt(ctx, bolt);\n    ctx.stroke();\n\n    // 中芯高光（白亮線）\n    ctx.strokeStyle = 'rgba(255,255,255,0.9)';\n    ctx.lineWidth = Math.max(1, baseWidth * 0.5);\n    this.pathBolt(ctx, bolt);\n    ctx.stroke();\n\n    // 繪製分支\n    for (const branch of bolt.branches) {\n      this.drawBolt(ctx, branch, baseWidth * 0.7);\n    }\n\n    ctx.restore();\n  }\n\n  /**\n   * 創建閃電路徑\n   */\n  private static pathBolt(ctx: CanvasRenderingContext2D, bolt: FractalBolt): void {\n    const points = bolt.points;\n    if (points.length < 2) {return;}\n\n    ctx.beginPath();\n    const firstPoint = points[0];\n    if (firstPoint) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n    }\n\n    for (let i = 1; i < points.length; i++) {\n      const point = points[i];\n      if (point) {\n        ctx.lineTo(point.x, point.y);\n      }\n    }\n  }\n}\n\n/**\n * 雷電劍柱\n */\nexport class ThunderBlade {\n  public x: number;\n  public y: number;\n  public targetY: number;\n  public currentY: number;\n  public width = 14;\n  public arrived = false;\n  public alpha = 1;\n\n  constructor(x: number, targetY: number) {\n    this.x = x;\n    this.targetY = targetY;\n    this.y = targetY;\n    this.currentY = -160; // 從上方開始\n  }\n\n  update(deltaTime: number): void {\n    // 快速下降到目標位置\n    const speed = 16;\n    this.currentY += (this.targetY - this.currentY) * Math.min(1, deltaTime * speed);\n\n    if (Math.abs(this.currentY - this.targetY) < 6) {\n      this.arrived = true;\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D, alpha: number): void {\n    const effectiveAlpha = alpha * this.alpha;\n    const topY = Math.min(this.currentY, this.targetY - window.innerHeight * 0.35);\n    const bottomY = this.targetY + 10;\n\n    ctx.save();\n    ctx.globalCompositeOperation = 'lighter';\n\n    // 外暈\n    ctx.globalAlpha = effectiveAlpha * 0.6;\n    const gradient1 = ctx.createLinearGradient(this.x, topY, this.x, bottomY);\n    gradient1.addColorStop(0, 'rgba(170,120,255,0)');\n    gradient1.addColorStop(0.1, 'rgba(170,120,255,0.25)');\n    gradient1.addColorStop(0.9, 'rgba(170,120,255,0.25)');\n    gradient1.addColorStop(1, 'rgba(170,120,255,0)');\n    ctx.fillStyle = gradient1;\n    ctx.fillRect(this.x - 28, topY, 56, bottomY - topY);\n\n    // 劍身\n    ctx.globalAlpha = effectiveAlpha;\n    ctx.fillStyle = THUNDER_THEME.blade;\n    ctx.fillRect(this.x - this.width / 2, topY, this.width, bottomY - topY);\n\n    // 中芯白光\n    ctx.globalAlpha = effectiveAlpha;\n    ctx.fillStyle = 'rgba(255,255,255,0.95)';\n    ctx.fillRect(this.x - 1, topY + 6, 2, (bottomY - topY) - 12);\n\n    // 劍尖圓光\n    if (this.arrived) {\n      ctx.globalAlpha = effectiveAlpha;\n      const radialGradient = ctx.createRadialGradient(\n        this.x, bottomY - 6, 0,\n        this.x, bottomY - 6, 22,\n      );\n      radialGradient.addColorStop(0, 'rgba(255,255,255,1)');\n      radialGradient.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.fillStyle = radialGradient;\n      ctx.beginPath();\n      ctx.arc(this.x, bottomY - 6, 22, 0, Math.PI * 2);\n      ctx.fill();\n    }\n\n    ctx.restore();\n  }\n}\n\n/**\n * 神劍御雷主效果\n */\nexport class DivineSwordThunderEffect {\n  public x: number;\n  public y: number;\n  public dead = false;\n  private time = 0;\n  private duration = 2.0; // S級持續時間\n  private targetPositions: Position[];\n  private thunderBlades: ThunderBlade[] = [];\n  private lightningBolts: FractalBolt[] = [];\n  private sparks: ElectricSpark[] = [];\n  private shockwaves: ShockwaveRing[] = [];\n  private screenShake = 0;\n  private thunderStarted = false;\n\n  constructor(x: number, y: number, targetPositions: Position[] = []) {\n    this.x = x;\n    this.y = y;\n    this.targetPositions = targetPositions;\n    this.initializeBlades();\n  }\n\n  private initializeBlades(): void {\n    if (this.targetPositions.length > 0) {\n      // 為每個翻轉位置創建劍柱\n      this.targetPositions.forEach(target => {\n        this.thunderBlades.push(new ThunderBlade(target.x, target.y));\n      });\n    } else {\n      // 沒有目標時在中心創建一把劍\n      this.thunderBlades.push(new ThunderBlade(this.x, this.y));\n    }\n  }\n\n  update(deltaTime: number): void {\n    this.time += deltaTime;\n\n    if (this.time > this.duration) {\n      this.dead = true;\n      return;\n    }\n\n    // 更新劍柱\n    let anyBladeArrived = false;\n    this.thunderBlades.forEach(blade => {\n      blade.update(deltaTime);\n      if (blade.arrived) {\n        anyBladeArrived = true;\n      }\n    });\n\n    // 劍柱到達後開始雷電效果\n    if (anyBladeArrived && !this.thunderStarted) {\n      this.startThunderEffect();\n      this.thunderStarted = true;\n    }\n\n    // 持續生成閃電（如果已開始）\n    if (this.thunderStarted) {\n      this.generateLightning();\n    }\n\n    // 更新震動衰減\n    if (this.screenShake > 0) {\n      this.screenShake = Math.max(0, this.screenShake - deltaTime * 24);\n    }\n\n    // 更新火花\n    this.sparks.forEach(spark => spark.update(deltaTime));\n    this.sparks = this.sparks.filter(spark => !spark.dead);\n\n    // 更新衝擊波\n    this.shockwaves.forEach(wave => wave.update(deltaTime));\n    this.shockwaves = this.shockwaves.filter(wave => !wave.dead);\n\n    // 控制閃電數量避免過多\n    if (this.lightningBolts.length > 12) {\n      this.lightningBolts.splice(0, this.lightningBolts.length - 12);\n    }\n  }\n\n  private startThunderEffect(): void {\n    // 強烈震動\n    this.screenShake = 6;\n\n    // 在每個劍柱位置生成火花和衝擊波\n    this.thunderBlades.forEach(blade => {\n      this.spawnSparks(blade.x, blade.y, 20);\n      this.shockwaves.push(new ShockwaveRing(blade.x, blade.y));\n    });\n  }\n\n  private generateLightning(): void {\n    // 每幀生成2-4道閃電\n    const count = 2 + (Math.random() < 0.5 ? 1 : 2);\n\n    for (let i = 0; i < count; i++) {\n      // 隨機選擇一個劍柱作為目標\n      const targetBlade = this.thunderBlades[Math.floor(Math.random() * this.thunderBlades.length)];\n      if (!targetBlade) {continue;}\n\n      // 閃電起點在上方隨機位置\n      const startX = targetBlade.x + (Math.random() - 0.5) * window.innerWidth * 0.5;\n      const startY = -80 + Math.random() * window.innerHeight * 0.1;\n\n      const bolt = FractalLightningGenerator.generateBolt(\n        { x: startX, y: startY },\n        { x: targetBlade.x, y: targetBlade.y },\n        5,\n        32 + Math.random() * 32,\n        0.35,\n      );\n\n      this.lightningBolts.push(bolt);\n    }\n  }\n\n  private spawnSparks(x: number, y: number, count: number): void {\n    for (let i = 0; i < count; i++) {\n      this.sparks.push(new ElectricSpark({\n        x,\n        y,\n        vx: -220 + Math.random() * 440,\n        vy: -180 + Math.random() * 160,\n        life: 0.15 + Math.random() * 0.2,\n      }));\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D): void {\n    if (this.dead) {return;}\n\n    // 計算淡入淡出\n    let alpha = 1;\n    const fadeInTime = 0.12;\n    const fadeOutTime = 0.25;\n\n    if (this.time < fadeInTime) {\n      alpha = this.time / fadeInTime;\n    } else if (this.time > this.duration - fadeOutTime) {\n      alpha = (this.duration - this.time) / fadeOutTime;\n    }\n\n    // 應用震動\n    ctx.save();\n    if (this.screenShake > 0) {\n      const shakeX = (Math.random() - 0.5) * this.screenShake;\n      const shakeY = (Math.random() - 0.5) * this.screenShake;\n      ctx.translate(shakeX, shakeY);\n    }\n\n    // 繪製劍柱\n    this.thunderBlades.forEach(blade => blade.draw(ctx, alpha));\n\n    // 繪製閃電\n    this.lightningBolts.forEach(bolt => {\n      FractalLightningGenerator.drawBolt(ctx, bolt, 2.6);\n    });\n\n    // 繪製衝擊波\n    this.shockwaves.forEach(wave => wave.draw(ctx, alpha));\n\n    // 繪製火花\n    this.sparks.forEach(spark => spark.draw(ctx, alpha));\n\n    ctx.restore();\n  }\n}","/**\n * Nine Finale Destruction Effect (九俱焚滅)\n * SS-tier special effect with meteor swarm convergence\n */\n\nexport interface Position {\n  x: number;\n  y: number;\n}\n\ninterface MeteorTrailPoint {\n  x: number;\n  y: number;\n}\n\ninterface Meteor {\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  rotation: number;\n  gravity: number;\n  life: number;\n  currentLife: number;\n  trail: MeteorTrailPoint[];\n  scale: number;\n  targetX: number;\n  targetY: number;\n  assignedTarget: Position;\n}\n\ninterface ExplosionSpark {\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  life: number;\n  currentLife: number;\n}\n\ninterface ShockwaveRing {\n  x: number;\n  y: number;\n  radius: number;\n  maxRadius: number;\n  life: number;\n  currentLife: number;\n}\n\nexport class NineFinaleEffect {\n  private x: number;\n  private y: number;\n  private targetPositions: Position[];\n  private meteors: Meteor[] = [];\n  private sparks: ExplosionSpark[] = [];\n  private rings: ShockwaveRing[] = [];\n  private targetIndicators: Array<{x: number, y: number, life: number, maxLife: number}> = [];\n  private duration: number = 1.8;\n  private currentTime: number = 0;\n  private isComplete: boolean = false;\n  private screenShake: number = 0;\n  private meteorHead: HTMLCanvasElement;\n\n  constructor(x: number, y: number, targetPositions: Position[] = []) {\n    this.x = x;\n    this.y = y;\n    this.targetPositions = targetPositions.length > 0 ? targetPositions : [{ x, y }];\n    this.meteorHead = this.createMeteorSprite();\n    this.initializeTargetIndicators();\n    this.initializeMeteors();\n  }\n\n  private initializeTargetIndicators(): void {\n    // Create anticipation indicators at target positions\n    for (const target of this.targetPositions) {\n      this.targetIndicators.push({\n        x: target.x,\n        y: target.y,\n        life: 0.6, // Short indicator duration\n        maxLife: 0.6,\n      });\n    }\n  }\n\n  private createMeteorSprite(): HTMLCanvasElement {\n    const canvas = document.createElement('canvas');\n    canvas.width = 96;\n    canvas.height = 96;\n    const ctx = canvas.getContext('2d')!;\n\n    const gradient = ctx.createRadialGradient(48, 48, 0, 48, 48, 42);\n    gradient.addColorStop(0, 'rgba(255,240,210,1)');\n    gradient.addColorStop(0.35, 'rgba(255,180,140,1)');\n    gradient.addColorStop(1, 'rgba(255,80,40,0.55)');\n\n    ctx.fillStyle = gradient;\n    ctx.beginPath();\n    ctx.arc(48, 48, 42, 0, Math.PI * 2);\n    ctx.fill();\n\n    return canvas;\n  }\n\n  private initializeMeteors(): void {\n    // Create 1-2 meteors per target position for precise strikes\n    for (let targetIndex = 0; targetIndex < this.targetPositions.length; targetIndex++) {\n      const target = this.targetPositions[targetIndex];\n      if (!target) {continue;}\n\n      const meteorsPerTarget = Math.random() < 0.3 ? 2 : Math.random() < 0.7 ? 3 : 4; // 30% for 2, 40% for 3, 30% for 4\n\n      for (let m = 0; m < meteorsPerTarget; m++) {\n        // Varied spawn positions for dramatic effect\n        const spawnAngle = Math.random() * Math.PI * 2;\n        const spawnDistance = 400 + Math.random() * 300;\n\n        const sx = target.x + Math.cos(spawnAngle) * spawnDistance;\n        const sy = target.y + Math.sin(spawnAngle) * spawnDistance - 200; // Bias upward\n\n        const dx = target.x - sx;\n        const dy = target.y - sy;\n        const distance = Math.sqrt(dx * dx + dy * dy) || 1;\n\n        // Calculate speed accounting for heavier gravity for more impact\n        const gravity = 250 + Math.random() * 150; // Increased for more weight\n        const speed = 800 + Math.random() * 200;\n\n        // Slight upward bias to account for gravity\n        const gravityCompensation = gravity * 0.3;\n        const adjustedVy = (dy / distance) * speed - gravityCompensation;\n\n        this.meteors.push({\n          x: sx,\n          y: sy,\n          vx: (dx / distance) * speed,\n          vy: adjustedVy,\n          rotation: Math.atan2(dy, dx),\n          gravity,\n          life: 1.8,\n          currentLife: 0,\n          trail: [],\n          scale: 1.2 + Math.random() * 0.6, // Increased scale for larger meteors\n          targetX: target.x,\n          targetY: target.y,\n          assignedTarget: target,\n        });\n      }\n    }\n  }\n\n  private spawnExplosion(x: number, y: number): void {\n    const sparkCount = 40 + Math.random() * 20; // More sparks for bigger impact\n    for (let i = 0; i < sparkCount; i++) {\n      this.sparks.push({\n        x,\n        y,\n        vx: (Math.random() - 0.5) * 2200, // Faster sparks\n        vy: (Math.random() - 0.5) * 1800 - 200,\n        life: 0.18 + Math.random() * 0.17,\n        currentLife: 0,\n      });\n    }\n\n    this.rings.push({\n      x,\n      y,\n      radius: 0,\n      maxRadius: 280, // Larger shockwave\n      life: 0.45,\n      currentLife: 0,\n    });\n\n    this.screenShake = Math.min(15, this.screenShake + 6.5); // More screen shake\n  }\n\n  public update(deltaTime: number): void {\n    this.currentTime += deltaTime;\n\n    if (this.currentTime >= this.duration) {\n      this.isComplete = true;\n      return;\n    }\n\n    this.screenShake = Math.max(0, this.screenShake - deltaTime * 18);\n\n    this.updateMeteors(deltaTime);\n    this.updateSparks(deltaTime);\n    this.updateRings(deltaTime);\n    this.updateTargetIndicators(deltaTime);\n  }\n\n  private updateMeteors(deltaTime: number): void {\n    for (let i = this.meteors.length - 1; i >= 0; i--) {\n      const meteor = this.meteors[i];\n      if (!meteor) {continue;}\n\n      meteor.currentLife += deltaTime;\n\n      // Apply gravity\n      meteor.vy += meteor.gravity * deltaTime;\n\n      // Add slight homing behavior (course correction)\n      const distanceToTarget = Math.sqrt(\n        (meteor.targetX - meteor.x) ** 2 + (meteor.targetY - meteor.y) ** 2,\n      );\n\n      if (distanceToTarget > 20 && meteor.currentLife < meteor.life * 0.8) {\n        // Apply gentle course correction for first 80% of flight\n        const homingStrength = 0.1; // 10% course correction\n        const targetDx = meteor.targetX - meteor.x;\n        const targetDy = meteor.targetY - meteor.y;\n        const targetDistance = Math.sqrt(targetDx * targetDx + targetDy * targetDy) || 1;\n\n        const homingVx = (targetDx / targetDistance) * 600;\n        const homingVy = (targetDy / targetDistance) * 600;\n\n        meteor.vx = meteor.vx * (1 - homingStrength) + homingVx * homingStrength;\n        meteor.vy = meteor.vy * (1 - homingStrength) + homingVy * homingStrength;\n\n        // Update rotation to match new direction\n        meteor.rotation = Math.atan2(meteor.vy, meteor.vx);\n      }\n\n      // Update position\n      meteor.x += meteor.vx * deltaTime;\n      meteor.y += meteor.vy * deltaTime;\n\n      meteor.trail.push({ x: meteor.x, y: meteor.y });\n      if (meteor.trail.length > 10) {\n        meteor.trail.shift();\n      }\n\n      // Check hit with assigned target (tighter detection)\n      const distanceToAssignedTarget = Math.sqrt(\n        (meteor.x - meteor.assignedTarget.x) ** 2 +\n        (meteor.y - meteor.assignedTarget.y) ** 2,\n      );\n\n      if (distanceToAssignedTarget < 20 || meteor.currentLife > meteor.life) {\n        this.spawnExplosion(meteor.x, meteor.y);\n        this.meteors.splice(i, 1);\n      }\n    }\n  }\n\n  private updateSparks(deltaTime: number): void {\n    for (let i = this.sparks.length - 1; i >= 0; i--) {\n      const spark = this.sparks[i];\n      if (!spark) {continue;}\n\n      spark.currentLife += deltaTime;\n\n      if (spark.currentLife > spark.life) {\n        this.sparks.splice(i, 1);\n        continue;\n      }\n\n      spark.vy += 1400 * deltaTime;\n      spark.x += spark.vx * deltaTime;\n      spark.y += spark.vy * deltaTime;\n    }\n  }\n\n  private updateRings(deltaTime: number): void {\n    for (let i = this.rings.length - 1; i >= 0; i--) {\n      const ring = this.rings[i];\n      if (!ring) {continue;}\n\n      ring.currentLife += deltaTime * 2.2;\n\n      if (ring.currentLife >= ring.life) {\n        this.rings.splice(i, 1);\n        continue;\n      }\n\n      ring.radius = 24 + (ring.currentLife / ring.life) * ring.maxRadius;\n    }\n  }\n\n  private updateTargetIndicators(deltaTime: number): void {\n    for (let i = this.targetIndicators.length - 1; i >= 0; i--) {\n      const indicator = this.targetIndicators[i];\n      if (!indicator) {continue;}\n\n      indicator.life -= deltaTime;\n\n      if (indicator.life <= 0) {\n        this.targetIndicators.splice(i, 1);\n      }\n    }\n  }\n\n  public render(ctx: CanvasRenderingContext2D): void {\n    if (this.isComplete) {return;}\n\n    const age = this.currentTime / this.duration;\n    const fadeIn = Math.min(1, age / 0.12);\n    const fadeOut = Math.min(1, (this.duration - this.currentTime) / 0.25);\n    const alpha = Math.min(fadeIn, fadeOut);\n\n    ctx.save();\n\n    if (this.screenShake > 0) {\n      const shakeX = (Math.random() - 0.5) * this.screenShake * 2;\n      const shakeY = (Math.random() - 0.5) * this.screenShake * 2;\n      ctx.translate(shakeX, shakeY);\n    }\n\n    this.renderTargetIndicators(ctx, alpha);\n    this.renderMeteors(ctx, alpha);\n    this.renderRings(ctx, alpha);\n    this.renderSparks(ctx, alpha);\n\n    ctx.restore();\n  }\n\n  private renderMeteors(ctx: CanvasRenderingContext2D, alpha: number): void {\n    ctx.save();\n    ctx.globalCompositeOperation = 'lighter';\n\n    for (const meteor of this.meteors) {\n      this.renderMeteorTrail(ctx, meteor, alpha);\n      this.renderMeteorHead(ctx, meteor, alpha);\n    }\n\n    ctx.restore();\n  }\n\n  private renderMeteorTrail(ctx: CanvasRenderingContext2D, meteor: Meteor, alpha: number): void {\n    if (meteor.trail.length < 2) {return;}\n\n    for (let i = 0; i < meteor.trail.length - 1; i++) {\n      const current = meteor.trail[i];\n      const next = meteor.trail[i + 1];\n      if (!current || !next) {continue;}\n\n      const progress = i / (meteor.trail.length - 1);\n      const width = 35 * (1 - progress); // Thicker trails for more impact\n\n      ctx.globalAlpha = alpha * 0.35 * (1 - progress);\n      ctx.strokeStyle = 'rgba(255,90,50,0.35)';\n      ctx.lineWidth = width;\n      ctx.lineCap = 'round';\n\n      ctx.beginPath();\n      ctx.moveTo(current.x, current.y);\n      ctx.lineTo(next.x, next.y);\n      ctx.stroke();\n    }\n  }\n\n  private renderMeteorHead(ctx: CanvasRenderingContext2D, meteor: Meteor, alpha: number): void {\n    ctx.save();\n    ctx.globalAlpha = alpha;\n    ctx.translate(meteor.x, meteor.y);\n    ctx.rotate(meteor.rotation);\n    ctx.scale(meteor.scale, meteor.scale);\n    ctx.drawImage(this.meteorHead, -48, -48, 96, 96); // Larger meteor sprite rendering\n    ctx.restore();\n  }\n\n  private renderSparks(ctx: CanvasRenderingContext2D, alpha: number): void {\n    ctx.save();\n    ctx.globalCompositeOperation = 'lighter';\n\n    for (const spark of this.sparks) {\n      const life = 1 - (spark.currentLife / spark.life);\n      ctx.globalAlpha = alpha * life;\n      ctx.strokeStyle = 'rgba(255,210,160,0.95)';\n      ctx.lineWidth = 2;\n\n      ctx.beginPath();\n      ctx.moveTo(spark.x - 2, spark.y);\n      ctx.lineTo(spark.x + 2, spark.y);\n      ctx.moveTo(spark.x, spark.y - 2);\n      ctx.lineTo(spark.x, spark.y + 2);\n      ctx.stroke();\n    }\n\n    ctx.restore();\n  }\n\n  private renderRings(ctx: CanvasRenderingContext2D, alpha: number): void {\n    ctx.save();\n    ctx.globalCompositeOperation = 'lighter';\n\n    for (const ring of this.rings) {\n      const life = 1 - (ring.currentLife / ring.life);\n      ctx.globalAlpha = alpha * life;\n      ctx.strokeStyle = 'rgba(255,140,90,0.7)';\n      ctx.lineWidth = 3 + 7 * life;\n\n      ctx.beginPath();\n      ctx.arc(ring.x, ring.y, ring.radius, 0, Math.PI * 2);\n      ctx.stroke();\n    }\n\n    ctx.restore();\n  }\n\n  public getScreenShake(): number {\n    return this.screenShake;\n  }\n\n  private renderTargetIndicators(ctx: CanvasRenderingContext2D, alpha: number): void {\n    ctx.save();\n    ctx.globalCompositeOperation = 'lighter';\n\n    for (const indicator of this.targetIndicators) {\n      const life = indicator.life / indicator.maxLife;\n      const pulse = 0.5 + 0.5 * Math.sin(this.currentTime * 15); // Fast pulse\n\n      ctx.globalAlpha = alpha * life * pulse;\n\n      // Draw crosshair target indicator\n      ctx.strokeStyle = 'rgba(255,100,50,0.8)';\n      ctx.lineWidth = 2;\n\n      const size = 15 + (1 - life) * 10; // Expand as it fades\n\n      ctx.beginPath();\n      ctx.moveTo(indicator.x - size, indicator.y);\n      ctx.lineTo(indicator.x + size, indicator.y);\n      ctx.moveTo(indicator.x, indicator.y - size);\n      ctx.lineTo(indicator.x, indicator.y + size);\n      ctx.stroke();\n\n      // Draw outer ring\n      ctx.beginPath();\n      ctx.arc(indicator.x, indicator.y, size * 0.7, 0, Math.PI * 2);\n      ctx.stroke();\n    }\n\n    ctx.restore();\n  }\n\n  public isFinished(): boolean {\n    return this.isComplete;\n  }\n}","/**\n * Ice Spear Abyss Effect (滅劍羅淵)\n * A-tier special effect with directional ice spears\n */\n\nexport interface Position {\n  x: number;\n  y: number;\n}\n\ninterface IceSpear {\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  rotation: number;\n  life: number;\n  currentLife: number;\n  trail: Array<{x: number, y: number}>;\n  scale: number;\n  targetX: number;\n  targetY: number;\n}\n\ninterface IceShard {\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  rotation: number;\n  rotationSpeed: number;\n  life: number;\n  currentLife: number;\n}\n\ninterface ShockRing {\n  x: number;\n  y: number;\n  radius: number;\n  maxRadius: number;\n  life: number;\n  currentLife: number;\n}\n\nexport class IceSpearEffect {\n  private x: number;\n  private y: number;\n  private targetPositions: Position[];\n  private iceSpears: IceSpear[] = [];\n  private iceShards: IceShard[] = [];\n  private shockRings: ShockRing[] = [];\n  private duration: number = 1.5;\n  private currentTime: number = 0;\n  private isComplete: boolean = false;\n  private screenShake: number = 0;\n  private frostCoreTime: number = 0;\n  private iceSpearSprite: HTMLCanvasElement;\n  public dead: boolean = false;\n\n  constructor(x: number, y: number, targetPositions: Position[] = []) {\n    this.x = x;\n    this.y = y;\n    this.targetPositions = targetPositions.length > 0 ? targetPositions : [{ x, y }];\n    this.iceSpearSprite = this.createIceSpearSprite();\n    this.initializeIceSpears();\n  }\n\n  private createIceSpearSprite(): HTMLCanvasElement {\n    const canvas = document.createElement('canvas');\n    canvas.width = 26;\n    canvas.height = 140;\n    const ctx = canvas.getContext('2d')!;\n\n    // Outer frost glow\n    const glowGradient = ctx.createLinearGradient(0, 0, 0, 140);\n    glowGradient.addColorStop(0, 'rgba(190,230,255,0.00)');\n    glowGradient.addColorStop(0.1, 'rgba(190,230,255,0.20)');\n    glowGradient.addColorStop(0.9, 'rgba(190,230,255,0.20)');\n    glowGradient.addColorStop(1, 'rgba(190,230,255,0.00)');\n    ctx.fillStyle = glowGradient;\n    ctx.fillRect(0, 0, 26, 140);\n\n    // Ice blade main body\n    ctx.fillStyle = 'rgba(190,230,255,0.95)';\n    ctx.beginPath();\n    ctx.moveTo(13, 0);\n    ctx.lineTo(20, 100);\n    ctx.lineTo(13, 140);\n    ctx.lineTo(6, 100);\n    ctx.closePath();\n    ctx.fill();\n\n    // Core highlight\n    ctx.fillStyle = 'rgba(255,255,255,0.95)';\n    ctx.fillRect(12, 12, 2, 112);\n\n    return canvas;\n  }\n\n  private initializeIceSpears(): void {\n    // Create 2-3 ice spears per target for precise strikes\n    for (const target of this.targetPositions) {\n      const spearsPerTarget = Math.random() < 0.4 ? 2 : 3; // 60% chance for 3 spears, 40% for 2\n\n      for (let i = 0; i < spearsPerTarget; i++) {\n        // Spawn positions around the target with some spread\n        const angle = Math.random() * Math.PI * 2;\n        const distance = 350 + Math.random() * 200;\n\n        const sx = target.x + Math.cos(angle) * distance;\n        const sy = target.y + Math.sin(angle) * distance - 150; // Bias upward\n\n        const dx = target.x - sx;\n        const dy = target.y - sy;\n        const totalDistance = Math.sqrt(dx * dx + dy * dy) || 1;\n\n        const speed = 900 + Math.random() * 400; // Fast ice spears\n\n        this.iceSpears.push({\n          x: sx,\n          y: sy,\n          vx: (dx / totalDistance) * speed,\n          vy: (dy / totalDistance) * speed,\n          rotation: Math.atan2(dy, dx) + Math.PI / 2, // Add 90° for sprite orientation\n          life: 0.45 + Math.random() * 0.45,\n          currentLife: 0,\n          trail: [],\n          scale: 0.8 + Math.random() * 0.4,\n          targetX: target.x,\n          targetY: target.y,\n        });\n      }\n    }\n  }\n\n  private spawnIceShards(x: number, y: number, count: number = 22): void {\n    for (let i = 0; i < count; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const speed = 300 + Math.random() * 600;\n\n      this.iceShards.push({\n        x,\n        y,\n        vx: Math.cos(angle) * speed,\n        vy: Math.sin(angle) * speed,\n        rotation: Math.random() * Math.PI * 2,\n        rotationSpeed: (Math.random() - 0.5) * 16,\n        life: 0.18 + Math.random() * 0.2,\n        currentLife: 0,\n      });\n    }\n  }\n\n  private addShockRing(x: number, y: number): void {\n    this.shockRings.push({\n      x,\n      y,\n      radius: 0,\n      maxRadius: 200,\n      life: 0.45,\n      currentLife: 0,\n    });\n  }\n\n  public update(deltaTime: number): void {\n    this.currentTime += deltaTime;\n\n    if (this.currentTime >= this.duration) {\n      this.isComplete = true;\n      this.dead = true;\n      return;\n    }\n\n    this.screenShake = Math.max(0, this.screenShake - deltaTime * 16);\n    this.frostCoreTime += deltaTime * 3;\n\n    // Spawn new ice spears during first 60% of effect\n    const progress = this.currentTime / this.duration;\n    if (progress < 0.6 && Math.random() < 18 * deltaTime) {\n      // Randomly add a few more spears for intensity\n      if (Math.random() < 0.5) {\n        const extraSpears = Math.random() < 0.5 ? 2 : 3;\n        const randomTarget = this.targetPositions[Math.floor(Math.random() * this.targetPositions.length)];\n        if (randomTarget) {\n          for (let i = 0; i < extraSpears; i++) {\n            const angle = Math.random() * Math.PI * 2;\n            const distance = 300 + Math.random() * 250;\n\n            const sx = randomTarget.x + Math.cos(angle) * distance;\n            const sy = randomTarget.y + Math.sin(angle) * distance - 100;\n\n            const dx = randomTarget.x - sx;\n            const dy = randomTarget.y - sy;\n            const totalDistance = Math.sqrt(dx * dx + dy * dy) || 1;\n\n            const speed = 900 + Math.random() * 400;\n\n            this.iceSpears.push({\n              x: sx,\n              y: sy,\n              vx: (dx / totalDistance) * speed,\n              vy: (dy / totalDistance) * speed,\n              rotation: Math.atan2(dy, dx) + Math.PI / 2,\n              life: 0.45 + Math.random() * 0.45,\n              currentLife: 0,\n              trail: [],\n              scale: 0.8 + Math.random() * 0.4,\n              targetX: randomTarget.x,\n              targetY: randomTarget.y,\n            });\n          }\n        }\n      }\n    }\n\n    this.updateIceSpears(deltaTime);\n    this.updateIceShards(deltaTime);\n    this.updateShockRings(deltaTime);\n  }\n\n  private updateIceSpears(deltaTime: number): void {\n    for (let i = this.iceSpears.length - 1; i >= 0; i--) {\n      const spear = this.iceSpears[i];\n      if (!spear) {continue;}\n\n      spear.currentLife += deltaTime;\n\n      spear.x += spear.vx * deltaTime;\n      spear.y += spear.vy * deltaTime;\n\n      // Add to trail\n      spear.trail.push({ x: spear.x, y: spear.y });\n      if (spear.trail.length > 12) {\n        spear.trail.shift();\n      }\n\n      // Check if spear should explode (lifespan or near target)\n      const distanceToTarget = Math.sqrt(\n        (spear.x - spear.targetX) ** 2 + (spear.y - spear.targetY) ** 2,\n      );\n\n      if (spear.currentLife > spear.life || distanceToTarget < 25) {\n        this.spawnIceShards(spear.x, spear.y, 28);\n        this.addShockRing(spear.x, spear.y);\n        this.screenShake = Math.min(8, this.screenShake + 2.5);\n        this.iceSpears.splice(i, 1);\n      }\n    }\n  }\n\n  private updateIceShards(deltaTime: number): void {\n    for (let i = this.iceShards.length - 1; i >= 0; i--) {\n      const shard = this.iceShards[i];\n      if (!shard) {continue;}\n\n      shard.currentLife += deltaTime;\n\n      if (shard.currentLife > shard.life) {\n        this.iceShards.splice(i, 1);\n        continue;\n      }\n\n      shard.vy += 900 * deltaTime; // Gravity\n      shard.x += shard.vx * deltaTime;\n      shard.y += shard.vy * deltaTime;\n      shard.rotation += shard.rotationSpeed * deltaTime;\n    }\n  }\n\n  private updateShockRings(deltaTime: number): void {\n    for (let i = this.shockRings.length - 1; i >= 0; i--) {\n      const ring = this.shockRings[i];\n      if (!ring) {continue;}\n\n      ring.currentLife += deltaTime * 2.2;\n\n      if (ring.currentLife >= ring.life) {\n        this.shockRings.splice(i, 1);\n        continue;\n      }\n\n      ring.radius = 18 + (ring.currentLife / ring.life) * ring.maxRadius;\n    }\n  }\n\n  public draw(ctx: CanvasRenderingContext2D): void {\n    if (this.isComplete) {return;}\n\n    const age = this.currentTime / this.duration;\n    const fadeIn = Math.min(1, age / 0.12);\n    const fadeOut = Math.min(1, (this.duration - this.currentTime) / 0.25);\n    const alpha = Math.min(fadeIn, fadeOut);\n\n    ctx.save();\n\n    // Apply screen shake\n    if (this.screenShake > 0) {\n      const shakeX = (Math.random() - 0.5) * this.screenShake * 2;\n      const shakeY = (Math.random() - 0.5) * this.screenShake * 2;\n      ctx.translate(shakeX, shakeY);\n    }\n\n    this.drawFrostCore(ctx, alpha);\n    this.drawIceSpears(ctx, alpha);\n    this.drawShockRings(ctx, alpha);\n    this.drawIceShards(ctx, alpha);\n\n    ctx.restore();\n  }\n\n  private drawFrostCore(ctx: CanvasRenderingContext2D, alpha: number): void {\n    ctx.save();\n    ctx.globalCompositeOperation = 'lighter';\n\n    const radius = 140 + 40 * Math.sin(this.frostCoreTime * 6);\n    const gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, radius);\n    gradient.addColorStop(0, `rgba(220,240,255,${0.5 * alpha})`);\n    gradient.addColorStop(1, 'rgba(220,240,255,0)');\n\n    ctx.fillStyle = gradient;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, radius, 0, Math.PI * 2);\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  private drawIceSpears(ctx: CanvasRenderingContext2D, alpha: number): void {\n    for (const spear of this.iceSpears) {\n      // Draw frost trail\n      ctx.save();\n      ctx.globalCompositeOperation = 'lighter';\n\n      for (let k = 0; k < spear.trail.length - 1; k++) {\n        const current = spear.trail[k];\n        const next = spear.trail[k + 1];\n        if (!current || !next) {continue;}\n\n        const progress = k / (spear.trail.length - 1);\n        const width = 18 * (1 - progress);\n\n        ctx.globalAlpha = alpha * 0.35 * (1 - progress);\n        ctx.strokeStyle = 'rgba(150,210,255,0.40)';\n        ctx.lineCap = 'round';\n        ctx.lineWidth = width;\n\n        ctx.beginPath();\n        ctx.moveTo(current.x, current.y);\n        ctx.lineTo(next.x, next.y);\n        ctx.stroke();\n      }\n\n      // Draw ice spear sprite\n      ctx.globalAlpha = alpha;\n      ctx.translate(spear.x, spear.y);\n      ctx.rotate(spear.rotation);\n      const scale = spear.scale * (0.8 + Math.min(0.7, spear.currentLife * 1.1));\n      ctx.scale(scale, scale);\n      ctx.drawImage(this.iceSpearSprite, -13, -20);\n\n      ctx.restore();\n    }\n  }\n\n  private drawIceShards(ctx: CanvasRenderingContext2D, alpha: number): void {\n    ctx.save();\n    ctx.globalCompositeOperation = 'lighter';\n\n    for (const shard of this.iceShards) {\n      const life = 1 - (shard.currentLife / shard.life);\n      ctx.globalAlpha = alpha * life;\n\n      ctx.save();\n      ctx.translate(shard.x, shard.y);\n      ctx.rotate(shard.rotation);\n\n      ctx.strokeStyle = 'rgba(210,240,255,0.95)';\n      ctx.lineWidth = 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-3, 0);\n      ctx.lineTo(3, 0);\n      ctx.moveTo(0, -3);\n      ctx.lineTo(0, 3);\n      ctx.stroke();\n\n      ctx.restore();\n    }\n\n    ctx.restore();\n  }\n\n  private drawShockRings(ctx: CanvasRenderingContext2D, alpha: number): void {\n    ctx.save();\n    ctx.globalCompositeOperation = 'lighter';\n\n    for (const ring of this.shockRings) {\n      const life = 1 - (ring.currentLife / ring.life);\n      ctx.globalAlpha = alpha * life;\n      ctx.strokeStyle = 'rgba(180,220,255,0.70)';\n      ctx.lineWidth = 2 + 6 * life;\n\n      ctx.beginPath();\n      ctx.arc(ring.x, ring.y, ring.radius, 0, Math.PI * 2);\n      ctx.stroke();\n    }\n\n    ctx.restore();\n  }\n}","/**\r\n * Particle Effects System for Super Reversi\r\n *\r\n * Creates visual effects based on move quality grades\r\n */\r\n\r\nimport { PARTICLE_PRESETS, getPresetForGrade, type ParticlePresetConfig } from './effects/particle-presets';\r\nimport { GreenLotusEffect, type Position } from './effects/green-lotus-effect';\r\nimport { UnlimitedBladeWorksEffect } from './effects/unlimited-blade-works';\r\nimport { DivineSwordThunderEffect } from './effects/divine-sword-thunder';\r\nimport { NineFinaleEffect } from './effects/nine-finale-effect';\r\nimport { IceSpearEffect } from './effects/ice-spear-effect';\r\n\r\nexport type Grade = 'C' | 'B' | 'A' | 'S' | 'SS' | 'SSS';\r\n\r\nexport interface SpecialEffect {\r\n  corner?: boolean;\r\n  edge?: boolean;\r\n  massive?: boolean;  // 10+ flips\r\n  chain?: boolean;    // Triggered by previous move\r\n  firstMove?: boolean;\r\n  comeback?: boolean; // When losing player makes good move\r\n  domination?: boolean; // When winning player extends lead\r\n}\r\n\r\nexport interface Particle {\r\n  x: number;\r\n  y: number;\r\n  vx: number;\r\n  vy: number;\r\n  life: number;\r\n  maxLife: number;\r\n  size: number;\r\n  color: string;\r\n  alpha: number;\r\n  type: 'circle' | 'star' | 'spark' | 'text';\r\n  text?: string; // 用於文字粒子\r\n  fontSize?: number; // 文字大小\r\n}\r\n\r\nexport interface FlySwordConfig {\r\n  color: string;\r\n  trailColor: string;\r\n  size: number;\r\n  speed: number;\r\n  glowIntensity: number;\r\n}\r\n\r\nexport class FlySword {\r\n  public pos: { x: number; y: number };\r\n  public vel: { x: number; y: number };\r\n  public target: { x: number; y: number } | null;\r\n  public tail: Array<{ x: number; y: number }>;\r\n  public alive: boolean;\r\n  public life: number;\r\n  public maxLife: number;\r\n  private tailLength: number;\r\n  private config: FlySwordConfig;\r\n\r\n  constructor(x: number, y: number, target: { x: number; y: number } | null, config: FlySwordConfig) {\r\n    this.pos = { x, y };\r\n    this.vel = { x: 0, y: -6 };\r\n    this.target = target;\r\n    this.tail = [];\r\n    this.tailLength = 20; // Shorter trail for cleaner effect\r\n    this.alive = true;\r\n    this.life = 2.0;      // Reduced visibility duration\r\n    this.maxLife = 2.0;\r\n    this.config = config;\r\n\r\n    console.log(`🗡️ FlySword created at (${x}, ${y}) targeting (${target?.x}, ${target?.y})`);\r\n  }\r\n\r\n  update(): void {\r\n    if (!this.alive) {return;}\r\n\r\n    // Update life\r\n    this.life -= 0.016; // ~60fps\r\n    if (this.life <= 0) {\r\n      this.alive = false;\r\n      return;\r\n    }\r\n\r\n    // Simple guidance towards target\r\n    if (this.target) {\r\n      const dx = this.target.x - this.pos.x;\r\n      const dy = this.target.y - this.pos.y;\r\n      const distance = Math.hypot(dx, dy);\r\n\r\n      if (distance > 5) {\r\n        // Gradually steer towards target\r\n        this.vel.x += (dx / distance) * 0.4;\r\n        this.vel.y += (dy / distance) * 0.4;\r\n\r\n        // Limit speed\r\n        const speed = Math.hypot(this.vel.x, this.vel.y);\r\n        if (speed > this.config.speed) {\r\n          this.vel.x *= this.config.speed / speed;\r\n          this.vel.y *= this.config.speed / speed;\r\n        }\r\n      } else {\r\n        // Close to target, mark for death\r\n        this.life = Math.min(this.life, 0.3);\r\n      }\r\n    }\r\n\r\n    // Update position\r\n    this.pos.x += this.vel.x;\r\n    this.pos.y += this.vel.y;\r\n\r\n    // Update tail\r\n    this.tail.push({ x: this.pos.x, y: this.pos.y });\r\n    if (this.tail.length > this.tailLength) {\r\n      this.tail.shift();\r\n    }\r\n  }\r\n\r\n  draw(ctx: CanvasRenderingContext2D): void {\r\n    if (!this.alive || this.tail.length < 2) {return;}\r\n\r\n    const alpha = this.life / this.maxLife;\r\n\r\n    // Draw glowing trail\r\n    ctx.save();\r\n    ctx.globalCompositeOperation = 'lighter';\r\n\r\n    for (let i = 1; i < this.tail.length; i++) {\r\n      const prev = this.tail[i - 1];\r\n      const curr = this.tail[i];\r\n      if (!prev || !curr) {continue;}\r\n\r\n      const trailAlpha = (i / this.tail.length) * alpha * 0.6;\r\n      ctx.strokeStyle = this.config.trailColor.replace('1)', `${trailAlpha})`);\r\n      ctx.lineWidth = 2 + i / 3;\r\n      ctx.beginPath();\r\n      ctx.moveTo(prev.x, prev.y);\r\n      ctx.lineTo(curr.x, curr.y);\r\n      ctx.stroke();\r\n    }\r\n\r\n    ctx.restore();\r\n\r\n    // Draw sword body\r\n    const angle = Math.atan2(this.vel.y, this.vel.x);\r\n    ctx.save();\r\n    ctx.translate(this.pos.x, this.pos.y);\r\n    ctx.rotate(angle);\r\n\r\n    // Apply glow effect\r\n    ctx.shadowColor = this.config.color;\r\n    ctx.shadowBlur = this.config.glowIntensity * alpha;\r\n    ctx.globalAlpha = alpha;\r\n\r\n    // Sword body (rectangle)\r\n    ctx.fillStyle = this.config.color;\r\n    ctx.fillRect(-this.config.size, -2, this.config.size, 4);\r\n\r\n    // Sword tip (triangle)\r\n    ctx.fillStyle = this.config.color;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.lineTo(this.config.size * 0.3, -3);\r\n    ctx.lineTo(this.config.size * 0.3, 3);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n\r\nexport class ParticleSystem {\r\n  private canvas: HTMLCanvasElement;\r\n  private ctx: CanvasRenderingContext2D;\r\n  private particles: Particle[] = [];\r\n  private swords: FlySword[] = [];\r\n  private greenLotusEffects: GreenLotusEffect[] = [];\r\n  private ubwEffects: UnlimitedBladeWorksEffect[] = [];\r\n  private divineThunderEffects: DivineSwordThunderEffect[] = [];\r\n  private nineFinaleEffects: NineFinaleEffect[] = [];\r\n  private iceSpearEffects: IceSpearEffect[] = [];\r\n  private animationId: number | null = null;\r\n  private lastTime = 0;\r\n  private enabled = true;\r\n\r\n  constructor() {\r\n    // Create canvas for particles\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.id = 'particle-canvas';\r\n    this.canvas.style.position = 'absolute';\r\n    this.canvas.style.top = '0';\r\n    this.canvas.style.left = '0';\r\n    this.canvas.style.pointerEvents = 'none';\r\n    this.canvas.style.zIndex = '100';\r\n\r\n    const ctx = this.canvas.getContext('2d');\r\n    if (!ctx) {throw new Error('Could not get canvas context');}\r\n    this.ctx = ctx;\r\n  }\r\n\r\n  initialize(container: HTMLElement): void {\r\n    // Set canvas size\r\n    const rect = container.getBoundingClientRect();\r\n    this.canvas.width = rect.width;\r\n    this.canvas.height = rect.height;\r\n\r\n    // Add to container\r\n    container.style.position = 'relative';\r\n    container.appendChild(this.canvas);\r\n\r\n    // Start animation loop only if enabled\r\n    if (this.enabled) {\r\n      this.startAnimation();\r\n    }\r\n  }\r\n\r\n  setEnabled(enabled: boolean): void {\r\n    this.enabled = enabled;\r\n    if (enabled) {\r\n      if (!this.animationId) {\r\n        this.startAnimation();\r\n      }\r\n    } else {\r\n      this.stopAnimation();\r\n      this.clearParticles();\r\n    }\r\n  }\r\n\r\n  private stopAnimation(): void {\r\n    if (this.animationId) {\r\n      cancelAnimationFrame(this.animationId);\r\n      this.animationId = null;\r\n    }\r\n  }\r\n\r\n  private clearParticles(): void {\r\n    this.particles = [];\r\n    this.swords = [];\r\n    this.greenLotusEffects = [];\r\n    this.ubwEffects = [];\r\n    this.divineThunderEffects = [];\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  private startAnimation(): void {\r\n    const animate = (time: number) => {\r\n      const deltaTime = time - this.lastTime;\r\n      this.lastTime = time;\r\n\r\n      this.update(deltaTime / 1000); // Convert to seconds\r\n      this.render();\r\n\r\n      this.animationId = requestAnimationFrame(animate);\r\n    };\r\n\r\n    this.animationId = requestAnimationFrame(animate);\r\n  }\r\n\r\n  private update(deltaTime: number): void {\r\n    // Update all particles\r\n    for (let i = this.particles.length - 1; i >= 0; i--) {\r\n      const p = this.particles[i];\r\n      if (!p) {continue;}\r\n\r\n      // Update position\r\n      p.x += p.vx * deltaTime;\r\n      p.y += p.vy * deltaTime;\r\n\r\n      // Update life\r\n      p.life -= deltaTime;\r\n\r\n      // Update alpha based on life\r\n      p.alpha = Math.max(0, p.life / p.maxLife);\r\n\r\n      // Apply gravity for some effects\r\n      if (p.type === 'spark') {\r\n        p.vy += 200 * deltaTime; // Gravity\r\n      }\r\n\r\n      // Remove dead particles\r\n      if (p.life <= 0) {\r\n        this.particles.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    // Update all swords\r\n    for (let i = this.swords.length - 1; i >= 0; i--) {\r\n      const sword = this.swords[i];\r\n      if (!sword) {continue;}\r\n\r\n      sword.update();\r\n\r\n      // Remove dead swords\r\n      if (!sword.alive) {\r\n        this.swords.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    // Update all green lotus effects\r\n    for (let i = this.greenLotusEffects.length - 1; i >= 0; i--) {\r\n      const effect = this.greenLotusEffects[i];\r\n      if (!effect) {continue;}\r\n\r\n      effect.update(deltaTime);\r\n\r\n      // Remove dead effects\r\n      if (effect.dead) {\r\n        this.greenLotusEffects.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    // Update all UBW effects\r\n    for (let i = this.ubwEffects.length - 1; i >= 0; i--) {\r\n      const effect = this.ubwEffects[i];\r\n      if (!effect) {continue;}\r\n\r\n      effect.update(deltaTime);\r\n\r\n      // Remove dead effects\r\n      if (effect.dead) {\r\n        this.ubwEffects.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    // Update all Divine Thunder effects\r\n    for (let i = this.divineThunderEffects.length - 1; i >= 0; i--) {\r\n      const effect = this.divineThunderEffects[i];\r\n      if (!effect) {continue;}\r\n\r\n      effect.update(deltaTime);\r\n\r\n      // Remove dead effects\r\n      if (effect.dead) {\r\n        this.divineThunderEffects.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    // Update all Nine Finale effects\r\n    for (let i = this.nineFinaleEffects.length - 1; i >= 0; i--) {\r\n      const effect = this.nineFinaleEffects[i];\r\n      if (!effect) {continue;}\r\n\r\n      effect.update(deltaTime);\r\n\r\n      // Remove finished effects\r\n      if (effect.isFinished()) {\r\n        this.nineFinaleEffects.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    // Update all Ice Spear effects\r\n    for (let i = this.iceSpearEffects.length - 1; i >= 0; i--) {\r\n      const effect = this.iceSpearEffects[i];\r\n      if (!effect) {continue;}\r\n\r\n      effect.update(deltaTime);\r\n\r\n      // Remove dead effects\r\n      if (effect.dead) {\r\n        this.iceSpearEffects.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  private render(): void {\r\n    // Clear canvas\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    // Draw all particles\r\n    for (const p of this.particles) {\r\n      this.ctx.save();\r\n      this.ctx.globalAlpha = p.alpha;\r\n\r\n      if (p.type === 'circle') {\r\n        this.drawCircle(p);\r\n      } else if (p.type === 'star') {\r\n        this.drawStar(p);\r\n      } else if (p.type === 'spark') {\r\n        this.drawSpark(p);\r\n      } else if (p.type === 'text') {\r\n        this.drawText(p);\r\n      }\r\n\r\n      this.ctx.restore();\r\n    }\r\n\r\n    // Draw all swords\r\n    for (const sword of this.swords) {\r\n      sword.draw(this.ctx);\r\n    }\r\n\r\n    // Draw all green lotus effects\r\n    for (const effect of this.greenLotusEffects) {\r\n      effect.draw(this.ctx);\r\n    }\r\n\r\n    // Draw all UBW effects\r\n    for (const effect of this.ubwEffects) {\r\n      effect.draw(this.ctx);\r\n    }\r\n\r\n    // Draw all Divine Thunder effects\r\n    for (const effect of this.divineThunderEffects) {\r\n      effect.draw(this.ctx);\r\n    }\r\n\r\n    // Draw all Nine Finale effects\r\n    for (const effect of this.nineFinaleEffects) {\r\n      effect.render(this.ctx);\r\n    }\r\n\r\n    // Draw all Ice Spear effects\r\n    for (const effect of this.iceSpearEffects) {\r\n      effect.draw(this.ctx);\r\n    }\r\n  }\r\n\r\n  private drawCircle(p: Particle): void {\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\r\n    this.ctx.fillStyle = p.color;\r\n    this.ctx.fill();\r\n\r\n    // Add glow effect\r\n    this.ctx.shadowBlur = 10;\r\n    this.ctx.shadowColor = p.color;\r\n    this.ctx.fill();\r\n  }\r\n\r\n  private drawStar(p: Particle): void {\r\n    const spikes = 5;\r\n    const outerRadius = p.size;\r\n    const innerRadius = p.size * 0.5;\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.translate(p.x, p.y);\r\n\r\n    for (let i = 0; i < spikes * 2; i++) {\r\n      const radius = i % 2 === 0 ? outerRadius : innerRadius;\r\n      const angle = (i * Math.PI) / spikes;\r\n      const x = Math.cos(angle) * radius;\r\n      const y = Math.sin(angle) * radius;\r\n\r\n      if (i === 0) {\r\n        this.ctx.moveTo(x, y);\r\n      } else {\r\n        this.ctx.lineTo(x, y);\r\n      }\r\n    }\r\n\r\n    this.ctx.closePath();\r\n    this.ctx.fillStyle = p.color;\r\n    this.ctx.fill();\r\n\r\n    this.ctx.translate(-p.x, -p.y);\r\n  }\r\n\r\n  private drawSpark(p: Particle): void {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(p.x, p.y);\r\n    this.ctx.lineTo(p.x - p.vx * 0.1, p.y - p.vy * 0.1);\r\n    this.ctx.strokeStyle = p.color;\r\n    this.ctx.lineWidth = p.size;\r\n    this.ctx.lineCap = 'round';\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  private drawText(p: Particle): void {\r\n    if (!p.text || !p.fontSize) {return;}\r\n\r\n    // 設定文字樣式\r\n    this.ctx.font = `bold ${p.fontSize}px Arial, sans-serif`;\r\n    this.ctx.textAlign = 'center';\r\n    this.ctx.textBaseline = 'middle';\r\n    this.ctx.fillStyle = p.color;\r\n\r\n    // 新增發光效果\r\n    this.ctx.shadowBlur = 15;\r\n    this.ctx.shadowColor = p.color;\r\n\r\n    // 新增描邊效果讓文字更突出\r\n    this.ctx.strokeStyle = 'rgba(0, 0, 0, 0.8)';\r\n    this.ctx.lineWidth = 3;\r\n    this.ctx.strokeText(p.text, p.x, p.y);\r\n\r\n    // 填充文字\r\n    this.ctx.fillText(p.text, p.x, p.y);\r\n  }\r\n\r\n  // Enhanced move grade calculation with special effects\r\n  calculateGrade(flippedCount: number, position: number, specialEffects?: SpecialEffect): Grade {\r\n    // Corner positions are special\r\n    const isCorner = position === 0 || position === 7 || position === 56 || position === 63;\r\n\r\n    // Edge positions (not corners)\r\n    const row = Math.floor(position / 8);\r\n    const col = position % 8;\r\n    const isEdge = row === 0 || row === 7 || col === 0 || col === 7;\r\n\r\n    let score = flippedCount * 10;\r\n\r\n    // Bonus for strategic positions\r\n    if (isCorner) {score += 60;}\r\n    else if (isEdge) {score += 20;}\r\n\r\n    // Special bonuses\r\n    if (specialEffects?.massive) {score += 40;}      // 10+ flips\r\n    if (specialEffects?.chain) {score += 30;}       // Chain reaction\r\n    if (specialEffects?.comeback) {score += 25;}    // Comeback move\r\n    if (specialEffects?.domination) {score += 20;}  // Domination move\r\n    if (specialEffects?.firstMove) {score -= 10;}   // First moves are usually basic\r\n\r\n    // Adjusted grading system for balanced effects\r\n    if (score >= 100 || flippedCount >= 15) {return 'SSS';}  // LEGENDARY (rare)\r\n    if (score >= 70 || flippedCount >= 10) {return 'SS';}   // MYTHICAL\r\n    if (score >= 50 || flippedCount >= 7) {return 'S';}     // EPIC\r\n    if (score >= 30 || flippedCount >= 5) {return 'A';}     // GREAT\r\n    if (score >= 15 || flippedCount >= 3) {return 'B';}     // GOOD\r\n    return 'C';                                            // BASIC\r\n  }\r\n\r\n  // Enhanced trigger system with more variations - now supports directional particles\r\n  triggerMoveEffect(x: number, y: number, grade: Grade, flippedCount: number, specialEffects?: SpecialEffect, flippedPositions?: Array<{x: number, y: number}>): void {\r\n    if (!this.enabled) {return;}\r\n\r\n    // 首先創建飄起的等級文字\r\n    this.createFloatingGradeText(x, y, grade);\r\n\r\n    // 🔥⚔️ SWORD MODE: SSS uses ONLY sword effects for maximum impact! ⚔️🔥\r\n    if (grade === 'SSS') {\r\n      console.log(`🗡️ SWORD MODE ACTIVATED: ${grade} grade with ${flippedCount} flips!`);\r\n\r\n      // Use sword effects for SSS grade\r\n      console.log('⚔️ Triggering DIVINE GOLDEN SWORDS! ⚔️');\r\n      setTimeout(() => this.createSSSEffect(x, y, flippedCount, specialEffects, flippedPositions), 0);\r\n\r\n      return; // Skip preset particles for sword modes\r\n    }\r\n\r\n    // Use preset system for other grades (C, B, S)\r\n    this.createPresetEffect(x, y, grade, flippedCount, specialEffects, flippedPositions);\r\n\r\n    // Additional effects for S grade only (A now uses swords)\r\n    if (grade === 'S' && flippedCount >= 7) {\r\n      setTimeout(() => this.createSEffect(x, y, flippedCount, specialEffects, flippedPositions), 100);\r\n    }\r\n  }\r\n\r\n  // 使用預設配置創建特效 - 支持方向性粒子\r\n  private createPresetEffect(x: number, y: number, grade: Grade, flippedCount: number, specialEffects?: SpecialEffect, flippedPositions?: Array<{x: number, y: number}>): void {\r\n    const presetType = getPresetForGrade(grade);\r\n    const preset = PARTICLE_PRESETS[presetType];\r\n\r\n    if (!preset) {\r\n      console.warn(`No preset found for grade ${grade}`);\r\n      return;\r\n    }\r\n\r\n    console.log(`🎨 ${grade} 級移動特效: ${presetType} (${flippedCount} 翻轉)`);\r\n\r\n    // Special handling for B-tier Green Lotus effect\r\n    if (grade === 'B' && presetType === 'green_lotus') {\r\n      this.createGreenLotusEffect(x, y, flippedPositions || []);\r\n      return;\r\n    }\r\n\r\n    // Special handling for C-tier UBW effect\r\n    if (grade === 'C' && presetType === 'unlimited_blade_works') {\r\n      this.createUnlimitedBladeWorksEffect(x, y, flippedPositions || []);\r\n      return;\r\n    }\r\n\r\n    // Special handling for S-tier Divine Thunder effect\r\n    if (grade === 'S' && presetType === 'divine_thunder') {\r\n      this.createDivineThunderEffect(x, y, flippedPositions || []);\r\n      return;\r\n    }\r\n\r\n    // Special handling for SS-tier Nine Finale effect\r\n    if (grade === 'SS' && presetType === 'nine_finale') {\r\n      this.createNineFinaleEffect(x, y, flippedPositions || []);\r\n      return;\r\n    }\r\n\r\n    // Special handling for A-tier Ice Spear effect\r\n    if (grade === 'A') {\r\n      this.createIceSpearEffect(x, y, flippedPositions || []);\r\n      return;\r\n    }\r\n\r\n    // 計算翻轉方向向量\r\n    const flipDirections = this.calculateFlipDirections(x, y, flippedPositions);\r\n\r\n    // 根據翻轉數量調整粒子數量\r\n    const intensityMultiplier = Math.min(1 + (flippedCount - 1) * 0.1, 2.0);\r\n    const particleCount = Math.floor(\r\n      (preset.spawning.count.min + Math.random() * (preset.spawning.count.max - preset.spawning.count.min)) * intensityMultiplier,\r\n    );\r\n\r\n    // 創建預設效果的粒子\r\n    for (let i = 0; i < particleCount; i++) {\r\n      setTimeout(() => {\r\n        this.createPresetParticle(x, y, preset, i, particleCount, flipDirections);\r\n      }, Math.random() * (preset.spawning.delay.max - preset.spawning.delay.min) + preset.spawning.delay.min);\r\n    }\r\n\r\n    // 特殊效果增強\r\n    if (specialEffects?.corner && grade !== 'C') {\r\n      this.addCornerEnhancement(x, y, preset, flipDirections);\r\n    }\r\n    if (specialEffects?.massive && flippedCount >= 8) {\r\n      this.addMassiveEnhancement(x, y, preset, flipDirections);\r\n    }\r\n  }\r\n\r\n  // 計算翻轉方向向量\r\n  private calculateFlipDirections(sourceX: number, sourceY: number, flippedPositions?: Array<{x: number, y: number}>): Array<{angle: number, distance: number}> {\r\n    if (!flippedPositions || flippedPositions.length === 0) {\r\n      // 如果沒有翻轉位置，返回8個均勻分布的方向\r\n      return Array.from({length: 8}, (_, i) => ({\r\n        angle: (i / 8) * Math.PI * 2,\r\n        distance: 100,\r\n      }));\r\n    }\r\n\r\n    // 計算從源點到每個翻轉位置的方向和距離\r\n    return flippedPositions.map(pos => {\r\n      const dx = pos.x - sourceX;\r\n      const dy = pos.y - sourceY;\r\n      const distance = Math.sqrt(dx * dx + dy * dy);\r\n      const angle = Math.atan2(dy, dx);\r\n\r\n      return {\r\n        angle,\r\n        distance: Math.max(distance, 50), // 最小距離50px\r\n      };\r\n    });\r\n  }\r\n\r\n  // 創建飛劍 - 用於 SS 和 SSS 級別特效\r\n  private createSwords(sourceX: number, sourceY: number, targets: Array<{x: number, y: number}>, config: FlySwordConfig, count: number, delay: number = 0): void {\r\n    // Limit maximum swords for performance - dramatically increased for sword prominence\r\n    const maxSwords = 60; // Dramatically increased from 25\r\n    if (this.swords.length >= maxSwords) {\r\n      console.warn(`⚠️ Sword limit reached (${maxSwords}), skipping creation`);\r\n      return;\r\n    }\r\n\r\n    const actualCount = Math.min(count, maxSwords - this.swords.length);\r\n    console.log(`⚔️ createSwords: Creating ${actualCount} swords from (${sourceX}, ${sourceY}) with ${delay}ms delay`);\r\n\r\n    for (let i = 0; i < actualCount; i++) {\r\n      setTimeout(() => {\r\n        // Choose target (either specific target or random position)\r\n        let target: { x: number; y: number } | null = null;\r\n\r\n        if (targets.length > 0) {\r\n          // Cycle through targets\r\n          target = targets[i % targets.length] || targets[0] || null;\r\n        } else {\r\n          // Random target around the source\r\n          const angle = (i / actualCount) * Math.PI * 2;\r\n          const distance = 200 + Math.random() * 300;\r\n          target = {\r\n            x: sourceX + Math.cos(angle) * distance,\r\n            y: sourceY + Math.sin(angle) * distance,\r\n          };\r\n        }\r\n\r\n        // Add some random offset to source position for sword spawn\r\n        const spawnRadius = 30;\r\n        const spawnAngle = Math.random() * Math.PI * 2;\r\n        const spawnX = sourceX + Math.cos(spawnAngle) * spawnRadius;\r\n        const spawnY = sourceY + Math.sin(spawnAngle) * spawnRadius;\r\n\r\n        const sword = new FlySword(spawnX, spawnY, target, config);\r\n        this.swords.push(sword);\r\n      }, delay + i * 30); // Faster stagger for immediate effect\r\n    }\r\n  }\r\n\r\n  // 創建預設粒子 - 支持方向性發射\r\n  private createPresetParticle(x: number, y: number, preset: ParticlePresetConfig, index: number, total: number, flipDirections?: Array<{angle: number, distance: number}>): void {\r\n    const colors = preset.colors;\r\n    const color = colors[Math.floor(Math.random() * colors.length)] || colors[0] || '#ffffff';\r\n\r\n    // 計算角度和速度 - 支持方向性發射\r\n    let angle: number;\r\n    let speed: number;\r\n\r\n    // 如果有翻轉方向，使用方向性發射\r\n    if (flipDirections && flipDirections.length > 0) {\r\n      // 根據粒子索引選擇翻轉方向\r\n      const directionIndex = Math.floor((index / total) * flipDirections.length);\r\n      const direction = flipDirections[directionIndex] || flipDirections[0];\r\n\r\n      if (direction) {\r\n        // 在選定方向的基礎上添加一些隨機偏移\r\n        const baseAngle = direction.angle;\r\n        const spreadAngle = preset.spawning.spread.angle || (Math.PI / 6); // 30度默認擴散角\r\n        angle = baseAngle + (Math.random() - 0.5) * spreadAngle;\r\n      } else {\r\n        // Fallback if no direction found\r\n        angle = Math.random() * Math.PI * 2;\r\n      }\r\n\r\n      speed = preset.physics.velocity.min + Math.random() * (preset.physics.velocity.max - preset.physics.velocity.min);\r\n    } else {\r\n      // 原有的行為模式\r\n      switch (preset.behavior.movement) {\r\n        case 'explode':\r\n          angle = (index / total) * Math.PI * 2;\r\n          speed = preset.physics.velocity.min + Math.random() * (preset.physics.velocity.max - preset.physics.velocity.min);\r\n          break;\r\n        case 'float':\r\n          angle = Math.random() * Math.PI * 2;\r\n          speed = preset.physics.velocity.min + Math.random() * (preset.physics.velocity.max - preset.physics.velocity.min);\r\n          break;\r\n        case 'rise':\r\n          angle = Math.PI * 1.5 + (Math.random() - 0.5) * preset.spawning.spread.angle;\r\n          speed = preset.physics.velocity.min + Math.random() * (preset.physics.velocity.max - preset.physics.velocity.min);\r\n          break;\r\n        case 'chain':\r\n          angle = Math.random() * Math.PI * 2;\r\n          speed = preset.physics.velocity.max;\r\n          break;\r\n        case 'implode':\r\n          angle = Math.random() * Math.PI * 2;\r\n          speed = preset.physics.velocity.min + Math.random() * (preset.physics.velocity.max - preset.physics.velocity.min);\r\n          break;\r\n        default:\r\n          angle = Math.random() * Math.PI * 2;\r\n          speed = 100;\r\n      }\r\n    }\r\n\r\n    // 計算位置偏移\r\n    const spreadRadius = preset.spawning.spread.radius;\r\n    const spreadAngle = Math.random() * preset.spawning.spread.angle - preset.spawning.spread.angle / 2;\r\n    const startX = x + Math.cos(spreadAngle) * Math.random() * spreadRadius;\r\n    const startY = y + Math.sin(spreadAngle) * Math.random() * spreadRadius;\r\n\r\n    // 創建粒子\r\n    const size = preset.visual.size.min + Math.random() * (preset.visual.size.max - preset.visual.size.min);\r\n    const life = (preset.animation.lifespan.min + Math.random() * (preset.animation.lifespan.max - preset.animation.lifespan.min)) / 1000;\r\n\r\n    this.particles.push({\r\n      x: startX,\r\n      y: startY,\r\n      vx: Math.cos(angle) * speed,\r\n      vy: Math.sin(angle) * speed,\r\n      life: life,\r\n      maxLife: life,\r\n      size: size,\r\n      color: color,\r\n      alpha: preset.visual.opacity.start,\r\n      type: preset.type === 'snowflake' ? 'circle' : preset.type === 'lightning' ? 'spark' : 'circle',\r\n    });\r\n  }\r\n\r\n  // 角落增強效果 - 支持方向性\r\n  private addCornerEnhancement(x: number, y: number, preset: ParticlePresetConfig, flipDirections?: Array<{angle: number, distance: number}>): void {\r\n    // 添加金色光環\r\n    for (let i = 0; i < 12; i++) {\r\n      let angle: number;\r\n\r\n      if (flipDirections && flipDirections.length > 0) {\r\n        // 使用翻轉方向，添加偏移\r\n        const directionIndex = Math.floor((i / 12) * flipDirections.length);\r\n        const direction = flipDirections[directionIndex] || flipDirections[0];\r\n        if (direction) {\r\n          angle = direction.angle + (Math.random() - 0.5) * (Math.PI / 4);\r\n        } else {\r\n          angle = (i / 12) * Math.PI * 2;\r\n        }\r\n      } else {\r\n        angle = (i / 12) * Math.PI * 2;\r\n      }\r\n\r\n      this.particles.push({\r\n        x: x,\r\n        y: y,\r\n        vx: Math.cos(angle) * 80,\r\n        vy: Math.sin(angle) * 80,\r\n        life: 1.0,\r\n        maxLife: 1.0,\r\n        size: 3,\r\n        color: '#ffd700',\r\n        alpha: 0.8,\r\n        type: 'circle',\r\n      });\r\n    }\r\n  }\r\n\r\n  // 大規模增強效果 - 支持方向性\r\n  private addMassiveEnhancement(x: number, y: number, preset: ParticlePresetConfig, flipDirections?: Array<{angle: number, distance: number}>): void {\r\n    // 添加衝擊波\r\n    for (let wave = 0; wave < 3; wave++) {\r\n      setTimeout(() => {\r\n        for (let i = 0; i < 20; i++) {\r\n          let angle: number;\r\n\r\n          if (flipDirections && flipDirections.length > 0) {\r\n            // 使用翻轉方向，添加偏移\r\n            const directionIndex = Math.floor((i / 20) * flipDirections.length);\r\n            const direction = flipDirections[directionIndex] || flipDirections[0];\r\n            if (direction) {\r\n              angle = direction.angle + (Math.random() - 0.5) * (Math.PI / 3);\r\n            } else {\r\n              angle = (i / 20) * Math.PI * 2;\r\n            }\r\n          } else {\r\n            angle = (i / 20) * Math.PI * 2;\r\n          }\r\n\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * (150 + wave * 50),\r\n            vy: Math.sin(angle) * (150 + wave * 50),\r\n            life: 0.8,\r\n            maxLife: 0.8,\r\n            size: 2,\r\n            color: '#ffffff',\r\n            alpha: 0.6 - wave * 0.2,\r\n            type: 'circle',\r\n          });\r\n        }\r\n      }, wave * 100);\r\n    }\r\n  }\r\n\r\n  private createSSSEffect(x: number, y: number, flippedCount: number, specialEffects?: SpecialEffect, flippedPositions?: Array<{x: number, y: number}>): void {\r\n    // 🌟 LEGENDARY SSS-GRADE - GOLDEN MAGNIFICENCE! 🌟\r\n    const goldColors = [\r\n      '#ffd700', '#ffdf00', '#ffed4e', '#fff700', '#ffa500', '#daa520',\r\n      '#b8860b', '#ffeaa7', '#fdcb6e', '#f39c12', '#e67e22', '#d4af37',\r\n    ];\r\n\r\n    console.log('🌟✨🎆 LEGENDARY SSS-GRADE MOVE - REALITY SHATTER! 🎆✨🌟');\r\n\r\n    // ⚔️ DIVINE GOLDEN SWORDS - Enhanced heavenly judgment! ⚔️\r\n    const goldenSwordConfig: FlySwordConfig = {\r\n      color: '#ffed4a',    // Brighter golden yellow for maximum contrast\r\n      trailColor: 'rgba(255, 237, 74, 1)',\r\n      size: 90,            // MASSIVE size for supreme visibility\r\n      speed: 5,            // Slowest for maximum drama\r\n      glowIntensity: 100,   // Maximum possible glow for absolute dominance\r\n    };\r\n\r\n    // Create targets from flipped positions\r\n    const swordTargets = flippedPositions || [];\r\n    const swordCount = Math.min(35, Math.max(25, Math.floor(flippedCount * 2.5))); // 25-35 swords - MASSIVE ARMY!\r\n\r\n    console.log(`⚔️ Creating ${swordCount} DIVINE GOLDEN SWORDS targeting ${swordTargets.length} positions!`);\r\n\r\n    // Create divine golden swords in multiple waves for maximum impact\r\n    this.createSwords(x, y, swordTargets, goldenSwordConfig, Math.floor(swordCount * 0.6), 0);\r\n    setTimeout(() => {\r\n      console.log('⚔️ Second wave of GOLDEN SWORDS incoming!');\r\n      this.createSwords(x, y, swordTargets, goldenSwordConfig, Math.floor(swordCount * 0.4), 0);\r\n    }, 100);\r\n\r\n    // ⚔️ MINIMAL GOLDEN SPARKLES - Just accent the divine swords! ⚔️\r\n    console.log('⚔️ Adding minimal golden sparkles to accent the divine swords');\r\n\r\n    // ⚔️ COMPLETELY OBLITERATED - GOLDEN SWORDS RULE ALL! ⚔️\r\n    console.log('⚔️ ALL GOLDEN SPARKLES BANISHED - ONLY DIVINE SWORDS REMAIN!');\r\n    // No sparkles, no stars - the golden swords are the only light needed!\r\n\r\n    // Special effect variations - minimal, sword-focused\r\n    if (specialEffects?.corner) {\r\n      console.log('⚔️ LEGENDARY CORNER SWORD MASTERY!');\r\n      // Add 3 more swords for corner effect instead of heavy particles\r\n      setTimeout(() => {\r\n        this.createSwords(x, y, swordTargets, goldenSwordConfig, 3, 0);\r\n      }, 500);\r\n    }\r\n    if (specialEffects?.comeback) {\r\n      console.log('⚔️ LEGENDARY COMEBACK SWORD STORM!');\r\n      // Add extra sword wave for comeback effect\r\n      setTimeout(() => {\r\n        this.createSwords(x, y, swordTargets, goldenSwordConfig, 2, 0);\r\n      }, 600);\r\n    }\r\n  }\r\n\r\n  private createSSEffect(x: number, y: number, flippedCount: number, specialEffects?: SpecialEffect, flippedPositions?: Array<{x: number, y: number}>): void {\r\n    // 🌪️ MYTHICAL SS-GRADE - RED STORM! 🌪️\r\n    const redColors = ['#ff0000', '#dc143c', '#b22222', '#cd5c5c', '#ff6347', '#ff4500', '#ff1493', '#8b0000', '#a52a2a', '#c41e3a'];\r\n\r\n    console.log('🌪️💎 MYTHICAL SS-GRADE MOVE! 💎🌪️');\r\n\r\n    // 🔥 FLAME SWORDS - Enhanced for maximum visibility! 🔥\r\n    const flameSwordConfig: FlySwordConfig = {\r\n      color: '#ff1100',    // Brighter red for better contrast\r\n      trailColor: 'rgba(255, 17, 0, 1)',\r\n      size: 70,            // Dramatically increased from 40\r\n      speed: 6,            // Even slower for dramatic effect\r\n      glowIntensity: 90,    // Maximum glow for dominance\r\n    };\r\n\r\n    // Create targets from flipped positions\r\n    const swordTargets = flippedPositions || [];\r\n    const swordCount = Math.min(20, Math.max(15, Math.floor(flippedCount * 1.5))); // 15-20 swords - tripled!\r\n\r\n    console.log(`🔥 Creating ${swordCount} FLAME SWORDS targeting ${swordTargets.length} positions!`);\r\n\r\n    // Create flame swords immediately for responsive effect\r\n    this.createSwords(x, y, swordTargets, flameSwordConfig, swordCount, 0);\r\n\r\n    // 🔥 MINIMAL FIRE SPARKS - Just accent the swords, don't overwhelm them! 🔥\r\n    console.log('🔥 Adding minimal fire sparks to accent the flame swords');\r\n\r\n    // 🔥 COMPLETELY REMOVED - FLAME SWORDS REIGN SUPREME! 🔥\r\n    console.log('🔥 ALL FIRE PARTICLES ELIMINATED - PURE SWORD DOMINATION!');\r\n    // No sparks, no flames - only the mighty flame swords!\r\n\r\n    // Special effects - keep minimal for sword focus\r\n    if (specialEffects?.massive) {\r\n      console.log('🔥 MASSIVE FLAME SWORD STORM!');\r\n      // Add 2 more swords for massive effect instead of heavy particles\r\n      setTimeout(() => {\r\n        this.createSwords(x, y, swordTargets, flameSwordConfig, 2, 0);\r\n      }, 400);\r\n    }\r\n  }\r\n\r\n  private createSEffect(x: number, y: number, flippedCount: number, specialEffects?: SpecialEffect, flippedPositions?: Array<{x: number, y: number}>): void {\r\n    // ULTRA SPECTACULAR S-grade effect - PURPLE MAJESTY!\r\n    const purpleColors = ['#dda0dd', '#e6b8ea', '#d8bfd8', '#9932cc', '#ba55d3', '#9370db', '#8a2be2', '#9966cc', '#c8a2c8'];\r\n\r\n    console.log('🎆 LEGENDARY S-GRADE MOVE! 🎆');\r\n\r\n    // MASSIVE RING BURST - 5 waves with directional preference!\r\n    const flipDirections = this.calculateFlipDirections(x, y, flippedPositions);\r\n\r\n    for (let wave = 0; wave < 5; wave++) {\r\n      setTimeout(() => {\r\n        for (let j = 0; j < 40; j++) {\r\n          let angle: number;\r\n\r\n          if (flipDirections.length > 0 && Math.random() < 0.65) {\r\n            // 65% 機率朝向翻轉方向爆發\r\n            const directionIndex = Math.floor((j / 40) * flipDirections.length);\r\n            const direction = flipDirections[directionIndex] || flipDirections[0];\r\n            if (direction) {\r\n              angle = direction.angle + (Math.random() - 0.5) * (Math.PI / 2.5); // 72度擴散\r\n            } else {\r\n              angle = (j / 40) * Math.PI * 2;\r\n            }\r\n          } else {\r\n            // 35% 機率保持環形爆發\r\n            angle = (j / 40) * Math.PI * 2;\r\n          }\r\n\r\n          const speed = 300 + wave * 80;\r\n          const wobble = Math.sin(j * 0.5) * 20; // Add wobble\r\n\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * speed + wobble,\r\n            vy: Math.sin(angle) * speed + wobble,\r\n            life: 1.5,\r\n            maxLife: 1.5,\r\n            size: Math.random() * 5 + 3,\r\n            color: purpleColors[wave % purpleColors.length] ?? '#9932cc',\r\n            alpha: 1,\r\n            type: 'circle',\r\n          });\r\n        }\r\n      }, wave * 80);\r\n    }\r\n\r\n    // GIANT SPIRAL VORTEX\r\n    for (let i = 0; i < 80; i++) {\r\n      const angle = (i / 8) * Math.PI;\r\n      const radius = i * 4;\r\n\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + Math.cos(angle) * radius * 0.3,\r\n          y: y + Math.sin(angle) * radius * 0.3,\r\n          vx: Math.cos(angle + Math.PI/2) * 150,\r\n          vy: Math.sin(angle + Math.PI/2) * 150,\r\n          life: 2.0,\r\n          maxLife: 2.0,\r\n          size: Math.random() * 4 + 2,\r\n          color: purpleColors[i % purpleColors.length] ?? '#9932cc',\r\n          alpha: 1,\r\n          type: 'circle',\r\n        });\r\n      }, i * 15);\r\n    }\r\n\r\n    // NUCLEAR FOUNTAIN - Always spectacular regardless of flip count\r\n    for (let i = 0; i < 100 + flippedCount * 15; i++) {\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + (Math.random() - 0.5) * 40,\r\n          y: y + Math.random() * 20,\r\n          vx: (Math.random() - 0.5) * 400,\r\n          vy: -Math.random() * 500 - 200,\r\n          life: 2.5,\r\n          maxLife: 2.5,\r\n          size: Math.random() * 4 + 2,\r\n          color: purpleColors[Math.floor(Math.random() * purpleColors.length)] ?? '#8a2be2',\r\n          alpha: 1,\r\n          type: Math.random() > 0.3 ? 'spark' : 'circle',\r\n        });\r\n      }, Math.random() * 300);\r\n    }\r\n\r\n    // SHOCKWAVE EFFECT - Expanding circles\r\n    for (let wave = 0; wave < 3; wave++) {\r\n      setTimeout(() => {\r\n        for (let angle = 0; angle < Math.PI * 2; angle += 0.1) {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * (400 + wave * 100),\r\n            vy: Math.sin(angle) * (400 + wave * 100),\r\n            life: 0.8,\r\n            maxLife: 0.8,\r\n            size: 1,\r\n            color: '#ffffff',\r\n            alpha: 0.8,\r\n            type: 'circle',\r\n          });\r\n        }\r\n      }, wave * 200);\r\n    }\r\n\r\n    // STARBURST - Directional explosion\r\n    for (let i = 0; i < 50; i++) {\r\n      let angle: number;\r\n\r\n      if (flipDirections.length > 0 && Math.random() < 0.7) {\r\n        // 70% 機率朝向翻轉方向爆炸\r\n        const directionIndex = Math.floor((i / 50) * flipDirections.length);\r\n        const direction = flipDirections[directionIndex] || flipDirections[0];\r\n        if (direction) {\r\n          angle = direction.angle + (Math.random() - 0.5) * (Math.PI / 3); // 60度擴散\r\n        } else {\r\n          angle = (i / 50) * Math.PI * 2;\r\n        }\r\n      } else {\r\n        // 30% 機率保持星形爆炸\r\n        angle = (i / 50) * Math.PI * 2;\r\n      }\r\n\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x,\r\n          y: y,\r\n          vx: Math.cos(angle) * 500,\r\n          vy: Math.sin(angle) * 500,\r\n          life: 1.2,\r\n          maxLife: 1.2,\r\n          size: Math.random() * 6 + 2,\r\n          color: '#9932cc',\r\n          alpha: 1,\r\n          type: 'circle',\r\n        });\r\n      }, i * 20);\r\n    }\r\n  }\r\n\r\n  private createAEffectWithSwords(x: number, y: number, flippedCount: number, specialEffects?: SpecialEffect, flippedPositions?: Array<{x: number, y: number}>): void {\r\n    // ❄️ FROST BLUE SWORDS - A-grade elegance! ❄️\r\n    console.log('❄️ A-GRADE FROST SWORDS ACTIVATED! ❄️');\r\n\r\n    // ❄️ FROST BLUE SWORDS - Elegant ice blades! ❄️\r\n    const frostSwordConfig: FlySwordConfig = {\r\n      color: '#00bfff',\r\n      trailColor: 'rgba(0, 191, 255, 1)',\r\n      size: 45,        // Dramatically increased from 25\r\n      speed: 8,        // Slower for better visibility\r\n      glowIntensity: 80, // Dramatically enhanced glow\r\n    };\r\n\r\n    // Create targets from flipped positions\r\n    const swordTargets = flippedPositions || [];\r\n    const swordCount = Math.min(12, Math.max(8, Math.floor(flippedCount * 1.2))); // 8-12 swords - doubled!\r\n\r\n    console.log(`❄️ Creating ${swordCount} FROST BLUE SWORDS targeting ${swordTargets.length} positions!`);\r\n\r\n    // Create frost swords immediately for responsive effect\r\n    this.createSwords(x, y, swordTargets, frostSwordConfig, swordCount, 0);\r\n\r\n    // COMPLETELY REMOVED - Let swords dominate!\r\n    console.log('❄️ ALL PARTICLES REMOVED - PURE SWORD FOCUS!');\r\n    // No particles - only swords shall rule the battlefield!\r\n\r\n    // Special effects\r\n    if (specialEffects?.massive) {\r\n      console.log('❄️ MASSIVE FROST STORM!');\r\n    }\r\n    if (specialEffects?.corner) {\r\n      console.log('❄️ CORNER FROST MASTERY!');\r\n    }\r\n  }\r\n\r\n  private createAEffect(x: number, y: number, flippedCount: number, flippedPositions?: Array<{x: number, y: number}>): void {\r\n    // EPIC A-grade effect - AZURE BRILLIANCE!\r\n    const blueColors = ['#87ceeb', '#87cefa', '#00bfff', '#1e90ff', '#6495ed', '#4682b4', '#add8e6', '#b0e0e6', '#afeeee'];\r\n\r\n    console.log('⭐ AMAZING A-GRADE MOVE! ⭐');\r\n\r\n    // EPIC CROSS SWEEP - Directional waves\r\n    const flipDirections = this.calculateFlipDirections(x, y, flippedPositions);\r\n\r\n    if (flipDirections.length > 0) {\r\n      // 使用翻轉方向進行定向掃射\r\n      for (const flipDir of flipDirections) {\r\n        for (let wave = 0; wave < 3; wave++) {\r\n          for (let i = 0; i < 20; i++) {\r\n            setTimeout(() => {\r\n              // 主方向加上一些擴散\r\n              const spread = (Math.random() - 0.5) * (Math.PI / 4); // 45度擴散\r\n              const finalAngle = flipDir.angle + spread;\r\n              const speed = 250 + wave * 50;\r\n\r\n              this.particles.push({\r\n                x: x,\r\n                y: y,\r\n                vx: Math.cos(finalAngle) * speed,\r\n                vy: Math.sin(finalAngle) * speed,\r\n                life: 1.0 + wave * 0.2,\r\n                maxLife: 1.0 + wave * 0.2,\r\n                size: Math.random() * 4 + 2,\r\n                color: blueColors[wave % blueColors.length] ?? '#87ceeb',\r\n                alpha: 1,\r\n                type: 'circle',\r\n              });\r\n            }, i * 20 + wave * 150);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // 後備方案：使用原有的8方向掃射\r\n      const directions = [\r\n        [1,0], [0,1], [-1,0], [0,-1],   // Cardinals\r\n        [1,1], [-1,1], [1,-1], [-1,-1],  // Diagonals\r\n      ];\r\n\r\n      for (const [dx, dy] of directions as [number, number][]) {\r\n        for (let wave = 0; wave < 3; wave++) {\r\n          for (let i = 0; i < 15; i++) {\r\n            setTimeout(() => {\r\n              this.particles.push({\r\n                x: x,\r\n                y: y,\r\n                vx: dx * (250 + wave * 50),\r\n                vy: dy * (250 + wave * 50),\r\n                life: 1.0 + wave * 0.2,\r\n                maxLife: 1.0 + wave * 0.2,\r\n                size: Math.random() * 4 + 2,\r\n                color: blueColors[wave % blueColors.length] ?? '#87ceeb',\r\n                alpha: 1,\r\n                type: 'circle',\r\n              });\r\n            }, i * 25 + wave * 200);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // GOLDEN RING CASCADES - Directional expanding rings\r\n    for (let ring = 0; ring < 4; ring++) {\r\n      setTimeout(() => {\r\n        for (let i = 0; i < 30; i++) {\r\n          let angle: number;\r\n\r\n          if (flipDirections.length > 0 && Math.random() < 0.4) {\r\n            // 40% 機率朝向翻轉方向\r\n            const directionIndex = Math.floor((i / 30) * flipDirections.length);\r\n            const direction = flipDirections[directionIndex] || flipDirections[0];\r\n            if (direction) {\r\n              angle = direction.angle + (Math.random() - 0.5) * (Math.PI / 3); // 60度擴散\r\n            } else {\r\n              angle = (i / 30) * Math.PI * 2;\r\n            }\r\n          } else {\r\n            // 60% 機率保持環形擴散\r\n            angle = (i / 30) * Math.PI * 2;\r\n          }\r\n\r\n          const speed = 180 + ring * 60;\r\n\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * speed,\r\n            vy: Math.sin(angle) * speed,\r\n            life: 1.2,\r\n            maxLife: 1.2,\r\n            size: Math.random() * 3 + 2,\r\n            color: blueColors[ring % blueColors.length] ?? '#87ceeb',\r\n            alpha: 1,\r\n            type: 'circle',\r\n          });\r\n        }\r\n      }, ring * 150);\r\n    }\r\n\r\n    // GOLDEN FOUNTAIN\r\n    for (let i = 0; i < 60 + flippedCount * 8; i++) {\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + (Math.random() - 0.5) * 30,\r\n          y: y + Math.random() * 15,\r\n          vx: (Math.random() - 0.5) * 300,\r\n          vy: -Math.random() * 350 - 150,\r\n          life: 1.8,\r\n          maxLife: 1.8,\r\n          size: Math.random() * 3 + 1,\r\n          color: blueColors[Math.floor(Math.random() * blueColors.length)] ?? '#4169e1',\r\n          alpha: 1,\r\n          type: 'spark',\r\n        });\r\n      }, Math.random() * 400);\r\n    }\r\n\r\n    // SPARKLE BURST\r\n    for (let i = 0; i < 25; i++) {\r\n      const angle = Math.random() * Math.PI * 2;\r\n      const distance = Math.random() * 100 + 50;\r\n\r\n      this.particles.push({\r\n        x: x + Math.cos(angle) * distance,\r\n        y: y + Math.sin(angle) * distance,\r\n        vx: Math.cos(angle) * 100,\r\n        vy: Math.sin(angle) * 100,\r\n        life: 0.8,\r\n        maxLife: 0.8,\r\n        size: Math.random() * 3 + 1,\r\n        color: '#87ceeb',\r\n        alpha: 1,\r\n        type: 'circle',\r\n      });\r\n    }\r\n  }\r\n\r\n  private createBEffect(x: number, y: number, flippedCount: number): void {\r\n    // SOLID B-grade effect - SPRING GREEN POWER!\r\n    const greenColors = ['#90ee90', '#98fb98', '#00ff7f', '#00fa9a', '#7cfc00', '#7fff00', '#adff2f', '#9aff9a', '#b4ffb4'];\r\n\r\n    console.log('💚 GOOD B-GRADE MOVE! 💚');\r\n\r\n    // DOUBLE RING BURST\r\n    for (let ring = 0; ring < 2; ring++) {\r\n      setTimeout(() => {\r\n        for (let i = 0; i < 25; i++) {\r\n          const angle = (i / 25) * Math.PI * 2;\r\n          const speed = 120 + ring * 40;\r\n\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * speed,\r\n            vy: Math.sin(angle) * speed,\r\n            life: 1.0,\r\n            maxLife: 1.0,\r\n            size: Math.random() * 2 + 2,\r\n            color: greenColors[ring % greenColors.length] ?? '#90ee90',\r\n            alpha: 1,\r\n            type: 'circle',\r\n          });\r\n        }\r\n      }, ring * 100);\r\n    }\r\n\r\n    // GREEN SPARKS\r\n    for (let i = 0; i < 20 + flippedCount * 5; i++) {\r\n      const angle = Math.random() * Math.PI * 2;\r\n      const speed = Math.random() * 150 + 80;\r\n\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x,\r\n          y: y,\r\n          vx: Math.cos(angle) * speed,\r\n          vy: Math.sin(angle) * speed,\r\n          life: 1.2,\r\n          maxLife: 1.2,\r\n          size: Math.random() * 2 + 1,\r\n          color: greenColors[Math.floor(Math.random() * greenColors.length)] ?? '#00ff7f',\r\n          alpha: 1,\r\n          type: 'spark',\r\n        });\r\n      }, Math.random() * 200);\r\n    }\r\n\r\n    // RADIATING LINES\r\n    for (let i = 0; i < 8; i++) {\r\n      const angle = (i / 8) * Math.PI * 2;\r\n\r\n      for (let j = 0; j < 5; j++) {\r\n        setTimeout(() => {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * (150 + j * 30),\r\n            vy: Math.sin(angle) * (150 + j * 30),\r\n            life: 0.8,\r\n            maxLife: 0.8,\r\n            size: 2,\r\n            color: '#90ee90',\r\n            alpha: 1,\r\n            type: 'circle',\r\n          });\r\n        }, j * 50);\r\n      }\r\n    }\r\n  }\r\n\r\n  private createGreenLotusEffect(x: number, y: number, flippedPositions: Array<{x: number, y: number}>): void {\r\n    console.log('🌸 青蓮劍歌 - Green Lotus Effect! 🌸');\r\n\r\n    // Convert flipped positions to target positions for the effect\r\n    const targetPositions: Position[] = flippedPositions.map(pos => ({ x: pos.x, y: pos.y }));\r\n\r\n    // Create the Green Lotus effect\r\n    const greenLotus = new GreenLotusEffect(x, y, targetPositions);\r\n    this.greenLotusEffects.push(greenLotus);\r\n  }\r\n\r\n  private createUnlimitedBladeWorksEffect(x: number, y: number, flippedPositions: Array<{x: number, y: number}>): void {\r\n    console.log('⚔️ 劍刃迴響 - Blade Echo Effect! ⚔️');\r\n\r\n    // Convert flipped positions to target positions for the effect\r\n    const targetPositions: Position[] = flippedPositions.map(pos => ({ x: pos.x, y: pos.y }));\r\n\r\n    // Create the UBW effect\r\n    const ubwEffect = new UnlimitedBladeWorksEffect(x, y, targetPositions);\r\n    this.ubwEffects.push(ubwEffect);\r\n  }\r\n\r\n  private createDivineThunderEffect(x: number, y: number, flippedPositions: Array<{x: number, y: number}>): void {\r\n    console.log('⚡ 神劍御雷 - Divine Thunder Strike! ⚡');\r\n\r\n    // Convert flipped positions to target positions for the effect\r\n    const targetPositions: Position[] = flippedPositions.map(pos => ({ x: pos.x, y: pos.y }));\r\n\r\n    // Create the Divine Thunder effect\r\n    const thunderEffect = new DivineSwordThunderEffect(x, y, targetPositions);\r\n    this.divineThunderEffects.push(thunderEffect);\r\n  }\r\n\r\n  private createNineFinaleEffect(x: number, y: number, flippedPositions: Array<{x: number, y: number}>): void {\r\n    console.log('🔥 九俱焚滅 - Nine Finale Destruction! 🔥');\r\n\r\n    // Convert flipped positions to target positions for the effect\r\n    const targetPositions: Position[] = flippedPositions.map(pos => ({ x: pos.x, y: pos.y }));\r\n\r\n    // Create the Nine Finale effect\r\n    const finaleEffect = new NineFinaleEffect(x, y, targetPositions);\r\n    this.nineFinaleEffects.push(finaleEffect);\r\n  }\r\n\r\n  private createIceSpearEffect(x: number, y: number, flippedPositions: Array<{x: number, y: number}>): void {\r\n    console.log('❄️ 滅劍羅淵 - Ice Spear Abyss! ❄️');\r\n\r\n    // Convert flipped positions to target positions for the effect\r\n    const targetPositions: Position[] = flippedPositions.map(pos => ({ x: pos.x, y: pos.y }));\r\n\r\n    // Create the Ice Spear effect\r\n    const iceSpearEffect = new IceSpearEffect(x, y, targetPositions);\r\n    this.iceSpearEffects.push(iceSpearEffect);\r\n  }\r\n\r\n  private createCEffect(x: number, y: number): void {\r\n    // BASIC C-grade effect - Light gray elegance\r\n    const grayColors = ['#d3d3d3', '#c0c0c0', '#dcdcdc', '#f5f5f5', '#e0e0e0', '#f8f8f8', '#b8b8b8', '#a9a9a9', '#d8d8d8', '#e6e6e6'];\r\n\r\n    console.log('⚪ Basic C-Grade Move');\r\n\r\n    // SIMPLE RING - Still noticeable\r\n    for (let i = 0; i < 12; i++) {\r\n      const angle = (i / 12) * Math.PI * 2;\r\n\r\n      this.particles.push({\r\n        x: x,\r\n        y: y,\r\n        vx: Math.cos(angle) * 80,\r\n        vy: Math.sin(angle) * 80,\r\n        life: 0.8,\r\n        maxLife: 0.8,\r\n        size: Math.random() * 1.5 + 1,\r\n        color: grayColors[i % grayColors.length] ?? '#d3d3d3',\r\n        alpha: 0.8,\r\n        type: 'circle',\r\n      });\r\n    }\r\n\r\n    // SMALL SPARKLES\r\n    for (let i = 0; i < 6; i++) {\r\n      const angle = Math.random() * Math.PI * 2;\r\n      const speed = Math.random() * 60 + 40;\r\n\r\n      this.particles.push({\r\n        x: x,\r\n        y: y,\r\n        vx: Math.cos(angle) * speed,\r\n        vy: Math.sin(angle) * speed,\r\n        life: 0.6,\r\n        maxLife: 0.6,\r\n        size: 1,\r\n        color: '#d3d3d3',\r\n        alpha: 0.7,\r\n        type: 'spark',\r\n      });\r\n    }\r\n  }\r\n\r\n  // Create flip animation particles - SPECTACULAR ENHANCED!\r\n  createFlipEffect(x: number, y: number, color: string, grade?: Grade): void {\r\n    // Much more spectacular flip effects with grade-based colors!\r\n    const isBlack = color === '#000000';\r\n\r\n    // Get grade-based colors or fallback to basic colors\r\n    let gradeColors: string[];\r\n    let intensity: number;\r\n\r\n    if (grade) {\r\n      switch (grade) {\r\n        case 'SSS':\r\n          // Use cosmic_burst colors - golden theme\r\n          gradeColors = ['#ffd700', '#ffef94', '#fff68f', '#ffffe0', '#fffacd'];\r\n          intensity = 3.0;\r\n          break;\r\n        case 'SS':\r\n          // Use supernova colors - orange theme\r\n          gradeColors = ['#ff8c00', '#ffa500', '#ff7f00', '#ff6347', '#ff4500'];\r\n          intensity = 2.5;\r\n          break;\r\n        case 'S':\r\n          // Use light purple theme - 淺紫色系主題\r\n          gradeColors = ['#dda0dd', '#e6b8ea', '#d8bfd8', '#e0b0ff', '#dbb2ff'];\r\n          intensity = 2.0;\r\n          break;\r\n        case 'A':\r\n          // Use light blue theme - 淺藍色系主題\r\n          gradeColors = ['#87ceeb', '#add8e6', '#b0e0e6', '#afeeee', '#e0ffff'];\r\n          intensity = 1.5;\r\n          break;\r\n        case 'B':\r\n          // Use light green theme - 淺綠色系主題\r\n          gradeColors = ['#90ee90', '#98fb98', '#b4ffb4', '#c8ffc8', '#a8e6a8'];\r\n          intensity = 1.2;\r\n          break;\r\n        case 'C':\r\n          // Use white/gray theme - 白灰色系主題\r\n          gradeColors = ['#d3d3d3', '#c0c0c0', '#e0e0e0', '#f5f5f5', '#b8b8b8'];\r\n          intensity = 1.0;\r\n          break;\r\n        default:\r\n          gradeColors = isBlack ? ['#666666', '#888888', '#555555'] : ['#f0f0f0', '#e8e8e8', '#f5f5f5'];\r\n          intensity = 0.8;\r\n      }\r\n    } else {\r\n      gradeColors = isBlack ? ['#666666', '#888888', '#555555'] : ['#f0f0f0', '#e8e8e8', '#f5f5f5'];\r\n      intensity = 0.8;\r\n    }\r\n\r\n    const primaryColor = gradeColors[0] ?? '#ffffff';\r\n    const accentColors = gradeColors;\r\n\r\n    console.log(`🔄 Flip Effect: ${isBlack ? 'Black' : 'White'} piece flipped! Grade: ${grade || 'Basic'}`);\r\n\r\n    // EXPLOSIVE FLIP BURST - Intensity based on grade!\r\n    const burstCount = Math.floor(15 * intensity);\r\n    for (let i = 0; i < burstCount; i++) {\r\n      const angle = (i / burstCount) * Math.PI * 2;\r\n      const speed = (Math.random() * 60 + 60) * intensity;\r\n\r\n      this.particles.push({\r\n        x: x,\r\n        y: y,\r\n        vx: Math.cos(angle) * speed,\r\n        vy: Math.sin(angle) * speed,\r\n        life: 0.6 * intensity,\r\n        maxLife: 0.6 * intensity,\r\n        size: (Math.random() * 1.5 + 1) * intensity,\r\n        color: i % 3 === 0 ? primaryColor : accentColors[i % accentColors.length] ?? primaryColor,\r\n        alpha: 0.9,\r\n        type: i % 2 === 0 ? 'spark' : 'circle',\r\n      });\r\n    }\r\n\r\n    // RING EXPANSION - Visual flip wave (intensity-based)\r\n    const ringCount = Math.floor(2 + intensity);\r\n    for (let ring = 0; ring < ringCount; ring++) {\r\n      setTimeout(() => {\r\n        const particlesPerRing = Math.floor(12 + intensity * 4);\r\n        for (let i = 0; i < particlesPerRing; i++) {\r\n          const angle = (i / particlesPerRing) * Math.PI * 2;\r\n          const speed = (80 + ring * 30) * intensity;\r\n\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * speed,\r\n            vy: Math.sin(angle) * speed,\r\n            life: 0.6 + ring * 0.2,\r\n            maxLife: 0.6 + ring * 0.2,\r\n            size: ring === 0 ? 2 : 1,\r\n            color: primaryColor,\r\n            alpha: 0.7 - ring * 0.2,\r\n            type: 'circle',\r\n          });\r\n        }\r\n      }, ring * 80);\r\n    }\r\n\r\n    // FLIP SPARKLE TRAIL - Cascading sparkles\r\n    for (let i = 0; i < 15; i++) {\r\n      const angle = Math.random() * Math.PI * 2;\r\n      const speed = Math.random() * 60 + 40;\r\n\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + (Math.random() - 0.5) * 20,\r\n          y: y + (Math.random() - 0.5) * 20,\r\n          vx: Math.cos(angle) * speed,\r\n          vy: Math.sin(angle) * speed,\r\n          life: 0.7,\r\n          maxLife: 0.7,\r\n          size: Math.random() * 1.5 + 1,\r\n          color: accentColors[Math.floor(Math.random() * accentColors.length)] ?? '#d3d3d3',\r\n          alpha: 0.8,\r\n          type: 'spark',\r\n        });\r\n      }, Math.random() * 200);\r\n    }\r\n\r\n    // MAGIC DUST - Floating ambient particles\r\n    for (let i = 0; i < 8; i++) {\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + (Math.random() - 0.5) * 30,\r\n          y: y + (Math.random() - 0.5) * 30,\r\n          vx: (Math.random() - 0.5) * 30,\r\n          vy: -Math.random() * 40 - 20,\r\n          life: 1.2,\r\n          maxLife: 1.2,\r\n          size: Math.random() * 1 + 0.5,\r\n          color: primaryColor,\r\n          alpha: 0.6,\r\n          type: 'circle',\r\n        });\r\n      }, Math.random() * 300);\r\n    }\r\n\r\n    // FLIP SHOCKWAVE - Single expanding ring\r\n    setTimeout(() => {\r\n      for (let angle = 0; angle < Math.PI * 2; angle += 0.2) {\r\n        this.particles.push({\r\n          x: x,\r\n          y: y,\r\n          vx: Math.cos(angle) * 150,\r\n          vy: Math.sin(angle) * 150,\r\n          life: 0.4,\r\n          maxLife: 0.4,\r\n          size: 1.5,\r\n          color: isBlack ? '#333333' : '#f9f9f9',\r\n          alpha: 0.5,\r\n          type: 'circle',\r\n        });\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  // Clean up\r\n  destroy(): void {\r\n    if (this.animationId) {\r\n      cancelAnimationFrame(this.animationId);\r\n    }\r\n    this.particles = [];\r\n    this.canvas.remove();\r\n  }\r\n\r\n  // Get particle count for performance monitoring\r\n  getParticleCount(): number {\r\n    return this.particles.length;\r\n  }\r\n\r\n  // Special situation effects\r\n  private createCornerExplosion(x: number, y: number): void {\r\n    // Golden castle walls effect for corner captures\r\n    const castleColors = ['#ffd700', '#ffdf00', '#ffa500'];\r\n\r\n    // Castle wall pattern\r\n    for (let wall = 0; wall < 4; wall++) {\r\n      const angle = (wall / 4) * Math.PI * 2;\r\n\r\n      for (let brick = 0; brick < 20; brick++) {\r\n        setTimeout(() => {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * 300 + (Math.random() - 0.5) * 100,\r\n            vy: Math.sin(angle) * 300 + (Math.random() - 0.5) * 100,\r\n            life: 1.5,\r\n            maxLife: 1.5,\r\n            size: Math.random() * 3 + 2,\r\n            color: castleColors[brick % castleColors.length] ?? '#ffd700',\r\n            alpha: 1,\r\n            type: 'circle',\r\n          });\r\n        }, brick * 30 + wall * 200);\r\n      }\r\n    }\r\n  }\r\n\r\n  private createComebackEffect(x: number, y: number): void {\r\n    // Phoenix rising effect for comeback moves\r\n    const phoenixColors = ['#ff4500', '#ff6347', '#ffa500', '#ff1493'];\r\n\r\n    // Rising phoenix flames\r\n    for (let i = 0; i < 80; i++) {\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + (Math.random() - 0.5) * 60,\r\n          y: y + Math.random() * 30,\r\n          vx: (Math.random() - 0.5) * 200,\r\n          vy: -Math.random() * 400 - 200,\r\n          life: 2.0,\r\n          maxLife: 2.0,\r\n          size: Math.random() * 4 + 2,\r\n          color: phoenixColors[Math.floor(Math.random() * phoenixColors.length)] ?? '#ff6347',\r\n          alpha: 0.9,\r\n          type: 'spark',\r\n        });\r\n      }, Math.random() * 600);\r\n    }\r\n  }\r\n\r\n  private createMassiveEffect(x: number, y: number): void {\r\n    // Tsunami wave for massive flips\r\n    const waveColors = ['#0080ff', '#00bfff', '#87ceeb', '#b0e0e6'];\r\n\r\n    // Wave fronts\r\n    for (let wave = 0; wave < 6; wave++) {\r\n      setTimeout(() => {\r\n        for (let particle = 0; particle < 40; particle++) {\r\n          const angle = (particle / 40) * Math.PI * 2;\r\n\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * (200 + wave * 50),\r\n            vy: Math.sin(angle) * (200 + wave * 50),\r\n            life: 1.0 + wave * 0.2,\r\n            maxLife: 1.0 + wave * 0.2,\r\n            size: Math.random() * 3 + 1,\r\n            color: waveColors[wave % waveColors.length] ?? '#0080ff',\r\n            alpha: 0.8,\r\n            type: 'circle',\r\n          });\r\n        }\r\n      }, wave * 150);\r\n    }\r\n  }\r\n\r\n  private createDominationEffect(x: number, y: number): void {\r\n    // Crown and scepter effect for domination\r\n    const royalColors = ['#9932cc', '#8b00ff', '#ffd700', '#daa520'];\r\n\r\n    // Crown jewels\r\n    for (let jewel = 0; jewel < 12; jewel++) {\r\n      const angle = (jewel / 12) * Math.PI * 2;\r\n\r\n      setTimeout(() => {\r\n        this.particles.push({\r\n          x: x + Math.cos(angle) * 50,\r\n          y: y + Math.sin(angle) * 50,\r\n          vx: Math.cos(angle) * 150,\r\n          vy: Math.sin(angle) * 150,\r\n          life: 1.8,\r\n          maxLife: 1.8,\r\n          size: Math.random() * 4 + 3,\r\n          color: royalColors[jewel % royalColors.length] ?? '#9932cc',\r\n          alpha: 1,\r\n          type: 'circle',\r\n        });\r\n      }, jewel * 80);\r\n    }\r\n  }\r\n\r\n  // Chain reaction effect\r\n  createChainEffect(x: number, y: number): void {\r\n    if (!this.enabled) {return;}\r\n\r\n    // Lightning chain for chain reactions\r\n    const lightningColors = ['#ffff00', '#ffffff', '#00ffff'];\r\n\r\n    // Lightning bolts\r\n    for (let bolt = 0; bolt < 8; bolt++) {\r\n      const angle = (bolt / 8) * Math.PI * 2;\r\n\r\n      for (let segment = 0; segment < 10; segment++) {\r\n        setTimeout(() => {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y,\r\n            vx: Math.cos(angle) * (100 + segment * 20) + (Math.random() - 0.5) * 60,\r\n            vy: Math.sin(angle) * (100 + segment * 20) + (Math.random() - 0.5) * 60,\r\n            life: 0.4,\r\n            maxLife: 0.4,\r\n            size: 2,\r\n            color: lightningColors[segment % lightningColors.length] ?? '#ffff00',\r\n            alpha: 1,\r\n            type: 'spark',\r\n          });\r\n        }, segment * 20 + bolt * 50);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 創建飄起的等級文字效果\r\n   */\r\n  createFloatingGradeText(x: number, y: number, grade: Grade): void {\r\n    if (!this.enabled) {return;}\r\n\r\n    // 定義每個等級的顏色和大小\r\n    const gradeConfig = {\r\n      'C': { color: '#d3d3d3', fontSize: 24 },\r\n      'B': { color: '#90ee90', fontSize: 28 },\r\n      'A': { color: '#87ceeb', fontSize: 42 },\r\n      'S': { color: '#9932cc', fontSize: 48 },\r\n      'SS': { color: '#ff8c00', fontSize: 56 },\r\n      'SSS': { color: '#ffd700', fontSize: 64 },\r\n    };\r\n\r\n    const config = gradeConfig[grade];\r\n    if (!config) {return;}\r\n\r\n    console.log(`💫 Creating floating text: ${grade} at (${x}, ${y})`);\r\n\r\n    // 嘗試創建 Canvas 文字粒子\r\n    if (this.ctx && this.canvas) {\r\n      this.particles.push({\r\n        x: x,\r\n        y: y,\r\n        vx: 0, // 不水平移動\r\n        vy: -80, // 向上飄起，速度根據等級調整\r\n        life: 2.0, // 顯示2秒\r\n        maxLife: 2.0,\r\n        size: config.fontSize,\r\n        color: config.color,\r\n        alpha: 1.0,\r\n        type: 'text',\r\n        text: grade,\r\n        fontSize: config.fontSize,\r\n      });\r\n\r\n      // 為高等級創建額外的文字效果\r\n      if (grade === 'SSS') {\r\n        setTimeout(() => {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y - 10,\r\n            vx: 0,\r\n            vy: -60,\r\n            life: 2.5,\r\n            maxLife: 2.5,\r\n            size: 72,\r\n            color: '#ffa500',\r\n            alpha: 0.7,\r\n            type: 'text',\r\n            text: grade,\r\n            fontSize: 72,\r\n          });\r\n        }, 100);\r\n      } else if (grade === 'SS') {\r\n        setTimeout(() => {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y - 8,\r\n            vx: 0,\r\n            vy: -65,\r\n            life: 2.2,\r\n            maxLife: 2.2,\r\n            size: 64,\r\n            color: '#ff4500',\r\n            alpha: 0.6,\r\n            type: 'text',\r\n            text: grade,\r\n            fontSize: 64,\r\n          });\r\n        }, 80);\r\n      } else if (grade === 'S') {\r\n        setTimeout(() => {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y - 6,\r\n            vx: 0,\r\n            vy: -70,\r\n            life: 2.0,\r\n            maxLife: 2.0,\r\n            size: 54,\r\n            color: '#ba55d3',\r\n            alpha: 0.5,\r\n            type: 'text',\r\n            text: grade,\r\n            fontSize: 54,\r\n          });\r\n        }, 60);\r\n      } else if (grade === 'A') {\r\n        setTimeout(() => {\r\n          this.particles.push({\r\n            x: x,\r\n            y: y - 5,\r\n            vx: 0,\r\n            vy: -75,\r\n            life: 1.8,\r\n            maxLife: 1.8,\r\n            size: 48,\r\n            color: '#4169e1',\r\n            alpha: 0.4,\r\n            type: 'text',\r\n            text: grade,\r\n            fontSize: 48,\r\n          });\r\n        }, 40);\r\n      }\r\n    } else {\r\n      // 使用 CSS 後備方案\r\n      this.createCSSFloatingText(x, y, grade);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * CSS 後備方案創建飄起文字\r\n   */\r\n  private createCSSFloatingText(x: number, y: number, grade: Grade): void {\r\n    console.log(`🎨 Using CSS fallback for floating text: ${grade}`);\r\n\r\n    const container = this.canvas.parentElement;\r\n    if (!container) {return;}\r\n\r\n    // 創建文字元素\r\n    const textElement = document.createElement('div');\r\n    textElement.className = `floating-grade-text grade-${grade.toLowerCase()}`;\r\n    textElement.textContent = grade;\r\n\r\n    // 設定位置\r\n    textElement.style.left = `${x}px`;\r\n    textElement.style.top = `${y}px`;\r\n    textElement.style.transform = 'translate(-50%, -50%)';\r\n\r\n    // 新增到容器\r\n    container.appendChild(textElement);\r\n\r\n    // 2秒後移除\r\n    setTimeout(() => {\r\n      if (textElement.parentNode) {\r\n        textElement.parentNode.removeChild(textElement);\r\n      }\r\n    }, 2000);\r\n  }\r\n}","import type { Language, TranslationKey, AllTranslations, LanguageData } from './types';\r\n\r\n// Import translation files\r\nimport enTranslations from './locales/en.json';\r\nimport zhHantTranslations from './locales/zh-Hant.json';\r\nimport zhHansTranslations from './locales/zh-Hans.json';\r\n\r\n// Current language state\r\nlet currentLanguage: Language = 'en';\r\n\r\n// Consolidated translations object\r\nconst translations: AllTranslations = {\r\n  en: enTranslations as LanguageData,\r\n  'zh-Hant': zhHantTranslations as LanguageData,\r\n  'zh-Hans': zhHansTranslations as LanguageData,\r\n};\r\n\r\n/**\r\n * Translate a key with optional parameter substitution\r\n * @param key Translation key\r\n * @param params Optional parameters for string interpolation\r\n * @returns Translated string\r\n */\r\nexport function t(key: string, params?: Record<string, string | number>): string {\r\n  const currentTranslations = translations[currentLanguage] as LanguageData;\r\n  let translation = currentTranslations[key] ?? key;\r\n\r\n  if (params) {\r\n    translation = translation.replace(/\\$\\{(\\w+)\\}/g, (_match: string, k: string) =>\r\n      Object.prototype.hasOwnProperty.call(params, k) ? String(params[k]) : '',\r\n    );\r\n  }\r\n\r\n  return translation;\r\n}\r\n\r\n/**\r\n * Set the current language\r\n * @param lang Language to set\r\n */\r\nexport function setLanguage(lang: Language): void {\r\n  if (lang in translations) {\r\n    currentLanguage = lang;\r\n    if (typeof document !== 'undefined') {\r\n      document.documentElement.lang = lang;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Get the current language\r\n * @returns Current language\r\n */\r\nexport function getLanguage(): Language {\r\n  return currentLanguage;\r\n}\r\n\r\n/**\r\n * Apply translations to elements with data-i18n attributes\r\n * @param root Root element to search within (defaults to document)\r\n */\r\nexport function applyTranslations(root: ParentNode = document): void {\r\n  const elements = root.querySelectorAll<HTMLElement>('[data-i18n]');\r\n  elements.forEach(el => {\r\n    const key = el.dataset.i18n!;\r\n    el.textContent = t(key);\r\n  });\r\n}\r\n\r\n/**\r\n * Get all available languages\r\n * @returns Array of available language codes\r\n */\r\nexport function getAvailableLanguages(): Language[] {\r\n  return Object.keys(translations) as Language[];\r\n}\r\n\r\n/**\r\n * Check if a language is supported\r\n * @param lang Language code to check\r\n * @returns True if language is supported\r\n */\r\nexport function isLanguageSupported(lang: string): lang is Language {\r\n  return lang in translations;\r\n}\r\n\r\n/**\r\n * Get all translations for a specific language\r\n * @param lang Language code\r\n * @returns Translation object for the language\r\n */\r\nexport function getTranslationsForLanguage(lang: Language): LanguageData | null {\r\n  return (lang in translations) ? translations[lang] as LanguageData : null;\r\n}\r\n\r\n/**\r\n * Type-safe translation function (for development)\r\n * @param key Translation key (type-checked)\r\n * @param params Optional parameters for string interpolation\r\n * @returns Translated string\r\n */\r\nexport function ts(key: TranslationKey, params?: Record<string, string | number>): string {\r\n  return t(key, params);\r\n}\r\n\r\n// Re-export types for convenience\r\nexport type { Language, TranslationKey, LanguageData, AllTranslations } from './types';","/**\r\n * 連擊系統\r\n * 追蹤玩家連續下棋狀態並觸發相應特效\r\n */\r\n\r\nimport type { PlayerColor } from '@/types/game-types';\r\nimport { ParticlePresetType, getPresetForSpecialMove, blendPresets, PARTICLE_PRESETS } from './particle-presets';\r\nimport { t } from '@/i18n/index';\r\n\r\nexport interface ComboState {\r\n  /** 連擊次數 */\r\n  count: number;\r\n  /** 當前連擊玩家 */\r\n  player: PlayerColor | null;\r\n  /** 連擊倍數 */\r\n  multiplier: number;\r\n  /** 連擊開始時間 */\r\n  startTime: number;\r\n  /** 是否處於連擊狀態 */\r\n  isActive: boolean;\r\n  /** 最高連擊記錄 */\r\n  maxCombo: number;\r\n  /** 連擊類型 */\r\n  type: ComboType;\r\n}\r\n\r\nexport type ComboType =\r\n  | 'none'\r\n  | 'double'\r\n  | 'triple'\r\n  | 'quadruple'\r\n  | 'quintuple'\r\n  | 'sextuple'\r\n  | 'septuple';\r\n\r\nexport interface ComboEffect {\r\n  /** 特效類型 */\r\n  effectType: ParticlePresetType;\r\n  /** 強度倍數 */\r\n  intensity: number;\r\n  /** 持續時間 */\r\n  duration: number;\r\n  /** 特殊音效 */\r\n  soundEffect?: string;\r\n  /** 螢幕震動 */\r\n  screenShake?: boolean;\r\n  /** 慢動作效果 */\r\n  slowMotion?: boolean;\r\n}\r\n\r\nexport interface ComboEvent {\r\n  type: 'combo_started' | 'combo_continued' | 'combo_ended' | 'combo_broken';\r\n  player: PlayerColor;\r\n  comboCount: number;\r\n  comboType: ComboType;\r\n  effect?: ComboEffect;\r\n  timestamp: number;\r\n}\r\n\r\n/**\r\n * 連擊等級配置\r\n */\r\nexport const COMBO_LEVELS: Record<ComboType, ComboEffect> = {\r\n  none: {\r\n    effectType: 'snowflake',\r\n    intensity: 1.0,\r\n    duration: 500,\r\n  },\r\n  double: {\r\n    effectType: 'magic',\r\n    intensity: 1.5,\r\n    duration: 800,\r\n    soundEffect: 'combo_double',\r\n  },\r\n  triple: {\r\n    effectType: 'fire',\r\n    intensity: 2.0,\r\n    duration: 1200,\r\n    soundEffect: 'combo_triple',\r\n    screenShake: true,\r\n  },\r\n  quadruple: {\r\n    effectType: 'explosion',\r\n    intensity: 2.5,\r\n    duration: 1500,\r\n    soundEffect: 'combo_quadruple',\r\n    screenShake: true,\r\n  },\r\n  quintuple: {\r\n    effectType: 'lightning',\r\n    intensity: 3.0,\r\n    duration: 1800,\r\n    soundEffect: 'combo_quintuple',\r\n    screenShake: true,\r\n    slowMotion: false,\r\n  },\r\n  sextuple: {\r\n    effectType: 'storm',\r\n    intensity: 4.0,\r\n    duration: 2200,\r\n    soundEffect: 'combo_sextuple',\r\n    screenShake: true,\r\n    slowMotion: true,\r\n  },\r\n  septuple: {\r\n    effectType: 'blackhole',\r\n    intensity: 5.0,\r\n    duration: 2500,\r\n    soundEffect: 'combo_septuple',\r\n    screenShake: true,\r\n    slowMotion: true,\r\n  },\r\n};\r\n\r\n/**\r\n * 連擊系統主類\r\n */\r\nexport class ComboSystem {\r\n  private _state: ComboState;\r\n  private _eventHandlers: ((event: ComboEvent) => void)[] = [];\r\n  private _history: ComboEvent[] = [];\r\n\r\n  constructor() {\r\n    this._state = this.createInitialState();\r\n  }\r\n\r\n  /**\r\n   * 創建初始狀態\r\n   */\r\n  private createInitialState(): ComboState {\r\n    return {\r\n      count: 0,\r\n      player: null,\r\n      multiplier: 1.0,\r\n      startTime: 0,\r\n      isActive: false,\r\n      maxCombo: 0,\r\n      type: 'none',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 獲取當前連擊狀態\r\n   */\r\n  get state(): Readonly<ComboState> {\r\n    return Object.freeze({ ...this._state });\r\n  }\r\n\r\n  /**\r\n   * 獲取連擊歷史\r\n   */\r\n  get history(): readonly ComboEvent[] {\r\n    return Object.freeze([...this._history]);\r\n  }\r\n\r\n  /**\r\n   * 處理玩家移動\r\n   * @param player 當前玩家\r\n   * @param opponentCanMove 對手是否能移動\r\n   * @param moveScore 當前移動分數\r\n   */\r\n  processMove(player: PlayerColor, opponentCanMove: boolean, moveScore?: number): ComboEvent | null {\r\n    console.log(`🔥 Combo: 處理移動 - Player: ${player}, 對手可移動: ${opponentCanMove}, 分數: ${moveScore}`);\r\n\r\n    // 如果對手能移動，重置連擊\r\n    if (opponentCanMove) {\r\n      console.log('🔥 Combo: 對手可移動，結束連擊');\r\n      return this.endCombo();\r\n    } else {\r\n      console.log('🔥 Combo: 對手無法移動，繼續連擊！');\r\n    }\r\n\r\n    // 檢查是否是同一玩家繼續連擊\r\n    if (this._state.player === player) {\r\n      return this.continueCombo(moveScore);\r\n    } else {\r\n      // 新玩家開始連擊\r\n      return this.startCombo(player, moveScore);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 開始新連擊\r\n   */\r\n  private startCombo(player: PlayerColor, moveScore?: number): ComboEvent {\r\n    // 結束之前的連擊\r\n    if (this._state.isActive) {\r\n      this.endCombo();\r\n    }\r\n\r\n    this._state = {\r\n      count: 2, // 第一次連擊至少是2回合\r\n      player,\r\n      multiplier: 1.2,\r\n      startTime: Date.now(),\r\n      isActive: true,\r\n      maxCombo: Math.max(this._state.maxCombo, 2),\r\n      type: 'double',\r\n    };\r\n\r\n    const event: ComboEvent = {\r\n      type: 'combo_started',\r\n      player,\r\n      comboCount: this._state.count,\r\n      comboType: this._state.type,\r\n      effect: this.getComboEffect(),\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    this._emitEvent(event);\r\n    this._history.push(event);\r\n\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * 繼續連擊\r\n   */\r\n  private continueCombo(moveScore?: number): ComboEvent {\r\n    if (!this._state.isActive || !this._state.player) {\r\n      throw new Error('Cannot continue combo: no active combo');\r\n    }\r\n\r\n    this._state.count++;\r\n    this._state.multiplier = Math.min(1.0 + (this._state.count * 0.2), 3.0);\r\n    this._state.maxCombo = Math.max(this._state.maxCombo, this._state.count);\r\n    this._state.type = this.determineComboType(this._state.count);\r\n\r\n    const event: ComboEvent = {\r\n      type: 'combo_continued',\r\n      player: this._state.player,\r\n      comboCount: this._state.count,\r\n      comboType: this._state.type,\r\n      effect: this.getComboEffect(),\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    this._emitEvent(event);\r\n    this._history.push(event);\r\n\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * 結束連擊\r\n   */\r\n  private endCombo(): ComboEvent | null {\r\n    if (!this._state.isActive || !this._state.player) {\r\n      return null;\r\n    }\r\n\r\n    const event: ComboEvent = {\r\n      type: 'combo_ended',\r\n      player: this._state.player,\r\n      comboCount: this._state.count,\r\n      comboType: this._state.type,\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    // 重置狀態\r\n    this._state = this.createInitialState();\r\n    this._state.maxCombo = this.state.maxCombo; // 保持最高記錄\r\n\r\n    this._emitEvent(event);\r\n    this._history.push(event);\r\n\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * 強制中斷連擊\r\n   */\r\n  breakCombo(reason: string = 'manual'): ComboEvent | null {\r\n    if (!this._state.isActive || !this._state.player) {\r\n      return null;\r\n    }\r\n\r\n    const event: ComboEvent = {\r\n      type: 'combo_broken',\r\n      player: this._state.player,\r\n      comboCount: this._state.count,\r\n      comboType: this._state.type,\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    this._state = this.createInitialState();\r\n    this._state.maxCombo = this.state.maxCombo;\r\n\r\n    this._emitEvent(event);\r\n    this._history.push(event);\r\n\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * 判斷連擊類型\r\n   */\r\n  private determineComboType(count: number): ComboType {\r\n    if (count >= 7) {return 'septuple';}\r\n    if (count >= 6) {return 'sextuple';}\r\n    if (count >= 5) {return 'quintuple';}\r\n    if (count >= 4) {return 'quadruple';}\r\n    if (count >= 3) {return 'triple';}\r\n    if (count >= 2) {return 'double';}\r\n    return 'none';\r\n  }\r\n\r\n  /**\r\n   * 獲取連擊特效配置\r\n   */\r\n  private getComboEffect(): ComboEffect {\r\n    const baseEffect = COMBO_LEVELS[this._state.type];\r\n\r\n    // 根據連擊次數調整強度\r\n    const intensityBonus = Math.min(this._state.count * 0.1, 1.0);\r\n\r\n    return {\r\n      ...baseEffect,\r\n      intensity: baseEffect.intensity + intensityBonus,\r\n      duration: baseEffect.duration + (this._state.count * 50),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 獲取連擊統計\r\n   */\r\n  getStats(): {\r\n    currentCombo: number;\r\n    maxCombo: number;\r\n    totalCombos: number;\r\n    averageComboLength: number;\r\n    comboTypeDistribution: Record<ComboType, number>;\r\n    } {\r\n    const combos = this._history.filter(e => e.type === 'combo_ended' || e.type === 'combo_broken');\r\n    const totalCombos = combos.length;\r\n    const averageLength = totalCombos > 0\r\n      ? combos.reduce((sum, combo) => sum + combo.comboCount, 0) / totalCombos\r\n      : 0;\r\n\r\n    const distribution: Record<ComboType, number> = {\r\n      none: 0,\r\n      double: 0,\r\n      triple: 0,\r\n      quadruple: 0,\r\n      quintuple: 0,\r\n      sextuple: 0,\r\n      septuple: 0,\r\n    };\r\n\r\n    combos.forEach(combo => {\r\n      distribution[combo.comboType]++;\r\n    });\r\n\r\n    return {\r\n      currentCombo: this._state.count,\r\n      maxCombo: this._state.maxCombo,\r\n      totalCombos,\r\n      averageComboLength: averageLength,\r\n      comboTypeDistribution: distribution,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 獲取連擊建議特效\r\n   */\r\n  getSuggestedEffect(comboType: ComboType): ParticlePresetType {\r\n    switch (comboType) {\r\n      case 'septuple':\r\n        return 'blackhole';\r\n      case 'sextuple':\r\n        return 'storm';\r\n      case 'quintuple':\r\n        return 'lightning';\r\n      case 'quadruple':\r\n        return 'explosion';\r\n      case 'triple':\r\n        return 'fire';\r\n      case 'double':\r\n        return 'magic';\r\n      default:\r\n        return 'snowflake';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 檢查是否應該播放特殊音效\r\n   */\r\n  shouldPlaySpecialSound(comboType: ComboType): boolean {\r\n    return !['none', 'double'].includes(comboType);\r\n  }\r\n\r\n  /**\r\n   * 檢查是否應該觸發螢幕震動\r\n   */\r\n  shouldTriggerScreenShake(comboType: ComboType): boolean {\r\n    return ['quintuple', 'sextuple', 'septuple'].includes(comboType);\r\n  }\r\n\r\n  /**\r\n   * 檢查是否應該觸發慢動作效果\r\n   */\r\n  shouldTriggerSlowMotion(comboType: ComboType): boolean {\r\n    return comboType === 'septuple';\r\n  }\r\n\r\n  /**\r\n   * 重置系統\r\n   */\r\n  reset(): void {\r\n    this._state = this.createInitialState();\r\n    this._history = [];\r\n  }\r\n\r\n  /**\r\n   * 註冊事件處理器\r\n   */\r\n  addEventListener(handler: (event: ComboEvent) => void): void {\r\n    this._eventHandlers.push(handler);\r\n  }\r\n\r\n  /**\r\n   * 移除事件處理器\r\n   */\r\n  removeEventListener(handler: (event: ComboEvent) => void): void {\r\n    const index = this._eventHandlers.indexOf(handler);\r\n    if (index !== -1) {\r\n      this._eventHandlers.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 發送事件\r\n   */\r\n  private _emitEvent(event: ComboEvent): void {\r\n    this._eventHandlers.forEach(handler => {\r\n      try {\r\n        handler(event);\r\n      } catch (error) {\r\n        console.error('Combo event handler error:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 獲取連擊顯示文本\r\n   */\r\n  getComboDisplayText(): string {\r\n    if (!this._state.isActive) {return '';}\r\n\r\n    const key = `combo.${this._state.type}`;\r\n    const text = t(key);\r\n    return text === key ? `${this._state.count} combo!` : text;\r\n  }\r\n\r\n  /**\r\n   * 獲取連擊顏色\r\n   */\r\n  getComboDisplayColor(): string {\r\n    const colors = {\r\n      none: '#ffffff',\r\n      double: '#90ee90',\r\n      triple: '#ffa500',\r\n      quadruple: '#ff6347',\r\n      quintuple: '#ff1493',\r\n      sextuple: '#9932cc',\r\n      septuple: '#ffd700',\r\n    };\r\n\r\n    return colors[this._state.type as keyof typeof colors] || '#ffffff';\r\n  }\r\n}","/**\r\n * 必殺技特效系統\r\n * 處理角落支配、大規模翻轉、完美遊戲、逆轉等特殊招式\r\n */\r\n\r\nimport type { PlayerColor, BoardPosition } from '@/types/game-types';\r\nimport { ParticlePresetType, ParticlePresetConfig, PARTICLE_PRESETS, blendPresets } from './particle-presets';\r\nimport { t } from '@/i18n/index';\r\n\r\nexport type SpecialMoveType =\r\n  | 'corner_joseki'    // 角部定式 - 经典角部布局\r\n  | 'great_reversal'   // 大翻盘 - 乾坤大挪移，局势逆转\r\n  | 'total_domination' // 完全压制 - 如臂使指，掌控全局\r\n  | 'desperate_kill'   // 绝地反杀 - 绝境求生，反败为胜\r\n  | 'perfect_endgame'  // 完美收官 - 收官如神，无懈可击\r\n  | 'edge_control'     // 边线掌控 - 边线为王，稳扎稳打\r\n  | 'chain_reaction'   // 连锁反应 - 环环相扣，精妙计算\r\n  | 'time_control';    // 时间掌控 - 运筹帷幄，决胜千里\r\n\r\nexport interface SpecialMoveCondition {\r\n  /** 翻轉棋子數量要求 */\r\n  minFlipCount?: number;\r\n  /** 分數差距要求 */\r\n  scoreDifference?: { min: number; max: number };\r\n  /** 位置要求 */\r\n  positionType?: 'corner' | 'edge' | 'center';\r\n  /** 時機要求 */\r\n  timing?: 'early' | 'mid' | 'late';\r\n  /** 特殊條件 */\r\n  special?: string;\r\n}\r\n\r\nexport interface SpecialMoveEffect {\r\n  /** 特效類型 */\r\n  type: SpecialMoveType;\r\n  /** 粒子效果配置 */\r\n  particleEffect: ParticlePresetConfig;\r\n  /** 視覺效果 */\r\n  visual: {\r\n    screenShake: boolean;\r\n    slowMotion: boolean;\r\n    zoom: boolean;\r\n    cameraMovement: boolean;\r\n    colorFilter?: string;\r\n  };\r\n  /** 音效 */\r\n  audio: {\r\n    soundEffect: string;\r\n    volume: number;\r\n    echo?: boolean;\r\n    reverb?: boolean;\r\n  };\r\n  /** 持續時間 */\r\n  duration: number;\r\n  /** 文字顯示 */\r\n  display: {\r\n    title: string;\r\n    subtitle?: string;\r\n    color: string;\r\n    fontSize: number;\r\n    animation: 'fade' | 'zoom' | 'slide' | 'explode';\r\n  };\r\n}\r\n\r\n/**\r\n * 特殊招式檢測條件\r\n */\r\nexport const SPECIAL_MOVE_CONDITIONS: Record<SpecialMoveType, SpecialMoveCondition> = {\r\n  corner_joseki: {\r\n    positionType: 'corner',\r\n    minFlipCount: 3,\r\n    timing: 'early' as any,\r\n  },\r\n  great_reversal: {\r\n    minFlipCount: 6, // 大翻盘需要至少6个棋子翻转\r\n  },\r\n  total_domination: {\r\n    scoreDifference: { min: 15, max: 999 }, // 完全压制需要领先15分以上\r\n    minFlipCount: 4, // 至少翻转4个棋子\r\n  },\r\n  desperate_kill: {\r\n    scoreDifference: { min: -15, max: -1 }, // 绝地反杀需要落后15分以内\r\n    minFlipCount: 4, // 至少翻转4个棋子实现反杀\r\n  },\r\n  perfect_endgame: {\r\n    scoreDifference: { min: 20, max: 999 }, // 完美收官需要大幅领先\r\n    special: 'near_endgame',\r\n  },\r\n  edge_control: {\r\n    positionType: 'edge',\r\n    minFlipCount: 5, // 边线掌控需要至少5个棋子翻转\r\n  },\r\n  chain_reaction: {\r\n    minFlipCount: 8, // 连锁反应需要至少8个棋子翻转\r\n    special: 'multiple_directions',\r\n  },\r\n  time_control: {\r\n    minFlipCount: 10, // 时间掌控需要至少10个棋子翻转\r\n    special: 'ultra_rare',\r\n  },\r\n};\r\n\r\n/**\r\n * 特殊招式效果配置\r\n */\r\nexport const SPECIAL_MOVE_EFFECTS: Record<SpecialMoveType, SpecialMoveEffect> = {\r\n  corner_joseki: {\r\n    type: 'corner_joseki',\r\n    particleEffect: blendPresets('explosion', 'magic', 0.7),\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: false,\r\n      zoom: true,\r\n      cameraMovement: true,\r\n      colorFilter: '#ffd700',\r\n    },\r\n    audio: {\r\n      soundEffect: 'corner_joseki',\r\n      volume: 0.8,\r\n      echo: true,\r\n    },\r\n    duration: 1500,\r\n    display: {\r\n      title: t('special.corner_joseki'),\r\n      subtitle: t('special.corner_joseki.subtitle'),\r\n      color: '#ffd700',\r\n      fontSize: 36,\r\n      animation: 'explode',\r\n    },\r\n  },\r\n\r\n  great_reversal: {\r\n    type: 'great_reversal',\r\n    particleEffect: blendPresets('storm', 'lightning', 0.6),\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: true,\r\n      zoom: true,\r\n      cameraMovement: true,\r\n      colorFilter: '#87ceeb',\r\n    },\r\n    audio: {\r\n      soundEffect: 'great_reversal',\r\n      volume: 0.9,\r\n      echo: true,\r\n      reverb: true,\r\n    },\r\n    duration: 2000,\r\n    display: {\r\n      title: t('special.great_reversal'),\r\n      subtitle: t('special.great_reversal.subtitle'),\r\n      color: '#87ceeb',\r\n      fontSize: 42,\r\n      animation: 'zoom',\r\n    },\r\n  },\r\n\r\n  total_domination: {\r\n    type: 'total_domination',\r\n    particleEffect: blendPresets('blackhole', 'magic', 0.8),\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: true,\r\n      zoom: false,\r\n      cameraMovement: false,\r\n      colorFilter: '#9932cc',\r\n    },\r\n    audio: {\r\n      soundEffect: 'total_domination',\r\n      volume: 1.0,\r\n      echo: true,\r\n      reverb: true,\r\n    },\r\n    duration: 2500,\r\n    display: {\r\n      title: t('special.total_domination'),\r\n      subtitle: t('special.total_domination.subtitle'),\r\n      color: '#9932cc',\r\n      fontSize: 48,\r\n      animation: 'explode',\r\n    },\r\n  },\r\n\r\n  desperate_kill: {\r\n    type: 'desperate_kill',\r\n    particleEffect: blendPresets('fire', 'explosion', 0.8),\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: true,\r\n      zoom: true,\r\n      cameraMovement: true,\r\n      colorFilter: '#ff4500',\r\n    },\r\n    audio: {\r\n      soundEffect: 'desperate_kill',\r\n      volume: 0.95,\r\n      echo: true,\r\n      reverb: true,\r\n    },\r\n    duration: 2200,\r\n    display: {\r\n      title: t('special.desperate_kill'),\r\n      subtitle: t('special.desperate_kill.subtitle'),\r\n      color: '#ff4500',\r\n      fontSize: 44,\r\n      animation: 'slide',\r\n    },\r\n  },\r\n\r\n  perfect_endgame: {\r\n    type: 'perfect_endgame',\r\n    particleEffect: {\r\n      ...PARTICLE_PRESETS.blackhole,\r\n      colors: ['#ffd700', '#ffdf00', '#fff700', '#ffa500', '#ffffff'],\r\n    },\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: true,\r\n      zoom: true,\r\n      cameraMovement: true,\r\n      colorFilter: '#ffd700',\r\n    },\r\n    audio: {\r\n      soundEffect: 'perfect_endgame',\r\n      volume: 1.0,\r\n      echo: true,\r\n      reverb: true,\r\n    },\r\n    duration: 3000,\r\n    display: {\r\n      title: t('special.perfect_endgame'),\r\n      subtitle: t('special.perfect_endgame.subtitle'),\r\n      color: '#ffd700',\r\n      fontSize: 52,\r\n      animation: 'zoom',\r\n    },\r\n  },\r\n\r\n  edge_control: {\r\n    type: 'edge_control',\r\n    particleEffect: blendPresets('lightning', 'storm', 0.5),\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: false,\r\n      zoom: false,\r\n      cameraMovement: true,\r\n      colorFilter: '#00ffff',\r\n    },\r\n    audio: {\r\n      soundEffect: 'edge_control',\r\n      volume: 0.85,\r\n      echo: false,\r\n    },\r\n    duration: 1800,\r\n    display: {\r\n      title: t('special.edge_control'),\r\n      subtitle: t('special.edge_control.subtitle'),\r\n      color: '#00ffff',\r\n      fontSize: 38,\r\n      animation: 'slide',\r\n    },\r\n  },\r\n\r\n  chain_reaction: {\r\n    type: 'chain_reaction',\r\n    particleEffect: blendPresets('lightning', 'explosion', 0.7),\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: true,\r\n      zoom: false,\r\n      cameraMovement: false,\r\n      colorFilter: '#ffff00',\r\n    },\r\n    audio: {\r\n      soundEffect: 'chain_reaction',\r\n      volume: 0.9,\r\n      echo: true,\r\n    },\r\n    duration: 2000,\r\n    display: {\r\n      title: t('special.chain_reaction'),\r\n      subtitle: t('special.chain_reaction.subtitle'),\r\n      color: '#ffff00',\r\n      fontSize: 40,\r\n      animation: 'explode',\r\n    },\r\n  },\r\n\r\n  time_control: {\r\n    type: 'time_control',\r\n    particleEffect: {\r\n      ...PARTICLE_PRESETS.blackhole,\r\n      colors: ['#9932cc', '#8b00ff', '#ffffff', '#87ceeb', '#000000'],\r\n    },\r\n    visual: {\r\n      screenShake: true,\r\n      slowMotion: true,\r\n      zoom: true,\r\n      cameraMovement: true,\r\n      colorFilter: '#9932cc',\r\n    },\r\n    audio: {\r\n      soundEffect: 'time_control',\r\n      volume: 1.0,\r\n      echo: true,\r\n      reverb: true,\r\n    },\r\n    duration: 3500,\r\n    display: {\r\n      title: t('special.time_control'),\r\n      subtitle: t('special.time_control.subtitle'),\r\n      color: '#9932cc',\r\n      fontSize: 56,\r\n      animation: 'zoom',\r\n    },\r\n  },\r\n};\r\n\r\n/**\r\n * 特殊招式檢測器\r\n */\r\nexport class SpecialMoveDetector {\r\n  /**\r\n   * 檢測移動是否觸發特殊招式\r\n   */\r\n  static detectSpecialMove(\r\n    position: BoardPosition,\r\n    flippedPositions: BoardPosition[],\r\n    playerScore: number,\r\n    opponentScore: number,\r\n    moveNumber: number,\r\n    totalMoves: number,\r\n  ): SpecialMoveType[] {\r\n    const triggeredMoves: SpecialMoveType[] = [];\r\n    const flipCount = flippedPositions.length;\r\n    const scoreDiff = playerScore - opponentScore;\r\n\r\n    // 檢查每種特殊招式\r\n    for (const [moveType, condition] of Object.entries(SPECIAL_MOVE_CONDITIONS)) {\r\n      if (this.checkCondition(\r\n        moveType as SpecialMoveType,\r\n        condition,\r\n        position,\r\n        flipCount,\r\n        scoreDiff,\r\n        moveNumber,\r\n        totalMoves,\r\n        flippedPositions,\r\n      )) {\r\n        triggeredMoves.push(moveType as SpecialMoveType);\r\n      }\r\n    }\r\n\r\n    return triggeredMoves;\r\n  }\r\n\r\n  /**\r\n   * 檢查單個條件\r\n   */\r\n  private static checkCondition(\r\n    moveType: SpecialMoveType,\r\n    condition: SpecialMoveCondition,\r\n    position: BoardPosition,\r\n    flipCount: number,\r\n    scoreDiff: number,\r\n    moveNumber: number,\r\n    totalMoves: number,\r\n    flippedPositions: BoardPosition[],\r\n  ): boolean {\r\n    // 檢查翻轉數量\r\n    if (condition.minFlipCount && flipCount < condition.minFlipCount) {\r\n      return false;\r\n    }\r\n\r\n    // 檢查分數差距\r\n    if (condition.scoreDifference) {\r\n      const { min, max } = condition.scoreDifference;\r\n      if (scoreDiff < min || scoreDiff > max) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // 檢查位置類型\r\n    if (condition.positionType) {\r\n      if (!this.checkPositionType(position, condition.positionType)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // 檢查時機\r\n    if (condition.timing) {\r\n      if (!this.checkTiming(condition.timing, moveNumber, totalMoves)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // 檢查特殊條件\r\n    if (condition.special) {\r\n      if (!this.checkSpecialCondition(moveType, condition.special, {\r\n        position,\r\n        flipCount,\r\n        scoreDiff,\r\n        moveNumber,\r\n        totalMoves,\r\n        flippedPositions,\r\n      })) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 檢查位置類型\r\n   */\r\n  private static checkPositionType(position: BoardPosition, type: 'corner' | 'edge' | 'center'): boolean {\r\n    const row = Math.floor(position / 8);\r\n    const col = position % 8;\r\n\r\n    switch (type) {\r\n      case 'corner':\r\n        return (row === 0 || row === 7) && (col === 0 || col === 7);\r\n      case 'edge':\r\n        return row === 0 || row === 7 || col === 0 || col === 7;\r\n      case 'center':\r\n        return row >= 2 && row <= 5 && col >= 2 && col <= 5;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 檢查時機\r\n   */\r\n  private static checkTiming(timing: 'early' | 'mid' | 'late', moveNumber: number, totalMoves: number): boolean {\r\n    const progress = moveNumber / Math.max(totalMoves, 60); // 估計最大60步\r\n\r\n    switch (timing) {\r\n      case 'early':\r\n        return progress < 0.3;\r\n      case 'mid':\r\n        return progress >= 0.3 && progress <= 0.7;\r\n      case 'late':\r\n        return progress > 0.7;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 檢查特殊條件\r\n   */\r\n  private static checkSpecialCondition(\r\n    moveType: SpecialMoveType,\r\n    special: string,\r\n    context: {\r\n      position: BoardPosition;\r\n      flipCount: number;\r\n      scoreDiff: number;\r\n      moveNumber: number;\r\n      totalMoves: number;\r\n      flippedPositions: BoardPosition[];\r\n    },\r\n  ): boolean {\r\n    switch (special) {\r\n      case 'near_endgame':\r\n        return context.moveNumber > Math.max(context.totalMoves * 0.8, 40);\r\n\r\n      case 'multiple_directions':\r\n        // 檢查是否在多個方向翻轉棋子\r\n        return this.checkMultipleDirections(context.position, context.flippedPositions);\r\n\r\n      case 'ultra_rare':\r\n        // 超稀有條件：大量翻轉 + 高分差\r\n        return context.flipCount >= 15 && Math.abs(context.scoreDiff) > 10;\r\n\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 檢查是否在多個方向翻轉\r\n   */\r\n  private static checkMultipleDirections(position: BoardPosition, flippedPositions: BoardPosition[]): boolean {\r\n    const directions = [\r\n      [-1, -1], [-1, 0], [-1, 1],\r\n      [0, -1],           [0, 1],\r\n      [1, -1],  [1, 0],  [1, 1],\r\n    ];\r\n\r\n    const row = Math.floor(position / 8);\r\n    const col = position % 8;\r\n    let directionCount = 0;\r\n\r\n    for (const [dr, dc] of directions) {\r\n      if (dr === undefined || dc === undefined) {continue;}\r\n      let found = false;\r\n      let r = row + dr;\r\n      let c = col + dc;\r\n\r\n      while (r >= 0 && r < 8 && c >= 0 && c < 8) {\r\n        const pos = r * 8 + c;\r\n        if (flippedPositions.includes(pos)) {\r\n          found = true;\r\n          break;\r\n        }\r\n        r += dr!;\r\n        c += dc!;\r\n      }\r\n\r\n      if (found) {\r\n        directionCount++;\r\n      }\r\n    }\r\n\r\n    return directionCount >= 3; // 至少3個方向\r\n  }\r\n}\r\n\r\n/**\r\n * 特殊招式管理器\r\n */\r\nexport class SpecialMoveManager {\r\n  private _activeEffects: Map<string, SpecialMoveEffect> = new Map();\r\n  private _eventHandlers: ((effect: SpecialMoveEffect) => void)[] = [];\r\n\r\n  /**\r\n   * 觸發特殊招式\r\n   */\r\n  triggerSpecialMove(moveType: SpecialMoveType, position: { x: number; y: number }): void {\r\n    const effect = SPECIAL_MOVE_EFFECTS[moveType];\r\n\r\n    if (!effect) {\r\n      console.warn(`Unknown special move type: ${moveType}`);\r\n      return;\r\n    }\r\n\r\n    const effectId = `${moveType}_${Date.now()}`;\r\n    this._activeEffects.set(effectId, effect);\r\n\r\n    // 發送事件\r\n    this._emitEffect(effect);\r\n\r\n    // 設定移除時間\r\n    setTimeout(() => {\r\n      this._activeEffects.delete(effectId);\r\n    }, effect.duration);\r\n\r\n    console.log(`🎆 特殊招式觸發: ${effect.display.title}`);\r\n  }\r\n\r\n  /**\r\n   * 獲取活動中的特效\r\n   */\r\n  getActiveEffects(): SpecialMoveEffect[] {\r\n    return Array.from(this._activeEffects.values());\r\n  }\r\n\r\n  /**\r\n   * 清除所有特效\r\n   */\r\n  clearAllEffects(): void {\r\n    this._activeEffects.clear();\r\n  }\r\n\r\n  /**\r\n   * 註冊特效事件處理器\r\n   */\r\n  addEventListener(handler: (effect: SpecialMoveEffect) => void): void {\r\n    this._eventHandlers.push(handler);\r\n  }\r\n\r\n  /**\r\n   * 移除特效事件處理器\r\n   */\r\n  removeEventListener(handler: (effect: SpecialMoveEffect) => void): void {\r\n    const index = this._eventHandlers.indexOf(handler);\r\n    if (index !== -1) {\r\n      this._eventHandlers.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 發送特效事件\r\n   */\r\n  private _emitEffect(effect: SpecialMoveEffect): void {\r\n    this._eventHandlers.forEach(handler => {\r\n      try {\r\n        handler(effect);\r\n      } catch (error) {\r\n        console.error('Special move effect handler error:', error);\r\n      }\r\n    });\r\n  }\r\n}","/**\r\n * Super Reversi - Complete Game Implementation with Particle Effects\r\n *\r\n * Full working version with game logic, AI, animations, and particle effects\r\n */\r\n\r\nimport './style.css';\r\nimport { ParticleSystem, type Grade, type SpecialEffect } from './particle-system';\r\nimport { t, setLanguage, applyTranslations, type Language } from './i18n/index';\r\nimport { ComboSystem, type ComboEvent } from './effects/combo-system';\r\nimport { SpecialMoveDetector } from './effects/special-moves';\r\nimport { UIManager } from './ui/ui-manager';\r\nimport { ScreenType, MenuAction } from './types/ui-types';\r\nimport { ModalService } from './ui/modal-service';\r\n\r\n// Constants\r\nconst BOARD_SIZE = 8;\r\nconst EMPTY = 0;\r\nconst BLACK = 1;\r\nconst WHITE = 2;\r\nconst DIRECTIONS: [number, number][] = [\r\n  [-1, -1], [-1, 0], [-1, 1],\r\n  [0, -1],           [0, 1],\r\n  [1, -1],  [1, 0],  [1, 1],\r\n];\r\n\r\n// Game State\r\ninterface GameState {\r\n  board: number[];\r\n  currentPlayer: number;\r\n  blackScore: number;\r\n  whiteScore: number;\r\n  gameMode: 'pvp' | 'pvc';\r\n  isGameOver: boolean;\r\n  validMoves: Set<number>;\r\n  moveHistory: Array<{position: number, player: number, flipped: number[]}>;\r\n  aiDifficulty: 'easy' | 'medium' | 'hard';\r\n}\r\n\r\nclass SuperReversiGame {\r\n  private container: HTMLElement | null = null;\r\n  private currentScreen: 'menu' | 'game' | 'help' | 'settings' | 'difficulty' = 'menu';\r\n  private gameState: GameState | null = null;\r\n  private isProcessingMove = false;\r\n  private aiThinking = false;\r\n  private particleSystem: ParticleSystem;\r\n  private comboSystem: ComboSystem;\r\n  private uiManager: UIManager | null = null;\r\n  private modalService: ModalService | null = null;\r\n\r\n  // 戰鬥UI元素\r\n  private comboDisplay: HTMLElement | null = null;\r\n  private specialMoveDisplay: HTMLElement | null = null;\r\n\r\n  constructor() {\r\n    console.log('🎮 Super Reversi Battle Enhanced - Initializing...');\r\n    this.particleSystem = new ParticleSystem();\r\n    this.comboSystem = new ComboSystem();\r\n\r\n    // 監聽連擊事件\r\n    this.comboSystem.addEventListener((comboEvent: ComboEvent) => {\r\n      this.handleComboEvent(comboEvent);\r\n    });\r\n  }\r\n\r\n  async initialize(container: HTMLElement): Promise<void> {\r\n    this.container = container;\r\n    const settings = this.getSettings();\r\n    const lang = (settings.language as Language) || 'en';\r\n    setLanguage(lang);\r\n    applyTranslations();\r\n    this.setupUI();\r\n\r\n    // Initialize UI Manager and Modal Service - commented out to avoid conflicts with setupUI\r\n    // this.uiManager = new UIManager();\r\n    // this.uiManager.initialize(container);\r\n    // this.modalService = new ModalService(this.uiManager);\r\n\r\n    // Initialize particle system\r\n    this.particleSystem.initialize(container);\r\n\r\n    // Set particle system enabled state based on settings\r\n    this.particleSystem.setEnabled(settings.animations);\r\n\r\n    this.showMenu();\r\n    console.log('✅ Super Reversi ready!');\r\n  }\r\n\r\n  private setupUI(): void {\r\n    if (!this.container) {return;}\r\n\r\n    this.container.innerHTML = `\r\n      <div class=\"super-reversi-app\">\r\n        <div class=\"game-header\" id=\"game-header\">\r\n          <button class=\"header-back-btn\" id=\"header-back-btn\" style=\"display: none;\">⬅️</button>\r\n          <h1 data-i18n=\"app.title\">${t('app.title')}</h1>\r\n        </div>\r\n\r\n        <!-- Shared Health Bar System -->\r\n        <div class=\"shared-health-bar-container\" id=\"shared-health-bar-container\" style=\"display: none;\">\r\n          <!-- Left Player Section (Black) -->\r\n          <div class=\"player-section left\">\r\n            <div class=\"player-info\">\r\n              <div class=\"player-icon\">⚫</div>\r\n              <div class=\"player-name\">${t('game.black')}</div>\r\n            </div>\r\n            <div class=\"piece-count\" id=\"black-count\">2</div>\r\n          </div>\r\n\r\n          <!-- Shared Health Bar -->\r\n          <div class=\"shared-health-bar\">\r\n            <div class=\"health-fill-black\" id=\"black-fill\"></div>\r\n            <div class=\"health-fill-white\" id=\"white-fill\"></div>\r\n            <div class=\"vs-divider\" id=\"vs-divider\">\r\n              <span class=\"vs-text\">VS</span>\r\n              <div class=\"turn-indicator\" id=\"turn-indicator-shared\">\r\n                <span id=\"current-turn-shared\">${t('game.black')}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Right Player Section (White) -->\r\n          <div class=\"player-section right\">\r\n            <div class=\"piece-count\" id=\"white-count\">2</div>\r\n            <div class=\"player-info\">\r\n              <div class=\"player-name\">${t('game.white')}</div>\r\n              <div class=\"player-icon\">⚪</div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Damage Numbers Container -->\r\n          <div class=\"damage-numbers\" id=\"damage-numbers\"></div>\r\n        </div>\r\n        <!-- 戰鬥UI覆蓋層 -->\r\n        <div class=\"battle-overlay\" id=\"battle-overlay\">\r\n          <div id=\"combo-display\" class=\"combo-display hidden\">\r\n            <div class=\"combo-count\"></div>\r\n            <div class=\"combo-text\"></div>\r\n            <div class=\"combo-multiplier\"></div>\r\n          </div>\r\n          <div id=\"special-move-display\" class=\"special-move-display hidden\">\r\n            <div class=\"special-move-title\"></div>\r\n            <div class=\"special-move-subtitle\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"screen-container\" class=\"screen-container\">\r\n          <!-- Screens render here -->\r\n        </div>\r\n\r\n        <!-- Simple Modal -->\r\n        <div id=\"simple-modal\" class=\"modal-backdrop\" style=\"display: none;\">\r\n          <div class=\"dialog modal\">\r\n            <div class=\"dialog-content\">\r\n              <h3 class=\"dialog-title\" id=\"modal-title\" data-i18n=\"modal.confirm.title\">${t('modal.confirm.title')}</h3>\r\n              <p class=\"dialog-message\" id=\"modal-message\" data-i18n=\"messages.quitConfirm\">${t('messages.quitConfirm')}</p>\r\n              <div class=\"dialog-buttons\">\r\n                <button class=\"dialog-btn primary\" id=\"modal-confirm\" data-i18n=\"modal.confirm\">${t('modal.confirm')}</button>\r\n                <button class=\"dialog-btn secondary\" id=\"modal-cancel\" data-i18n=\"modal.cancel\">${t('modal.cancel')}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // 緩存戰鬥UI元素\r\n    this.comboDisplay = this.container.querySelector('#combo-display');\r\n    this.specialMoveDisplay = this.container.querySelector('#special-move-display');\r\n\r\n    // 設置統一返回按鈕事件\r\n    const headerBackBtn = document.getElementById('header-back-btn');\r\n    if (headerBackBtn) {\r\n      headerBackBtn.addEventListener('click', () => {\r\n        if (this.currentScreen === 'game') {\r\n          this.showSimpleConfirm(\r\n            t('messages.quitConfirm'),\r\n            t('modal.quitConfirm.title'),\r\n          ).then(confirmed => {\r\n            if (confirmed) {this.showMenu();}\r\n          });\r\n        } else {\r\n          this.showMenu();\r\n        }\r\n      });\r\n    }\r\n\r\n    this.addStyles();\r\n\r\n    // Setup header button event listeners\r\n    this.setupHeaderEvents();\r\n  }\r\n\r\n  private setupHeaderEvents(): void {\r\n    // Header settings button\r\n    document.getElementById('header-settings-btn')?.addEventListener('click', () => {\r\n      this.showSettings();\r\n    });\r\n\r\n    // Header back button\r\n    document.getElementById('header-back-btn')?.addEventListener('click', () => {\r\n      this.handleBackButton();\r\n    });\r\n  }\r\n\r\n  private async handleBackButton(): Promise<void> {\r\n    // Handle back button based on current screen\r\n    switch (this.currentScreen) {\r\n      case 'settings':\r\n      case 'help':\r\n        this.showMenu();\r\n        break;\r\n      case 'difficulty':\r\n        this.showMenu();\r\n        break;\r\n      case 'game':\r\n        // Show confirmation before leaving game\r\n        if (this.gameState && !this.gameState.isGameOver) {\r\n          const confirmed = await this.showSimpleConfirm(\r\n            t('messages.leaveGame')\r\n          );\r\n          if (confirmed) {\r\n            this.showMenu();\r\n          }\r\n        } else {\r\n          this.showMenu();\r\n        }\r\n        break;\r\n      default:\r\n        this.showMenu();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 處理連擊事件\r\n   */\r\n  private handleComboEvent(event: ComboEvent): void {\r\n    console.log(`🔥 戰鬥: 連擊事件 - ${event.type}, 計數: ${event.comboCount}, 玩家: ${event.player}`);\r\n\r\n    if (event.type === 'combo_started' || event.type === 'combo_continued') {\r\n      // 🎆 顯示視覺化連擊UI\r\n      this.showComboUI(event.comboCount, event.player, event.comboType);\r\n\r\n      // 顯示舊版訊息作為備用\r\n      this.showMessage(`🔥 ${event.comboCount} 連擊！`);\r\n\r\n      // 觸發螢幕中央鏈鎖效果\r\n      if (this.container) {\r\n        const rect = this.container.getBoundingClientRect();\r\n        const centerX = rect.width / 2;\r\n        const centerY = rect.height / 2;\r\n        this.particleSystem.createChainEffect(centerX, centerY);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 顯示視覺化連擊UI\r\n   */\r\n  private showComboUI(count: number, player: number, comboType: string): void {\r\n    if (!this.comboDisplay) {return;}\r\n\r\n    console.log(`🔥 UI: 顯示連擊UI - ${count} 連擊 (${comboType}) for player ${player}`);\r\n\r\n    const countElement = this.comboDisplay.querySelector('.combo-count') as HTMLElement;\r\n    const textElement = this.comboDisplay.querySelector('.combo-text') as HTMLElement;\r\n    const multiplierElement = this.comboDisplay.querySelector('.combo-multiplier') as HTMLElement;\r\n\r\n    if (countElement) {countElement.textContent = count.toString();}\r\n    if (textElement) {textElement.textContent = t('combo.counter', { count });}\r\n    // 隱藏倍率顯示\r\n    if (multiplierElement) {multiplierElement.style.display = 'none';}\r\n\r\n    // 根據連擊數設定顏色\r\n    const colors = {\r\n      2: '#90ee90',\r\n      3: '#ffa500',\r\n      4: '#ff6347',\r\n      5: '#ff1493',\r\n      6: '#9932cc',\r\n      7: '#ffd700',\r\n    } as const;\r\n    const color = colors[Math.min(count, 7) as keyof typeof colors] || '#ffd700';\r\n    this.comboDisplay.style.background = `linear-gradient(135deg, ${color}, ${color}aa)`;\r\n\r\n    // 顯示動畫\r\n    this.comboDisplay.classList.remove('hidden');\r\n    this.comboDisplay.classList.add('combo-animation');\r\n\r\n    // 3秒後隱藏\r\n    setTimeout(() => {\r\n      this.comboDisplay?.classList.add('hidden');\r\n      this.comboDisplay?.classList.remove('combo-animation');\r\n    }, 3000);\r\n  }\r\n\r\n  /**\r\n   * 檢測並處理特殊招式\r\n   */\r\n  private detectSpecialMoves(position: number, flippedPositions: number[], currentScore: number, opponentScore: number): void {\r\n    console.log(`🔍 檢測特殊招式: 位置=${position}, 翻轉=${flippedPositions.length}個, 分數差=${currentScore - opponentScore}`);\r\n\r\n    const specialMoves = SpecialMoveDetector.detectSpecialMove(\r\n      position,\r\n      flippedPositions, // 傳遞實際的翻轉位置陣列\r\n      currentScore,\r\n      opponentScore,\r\n      this.gameState?.moveHistory.length || 0,\r\n      60,\r\n    );\r\n\r\n    console.log(`✨ 檢測結果: ${specialMoves.length > 0 ? specialMoves.join(', ') : '無特殊招式'}`);\r\n\r\n    if (specialMoves.length > 0) {\r\n      specialMoves.forEach((moveType, index) => {\r\n        setTimeout(() => {\r\n          const title = t(`special.${moveType}`);\r\n\r\n          // 🎆 顯示視覺化特殊招式UI\r\n          this.showSpecialMoveUI(title, moveType);\r\n\r\n          // 顯示舊版訊息作為備用\r\n          this.showMessage(`⚡ ${title}`);\r\n          console.log(`⚡ 特殊招式: ${title}`);\r\n        }, index * 1000);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 顯示視覺化特殊招式UI\r\n   */\r\n  private showSpecialMoveUI(title: string, moveType: string): void {\r\n    if (!this.specialMoveDisplay) {\r\n      console.warn('⚡ UI: specialMoveDisplay 元素不存在');\r\n      return;\r\n    }\r\n\r\n    console.log(`⚡ UI: 顯示特殊招式UI - ${title} (${moveType})`);\r\n\r\n    const titleElement = this.specialMoveDisplay.querySelector('.special-move-title') as HTMLElement;\r\n    const subtitleElement = this.specialMoveDisplay.querySelector('.special-move-subtitle') as HTMLElement;\r\n\r\n    if (titleElement) {\r\n      titleElement.textContent = title;\r\n      console.log(`⚡ UI: 設置標題文字 - ${title}`);\r\n    } else {\r\n      console.warn('⚡ UI: 找不到 .special-move-title 元素');\r\n    }\r\n\r\n    if (subtitleElement) {\r\n      const subtitle = t(`special.${moveType}.subtitle`);\r\n      subtitleElement.textContent = subtitle;\r\n      console.log(`⚡ UI: 設置副標題文字 - ${subtitle}`);\r\n    } else {\r\n      console.warn('⚡ UI: 找不到 .special-move-subtitle 元素');\r\n    }\r\n\r\n    // 根據招式類型設定不同顏色\r\n    const effectColors = {\r\n      corner_master: '#ffd700',\r\n      mega_flip: '#ff4500',\r\n      phoenix_rise: '#ff69b4',\r\n      domination: '#9932cc',\r\n      time_warp: '#8b00ff',\r\n    };\r\n\r\n    const color = effectColors[moveType as keyof typeof effectColors] || '#ffd700';\r\n    if (titleElement) {\r\n      // 直接設置文字顏色而非背景\r\n      titleElement.style.color = color;\r\n      titleElement.style.textShadow = `\r\n        0 0 20px ${color}88,\r\n        0 0 40px ${color}66,\r\n        0 4px 8px rgba(0, 0, 0, 0.8)\r\n      `;\r\n      console.log(`⚡ UI: 設置顏色 - ${color}`);\r\n    }\r\n\r\n    // 顯示動畫\r\n    this.specialMoveDisplay.classList.remove('hidden');\r\n    this.specialMoveDisplay.classList.add('special-move-animation');\r\n    console.log('⚡ UI: 顯示動畫已啟動');\r\n\r\n    // 2.5秒後隱藏\r\n    setTimeout(() => {\r\n      this.specialMoveDisplay?.classList.add('hidden');\r\n      this.specialMoveDisplay?.classList.remove('special-move-animation');\r\n    }, 2500);\r\n  }\r\n\r\n  private refreshUI(): void {\r\n    switch (this.currentScreen) {\r\n      case 'menu':\r\n        this.showMenu();\r\n        break;\r\n      case 'settings':\r\n        this.showSettings();\r\n        break;\r\n      case 'help':\r\n        this.showHelp();\r\n        break;\r\n      case 'game':\r\n        this.showGameScreen();\r\n        this.updateDisplay();\r\n        break;\r\n    }\r\n  }\r\n\r\n  private addStyles(): void {\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      body, html {\r\n        margin: 0;\r\n        padding: 0;\r\n        height: 100%;\r\n        overflow: hidden;\r\n      }\r\n      \r\n      #app {\r\n        width: 100%;\r\n        min-height: 100vh;\r\n        height: 100dvh;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);\r\n      }\r\n      \r\n      #game-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n      \r\n      .super-reversi-app {\r\n        width: 100%;\r\n        height: 100%;\r\n        max-width: 75rem;\r\n        max-height: 56.25rem;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding: 0.5rem;\r\n        font-family: 'Segoe UI', Arial, sans-serif;\r\n        box-sizing: border-box;\r\n      }\r\n      \r\n      .game-header {\r\n        width: 100%;\r\n        max-width: 50rem;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 1.25rem;\r\n        background: rgba(42, 42, 42, 0.9);\r\n        border-radius: 0.75rem;\r\n        margin-bottom: 1.25rem;\r\n        box-shadow: 0 0.25rem 0.75rem rgba(0,0,0,0.3);\r\n        position: relative;\r\n      }\r\n\r\n      .header-back-btn {\r\n        position: absolute;\r\n        left: 1rem;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        width: 40px;\r\n        height: 40px;\r\n        background: rgba(102, 102, 102, 0.9);\r\n        border: none;\r\n        border-radius: 50%;\r\n        font-size: 20px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        cursor: pointer;\r\n        transition: all 0.3s ease;\r\n        z-index: 10;\r\n      }\r\n\r\n      .header-back-btn:hover {\r\n        background: rgba(119, 119, 119, 0.9);\r\n        transform: translateY(-50%) scale(1.1);\r\n      }\r\n      \r\n      .game-header h1 {\r\n        color: #00ff7f;\r\n        margin: 0;\r\n        font-size: 1.75rem;\r\n        text-shadow: 0 0 0.625rem rgba(0,255,127,0.5);\r\n      }\r\n      \r\n      /* Shared Health Bar System */\r\n      .shared-health-bar-container {\r\n        width: 100%;\r\n        max-width: 50rem;\r\n        padding: 1rem 1.25rem;\r\n        background: rgba(42, 42, 42, 0.9);\r\n        border-radius: 0.75rem;\r\n        margin-bottom: 1rem;\r\n        box-shadow: 0 0.25rem 0.75rem rgba(0,0,0,0.3);\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        gap: 1rem;\r\n        position: relative;\r\n      }\r\n\r\n      .player-section {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        gap: 0.5rem;\r\n        min-width: 5rem;\r\n      }\r\n\r\n      .player-section.left {\r\n        align-items: flex-start;\r\n      }\r\n\r\n      .player-section.right {\r\n        align-items: flex-end;\r\n      }\r\n\r\n      .player-info {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 0.5rem;\r\n        color: white;\r\n        font-weight: bold;\r\n      }\r\n\r\n      .player-section.right .player-info {\r\n        flex-direction: row-reverse;\r\n      }\r\n\r\n      .player-name {\r\n        font-size: 0.875rem;\r\n        text-shadow: 0 0 0.5rem rgba(255,255,255,0.3);\r\n      }\r\n\r\n      .player-icon {\r\n        font-size: 1.125rem;\r\n        filter: drop-shadow(0 0 0.5rem rgba(255,255,255,0.3));\r\n      }\r\n\r\n      .piece-count {\r\n        font-size: 1.125rem;\r\n        font-weight: bold;\r\n        color: white;\r\n        text-shadow: 0 0 0.5rem rgba(255,255,255,0.5);\r\n        padding: 0.25rem 0.5rem;\r\n        background: rgba(0,0,0,0.3);\r\n        border-radius: 0.375rem;\r\n        min-width: 2rem;\r\n        text-align: center;\r\n      }\r\n\r\n      /* Shared Health Bar */\r\n      .shared-health-bar {\r\n        position: relative;\r\n        flex: 1;\r\n        height: 32px;\r\n        background: rgba(0,0,0,0.6);\r\n        border-radius: 16px;\r\n        border: 2px solid rgba(255,255,255,0.3);\r\n        overflow: hidden;\r\n        box-shadow: inset 0 2px 4px rgba(0,0,0,0.3);\r\n      }\r\n\r\n      .health-fill-black {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        height: 100%;\r\n        width: 50%;\r\n        background: linear-gradient(90deg, #ff4444 0%, #cc0000 100%);\r\n        box-shadow: 0 0 0.5rem rgba(255,68,68,0.6);\r\n        transition: width 0.5s ease, box-shadow 0.3s ease;\r\n        border-radius: 14px 0 0 14px;\r\n      }\r\n\r\n      .health-fill-white {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        height: 100%;\r\n        width: 50%;\r\n        background: linear-gradient(270deg, #4488ff 0%, #0044cc 100%);\r\n        box-shadow: 0 0 0.5rem rgba(68,136,255,0.6);\r\n        transition: width 0.5s ease, box-shadow 0.3s ease;\r\n        border-radius: 0 14px 14px 0;\r\n      }\r\n\r\n      /* VS Divider */\r\n      .vs-divider {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        gap: 0.125rem;\r\n        z-index: 10;\r\n        transition: left 0.5s ease;\r\n        background: rgba(42, 42, 42, 0.9);\r\n        padding: 0.25rem 0.5rem;\r\n        border-radius: 0.375rem;\r\n        border: 1px solid rgba(255,255,255,0.2);\r\n      }\r\n\r\n      .vs-text {\r\n        color: #ffd700;\r\n        font-size: 0.75rem;\r\n        font-weight: bold;\r\n        text-shadow: 0 0 0.5rem rgba(255,215,0,0.5);\r\n        line-height: 1;\r\n      }\r\n\r\n      .turn-indicator {\r\n        font-size: 0.625rem;\r\n        color: #ccc;\r\n        text-align: center;\r\n        line-height: 1;\r\n      }\r\n\r\n      .turn-indicator span {\r\n        color: #ffd700;\r\n        font-weight: bold;\r\n      }\r\n\r\n      /* Damage Numbers Animation */\r\n      .damage-numbers {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        pointer-events: none;\r\n        z-index: 10;\r\n      }\r\n\r\n      .damage-number {\r\n        position: absolute;\r\n        font-weight: bold;\r\n        font-size: 1.25rem;\r\n        color: #fff;\r\n        text-shadow: 2px 2px 4px rgba(0,0,0,0.8);\r\n        animation: damageFloat 1s ease-out forwards;\r\n        pointer-events: none;\r\n      }\r\n\r\n      .damage-number.positive {\r\n        color: #00ff7f;\r\n      }\r\n\r\n      .damage-number.negative {\r\n        color: #ff4444;\r\n      }\r\n\r\n      @keyframes damageFloat {\r\n        0% {\r\n          opacity: 1;\r\n          transform: translateY(0) scale(1);\r\n        }\r\n        50% {\r\n          opacity: 1;\r\n          transform: translateY(-20px) scale(1.2);\r\n        }\r\n        100% {\r\n          opacity: 0;\r\n          transform: translateY(-40px) scale(0.8);\r\n        }\r\n      }\r\n\r\n      /* Special Effects */\r\n      .health-bar.critical {\r\n        animation: criticalFlash 0.5s ease-in-out infinite alternate;\r\n      }\r\n\r\n      @keyframes criticalFlash {\r\n        0% {\r\n          box-shadow: 0 0 0.75rem rgba(255,68,68,0.3), inset 0 2px 4px rgba(0,0,0,0.3);\r\n        }\r\n        100% {\r\n          box-shadow: 0 0 1.5rem rgba(255,68,68,0.8), inset 0 2px 4px rgba(0,0,0,0.3);\r\n        }\r\n      }\r\n\r\n      .health-bar.shake {\r\n        animation: healthShake 0.3s ease-in-out;\r\n      }\r\n\r\n      @keyframes healthShake {\r\n        0%, 100% { transform: translateX(0); }\r\n        25% { transform: translateX(-3px); }\r\n        75% { transform: translateX(3px); }\r\n      }\r\n\r\n      /* Special Effects for Shared Health Bar */\r\n      .health-fill-black.critical {\r\n        animation: criticalPulse 1s ease-in-out infinite alternate;\r\n      }\r\n\r\n      .health-fill-white.critical {\r\n        animation: criticalPulse 1s ease-in-out infinite alternate;\r\n      }\r\n\r\n      @keyframes criticalPulse {\r\n        0% { opacity: 0.8; }\r\n        100% { opacity: 1; }\r\n      }\r\n\r\n      .health-fill-black.dominant {\r\n        box-shadow: 0 0 1rem rgba(255,68,68,0.8);\r\n      }\r\n\r\n      .health-fill-white.dominant {\r\n        box-shadow: 0 0 1rem rgba(68,136,255,0.8);\r\n      }\r\n\r\n      .shared-health-bar.shake {\r\n        animation: healthShake 0.3s ease-in-out;\r\n      }\r\n\r\n      .shared-health-bar.balanced {\r\n        box-shadow: 0 0 0.5rem rgba(255,215,0,0.6);\r\n        animation: balancedBreathing 2s ease-in-out infinite alternate;\r\n      }\r\n\r\n      .shared-health-bar.dramatic-shift {\r\n        animation: dramaticShift 0.5s ease-in-out;\r\n      }\r\n\r\n      .health-fill-black.pulsing,\r\n      .health-fill-white.pulsing {\r\n        animation: dominantPulse 1s ease-in-out infinite alternate;\r\n      }\r\n\r\n      @keyframes balancedBreathing {\r\n        0% { box-shadow: 0 0 0.5rem rgba(255,215,0,0.6); }\r\n        100% { box-shadow: 0 0 1rem rgba(255,215,0,0.8); }\r\n      }\r\n\r\n      @keyframes dramaticShift {\r\n        0% { transform: scale(1); }\r\n        50% { transform: scale(1.02); }\r\n        100% { transform: scale(1); }\r\n      }\r\n\r\n      @keyframes dominantPulse {\r\n        0% { opacity: 0.9; }\r\n        100% { opacity: 1; }\r\n      }\r\n\r\n      /* Responsive Design for Shared Health Bar */\r\n      @media (max-width: 768px) {\r\n        .shared-health-bar-container {\r\n          width: 100%;\r\n          max-width: 100%;\r\n          margin: 0 0 0.5rem;\r\n          padding: 0 0.5rem;\r\n          z-index: 100;\r\n        }\r\n      }\r\n\r\n      @media (max-width: 480px) {\r\n        .shared-health-bar-container {\r\n          width: 100%;\r\n          max-width: 100%;\r\n          margin: 0 0 0.25rem;\r\n          padding: 0 0.25rem;\r\n          z-index: 100;\r\n        }\r\n      }\r\n\r\n      @media (min-width: 1200px) {\r\n        .shared-health-bar {\r\n          height: 36px;\r\n        }\r\n\r\n        .player-name {\r\n          font-size: 1rem;\r\n        }\r\n\r\n        .piece-count {\r\n          font-size: 1.25rem;\r\n        }\r\n\r\n        .vs-text {\r\n          font-size: 0.875rem;\r\n        }\r\n\r\n        .turn-indicator {\r\n          font-size: 0.75rem;\r\n        }\r\n      }\r\n\r\n      .header-right {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 1rem;\r\n      }\r\n\r\n      .language-select {\r\n        display: block;\r\n        margin: 0 auto;\r\n        padding: 0.5rem 1rem;\r\n        font-size: 1rem;\r\n        text-align: center;\r\n        border-radius: 0.5rem;\r\n        border: 1px solid #666;\r\n        background: #333;\r\n        color: white;\r\n      }\r\n\r\n      .screen-container {\r\n        width: 100%;\r\n        max-width: min(90vw, 56.25rem);\r\n        height: auto;\r\n        flex: 1;\r\n        background: rgba(26, 26, 26, 0.95);\r\n        border-radius: 0.75rem;\r\n        padding: 1rem;\r\n        box-shadow: 0 0.5rem 1.5rem rgba(0,0,0,0.4);\r\n        box-sizing: border-box;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        overflow: hidden;\r\n      }\r\n      \r\n      .menu-screen {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 1.25rem;\r\n        padding: 2.5rem;\r\n        animation: fadeIn 0.5s ease;\r\n        height: 100%;\r\n        width: 100%;\r\n        max-width: 600px;\r\n        margin: 0 auto;\r\n      }\r\n      \r\n      @keyframes fadeIn {\r\n        from { opacity: 0; transform: translateY(1.25rem); }\r\n        to { opacity: 1; transform: translateY(0); }\r\n      }\r\n      \r\n      .menu-title {\r\n        font-size: 2.25rem;\r\n        color: #00ff7f;\r\n        margin-bottom: 1.25rem;\r\n        text-align: center;\r\n        text-shadow: 0 0 1.25rem rgba(0,255,127,0.5);\r\n      }\r\n      \r\n      .menu-button {\r\n        display: block;\r\n        width: 15.625rem;\r\n        margin: 1rem auto;\r\n        padding: 1.125rem 1.875rem;\r\n        font-size: 1.125rem;\r\n        font-weight: bold;\r\n        background: linear-gradient(135deg, #00ff7f, #00cc65);\r\n        color: #1a1a1a;\r\n        border: none;\r\n        border-radius: 0.625rem;\r\n        cursor: pointer;\r\n        transition: all 0.3s ease;\r\n        box-shadow: 0 0.25rem 0.75rem rgba(0,255,127,0.3);\r\n      }\r\n      \r\n      .menu-button:hover {\r\n        transform: translateY(-0.125rem);\r\n        box-shadow: 0 0.375rem 1.25rem rgba(0,255,127,0.5);\r\n      }\r\n      \r\n      .menu-button:active {\r\n        transform: translateY(0);\r\n      }\r\n      \r\n      .difficulty-selector {\r\n        display: flex;\r\n        gap: 0.625rem;\r\n        margin: 1.25rem 0;\r\n      }\r\n      \r\n      .difficulty-button {\r\n        padding: 0.625rem 1.25rem;\r\n        background: #444;\r\n        color: white;\r\n        border: 0.125rem solid transparent;\r\n        border-radius: 0.375rem;\r\n        cursor: pointer;\r\n        transition: all 0.3s;\r\n      }\r\n      \r\n      .difficulty-button.active {\r\n        background: #00ff7f;\r\n        color: #1a1a1a;\r\n        border-color: #00ff7f;\r\n      }\r\n      \r\n      .game-board {\r\n        display: grid;\r\n        grid-template-columns: repeat(8, 1fr);\r\n        grid-template-rows: repeat(8, 1fr);\r\n        gap: 0.125rem;\r\n        background: #1a3d1a;\r\n        padding: 0.625rem;\r\n        border-radius: 0.75rem;\r\n        margin: 0.625rem auto;\r\n        box-shadow: inset 0 0 1.25rem rgba(0,0,0,0.5);\r\n        flex-shrink: 0;\r\n      }\r\n      \r\n      @media (max-height: 43.75rem) {\r\n        .game-board {\r\n          width: min(21.875rem, 60vh);\r\n          height: min(21.875rem, 60vh);\r\n        }\r\n      }\r\n      \r\n      .board-cell {\r\n        background: #2d4a2d;\r\n        border: 0.0625rem solid #1a3d1a;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease;\r\n        position: relative;\r\n      }\r\n      \r\n      .board-cell:hover {\r\n        background: #3a5a3a;\r\n      }\r\n      \r\n      .board-cell.valid-move {\r\n        background: #4a6a4a;\r\n        box-shadow: inset 0 0 0.625rem rgba(0,255,127,0.3);\r\n      }\r\n      \r\n      .board-cell.valid-move::after {\r\n        content: '•';\r\n        color: rgba(0,255,127,0.5);\r\n        font-size: 1.5rem;\r\n        position: absolute;\r\n      }\r\n      \r\n      .board-cell.last-move {\r\n        box-shadow: inset 0 0 0.9375rem rgba(255,215,0,0.5);\r\n      }\r\n\r\n      .mobility-indicator {\r\n        position: absolute;\r\n        top: 0.125rem;\r\n        right: 0.125rem;\r\n        background: rgba(0, 0, 0, 0.9);\r\n        color: white;\r\n        font-size: 0.55rem;\r\n        font-weight: bold;\r\n        padding: 0.125rem 0.2rem;\r\n        border-radius: 0.25rem;\r\n        min-width: 1.2rem;\r\n        text-align: center;\r\n        z-index: 10;\r\n        border: 0.125rem solid;\r\n        font-family: 'Courier New', monospace;\r\n      }\r\n\r\n      .mobility-indicator.mobility-positive {\r\n        border-color: #00ff7f;\r\n        background: rgba(0, 0, 0, 0.85);\r\n        color: #00ff7f;\r\n        box-shadow: 0 0 0.3rem rgba(0, 255, 127, 0.5);\r\n      }\r\n\r\n      .mobility-indicator.mobility-negative {\r\n        border-color: #ff4444;\r\n        background: rgba(0, 0, 0, 0.85);\r\n        color: #ff4444;\r\n        box-shadow: 0 0 0.3rem rgba(255, 68, 68, 0.5);\r\n      }\r\n\r\n      .mobility-indicator.mobility-neutral {\r\n        border-color: #ffaa00;\r\n        background: rgba(0, 0, 0, 0.85);\r\n        color: #ffaa00;\r\n        box-shadow: 0 0 0.3rem rgba(255, 170, 0, 0.5);\r\n      }\r\n      \r\n      .piece {\r\n        width: 85%;\r\n        height: 85%;\r\n        border-radius: 50%;\r\n        transition: all 0.3s ease;\r\n        box-shadow: 0 0.125rem 0.5rem rgba(0,0,0,0.4);\r\n      }\r\n      \r\n      .piece-black {\r\n        background: radial-gradient(circle at 30% 30%, #444, #000);\r\n        border: 0.125rem solid #222;\r\n      }\r\n      \r\n      .piece-white {\r\n        background: radial-gradient(circle at 30% 30%, #fff, #ddd);\r\n        border: 0.125rem solid #ccc;\r\n      }\r\n      \r\n      @keyframes flipPiece {\r\n        0% { transform: rotateY(0deg) scale(1); }\r\n        50% { transform: rotateY(90deg) scale(0.8); }\r\n        100% { transform: rotateY(180deg) scale(1); }\r\n      }\r\n      \r\n      .piece.flipping {\r\n        animation: flipPiece 0.5s ease-in-out;\r\n      }\r\n      \r\n      @keyframes placePiece {\r\n        0% { transform: scale(0) rotate(0deg); opacity: 0; }\r\n        50% { transform: scale(1.2) rotate(180deg); opacity: 1; }\r\n        100% { transform: scale(1) rotate(360deg); opacity: 1; }\r\n      }\r\n      \r\n      .piece.placing {\r\n        animation: placePiece 0.4s ease-out;\r\n      }\r\n      \r\n      .game-screen {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: hidden;\r\n        gap: 0.625rem;\r\n      }\r\n      \r\n      .game-controls {\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        margin-bottom: 1.25rem;\r\n      }\r\n      \r\n      .back-button {\r\n        padding: 0.75rem 1.5rem;\r\n        background: #666;\r\n        color: white;\r\n        border: none;\r\n        border-radius: 0.375rem;\r\n        cursor: pointer;\r\n        font-size: 1rem;\r\n        transition: background 0.3s, transform 0.3s;\r\n        white-space: nowrap; /* Prevent text wrap */\r\n      }\r\n      \r\n      .back-button:hover {\r\n        background: #777;\r\n        transform: translateX(-0.3125rem);\r\n      }\r\n      \r\n      .game-info {\r\n        text-align: center;\r\n        color: #ccc;\r\n        font-size: 0.875rem;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        gap: 0.3125rem;\r\n        flex-shrink: 0;\r\n      }\r\n\r\n      .game-info-compact {\r\n        text-align: center;\r\n        color: #ccc;\r\n        font-size: 0.75rem;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 0.5rem;\r\n        margin-bottom: 1rem;\r\n      }\r\n      \r\n      #ai-status {\r\n        height: 1.25rem;\r\n        font-size: 0.875rem;\r\n      }\r\n      \r\n      .game-over-modal {\r\n        position: fixed;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        background: rgba(42, 42, 42, 0.98);\r\n        padding: 2.5rem;\r\n        border-radius: 1.25rem;\r\n        text-align: center;\r\n        box-shadow: 0 0.625rem 2.5rem rgba(0,0,0,0.5);\r\n        z-index: 1000;\r\n        animation: modalAppear 0.3s ease;\r\n      }\r\n      \r\n      @keyframes modalAppear {\r\n        from { opacity: 0; transform: translate(-50%, -50%) scale(0.8); }\r\n        to { opacity: 1; transform: translate(-50%, -50%) scale(1); }\r\n      }\r\n      \r\n      .game-over-title {\r\n        font-size: 2rem;\r\n        color: #00ff7f;\r\n        margin-bottom: 1.25rem;\r\n      }\r\n      \r\n      .final-scores {\r\n        font-size: 1.5rem;\r\n        color: white;\r\n        margin: 1.25rem 0;\r\n      }\r\n      \r\n      .modal-buttons {\r\n        display: flex;\r\n        gap: 1.25rem;\r\n        justify-content: center;\r\n        margin-top: 1.875rem;\r\n      }\r\n      \r\n      .ai-thinking {\r\n        display: inline-block;\r\n        color: #ffd700;\r\n        font-style: italic;\r\n        animation: pulse 1s infinite;\r\n      }\r\n      \r\n      @keyframes pulse {\r\n        0%, 100% { opacity: 1; }\r\n        50% { opacity: 0.5; }\r\n      }\r\n      \r\n      .settings-screen {\r\n        color: white;\r\n        flex: 1;\r\n        overflow-y: auto;\r\n        padding-right: 0.625rem;\r\n        width: 100%;\r\n        max-width: 600px;\r\n        margin: 0 auto;\r\n      }\r\n      \r\n      .settings-group {\r\n        margin: 1.5625rem 0;\r\n        text-align: center;\r\n      }\r\n      \r\n      .settings-group h3 {\r\n        color: #00ff7f;\r\n        margin-bottom: 0.9375rem;\r\n      }\r\n\r\n      .settings-group label {\r\n        display: block;\r\n        text-align: center;\r\n        margin: 0.5rem 0;\r\n        font-size: 1.25rem;\r\n      }\r\n      \r\n      .settings-screen label {\r\n        display: block;\r\n        margin: 0.625rem 0;\r\n        font-size: 1rem;\r\n        cursor: pointer;\r\n      }\r\n      \r\n      .settings-screen input[type=\"checkbox\"] {\r\n        margin-right: 0.625rem;\r\n        cursor: pointer;\r\n      }\r\n      \r\n      .help-screen {\r\n        color: #ccc;\r\n        line-height: 1.6;\r\n        flex: 1;\r\n        overflow-y: auto; /* Allow scrolling if content is too long */\r\n        padding-right: 0.625rem;\r\n        padding-left: 1rem;\r\n        width: 100%;\r\n        max-width: 600px;\r\n        margin: 0 auto;\r\n      }\r\n      \r\n      .help-screen h2 {\r\n        color: #00ff7f;\r\n        margin-bottom: 0.9375rem;\r\n        font-size: 1.5rem;\r\n      }\r\n      \r\n      .help-screen h3 {\r\n        color: #ffd700;\r\n        margin-top: 0.9375rem;\r\n        margin-bottom: 0.5rem;\r\n        font-size: 1.125rem;\r\n      }\r\n      \r\n      .help-screen ul {\r\n        display: block;\r\n        text-align: left;\r\n        margin: 0 0 0.625rem;\r\n        padding-left: 1.5rem;\r\n      }\r\n      \r\n      .help-screen li {\r\n        margin: 0.3125rem 0;\r\n        font-size: 0.875rem;\r\n      }\r\n      \r\n      .help-screen p {\r\n        margin: 0.5rem 0;\r\n        font-size: 0.875rem;\r\n      }\r\n      \r\n      /* Custom scrollbar for help screen */\r\n      .help-screen::-webkit-scrollbar {\r\n        width: 0.5rem;\r\n      }\r\n      \r\n      .help-screen::-webkit-scrollbar-track {\r\n        background: rgba(255, 255, 255, 0.1);\r\n        border-radius: 0.25rem;\r\n      }\r\n      \r\n      .help-screen::-webkit-scrollbar-thumb {\r\n        background: rgba(0, 255, 127, 0.5);\r\n        border-radius: 0.25rem;\r\n      }\r\n      \r\n      .help-screen::-webkit-scrollbar-thumb:hover {\r\n        background: rgba(0, 255, 127, 0.7);\r\n      }\r\n\r\n      /* ========== 戰鬥UI樣式 ========== */\r\n\r\n      .battle-overlay {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        pointer-events: none;\r\n        z-index: 9999;\r\n        font-family: 'Orbitron', 'Arial', sans-serif;\r\n      }\r\n\r\n      .combo-display {\r\n        position: absolute;\r\n        top: 80px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        padding: 20px 40px;\r\n        border-radius: 25px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 20px;\r\n        background: linear-gradient(135deg, #ff6b6b, #ff8e8e);\r\n        box-shadow: 0 0 60px rgba(255, 107, 107, 0.9), 0 10px 40px rgba(0, 0, 0, 0.7);\r\n        transition: all 0.3s ease;\r\n      }\r\n\r\n      .combo-display.hidden {\r\n        display: none;\r\n      }\r\n\r\n      .combo-display.combo-animation {\r\n        animation: combo-bounce 0.6s ease;\r\n      }\r\n\r\n      .combo-count {\r\n        font-size: 72px;\r\n        font-weight: bold;\r\n        color: #fff;\r\n        text-shadow: 0 4px 20px rgba(0, 0, 0, 0.8), 0 0 30px currentColor;\r\n      }\r\n\r\n      .combo-text {\r\n        font-size: 32px;\r\n        color: #fff;\r\n        font-weight: bold;\r\n        text-shadow: 0 4px 20px rgba(0, 0, 0, 0.8), 0 0 30px currentColor;\r\n      }\r\n\r\n      .combo-multiplier {\r\n        font-size: 28px;\r\n        color: #ffeb3b;\r\n        font-weight: bold;\r\n        background: rgba(0, 0, 0, 0.3);\r\n        padding: 8px 16px;\r\n        border-radius: 20px;\r\n        text-shadow: 0 4px 20px rgba(0, 0, 0, 0.8), 0 0 30px currentColor;\r\n      }\r\n\r\n      .special-move-display {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        text-align: center;\r\n        z-index: 10000;\r\n      }\r\n\r\n      .special-move-display.hidden {\r\n        display: none;\r\n      }\r\n\r\n      .special-move-display.special-move-animation {\r\n        animation: special-move-intro 1.2s ease;\r\n      }\r\n\r\n      .special-move-title {\r\n        font-size: 64px;\r\n        font-weight: bold;\r\n        color: #ffd700;\r\n        text-shadow:\r\n          0 0 20px rgba(255, 215, 0, 0.8),\r\n          0 0 40px rgba(255, 215, 0, 0.6),\r\n          0 4px 8px rgba(0, 0, 0, 0.8);\r\n        margin-bottom: 10px;\r\n        letter-spacing: 2px;\r\n        animation: special-title-glow 2s ease-in-out infinite alternate;\r\n      }\r\n\r\n      .special-move-subtitle {\r\n        font-size: 28px;\r\n        color: #ffffff;\r\n        text-shadow:\r\n          0 0 15px rgba(255, 255, 255, 0.8),\r\n          0 4px 8px rgba(0, 0, 0, 0.8);\r\n        letter-spacing: 1px;\r\n        opacity: 0.9;\r\n      }\r\n\r\n      /* 戰鬥動畫定義 */\r\n      @keyframes combo-bounce {\r\n        0% {\r\n          transform: translateX(-50%) scale(0.8);\r\n          opacity: 0;\r\n        }\r\n        50% {\r\n          transform: translateX(-50%) scale(1.1);\r\n        }\r\n        100% {\r\n          transform: translateX(-50%) scale(1);\r\n          opacity: 1;\r\n        }\r\n      }\r\n\r\n      @keyframes special-move-intro {\r\n        0% {\r\n          transform: translate(-50%, -50%) scale(0);\r\n          opacity: 0;\r\n        }\r\n        50% {\r\n          transform: translate(-50%, -50%) scale(1.2);\r\n        }\r\n        100% {\r\n          transform: translate(-50%, -50%) scale(1);\r\n          opacity: 1;\r\n        }\r\n      }\r\n\r\n      @keyframes special-title-glow {\r\n        0% {\r\n          text-shadow:\r\n            0 0 20px rgba(255, 215, 0, 0.8),\r\n            0 0 40px rgba(255, 215, 0, 0.6),\r\n            0 4px 8px rgba(0, 0, 0, 0.8);\r\n        }\r\n        100% {\r\n          text-shadow:\r\n            0 0 30px rgba(255, 215, 0, 1.0),\r\n            0 0 60px rgba(255, 215, 0, 0.8),\r\n            0 4px 8px rgba(0, 0, 0, 0.8);\r\n        }\r\n      }\r\n\r\n      /* 手機版響應式設計 */\r\n      @media (max-width: 768px) {\r\n        .super-reversi-app {\r\n          padding: 0 !important;\r\n          overflow-y: auto;\r\n          overflow-x: hidden;\r\n        }\r\n\r\n        .screen-container {\r\n          max-width: 100% !important;\r\n          padding: 0.5rem !important;\r\n          margin-top: 0.5rem !important;\r\n        }\r\n\r\n        .game-board {\r\n          width: calc(100vw - 1rem) !important;\r\n          height: calc(100vw - 1rem) !important;\r\n          max-height: calc(100vh - 14rem) !important;\r\n          padding: 2px !important;\r\n          margin: 0.5rem auto 0 auto !important;\r\n        }\r\n\r\n        .header-back-btn {\r\n          width: 35px !important;\r\n          height: 35px !important;\r\n          font-size: 18px !important;\r\n        }\r\n      }\r\n\r\n      @media (max-width: 480px) {\r\n        .screen-container {\r\n          padding: 0.25rem !important;\r\n          margin-top: 0.25rem !important;\r\n        }\r\n\r\n        .game-board {\r\n          width: calc(100vw - 0.5rem) !important;\r\n          height: calc(100vw - 0.5rem) !important;\r\n          max-height: calc(100vh - 12rem) !important;\r\n          margin: 0.5rem auto 0 auto !important;\r\n        }\r\n\r\n        .header-back-btn {\r\n          width: 30px !important;\r\n          height: 30px !important;\r\n          font-size: 16px !important;\r\n        }\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  // ===== MENU SCREENS =====\r\n\r\n  private showMenu(): void {\r\n    const screenContainer = document.getElementById('screen-container');\r\n    if (!screenContainer) {return;}\r\n\r\n    this.currentScreen = 'menu';\r\n    const header = document.getElementById('game-header');\r\n    const headerBackBtn = document.getElementById('header-back-btn');\r\n    const sharedHealthBarContainer = document.getElementById('shared-health-bar-container');\r\n\r\n    if (header) {header.style.display = 'flex';}\r\n    if (headerBackBtn) {headerBackBtn.style.display = 'none';}\r\n    if (sharedHealthBarContainer) {sharedHealthBarContainer.style.display = 'none';}\r\n\r\n    // 清理遊戲狀態顯示\r\n    const blackScore = document.getElementById('black-score');\r\n    const whiteScore = document.getElementById('white-score');\r\n    const currentTurn = document.getElementById('current-turn');\r\n    if (blackScore) {blackScore.textContent = '';}\r\n    if (whiteScore) {whiteScore.textContent = '';}\r\n    if (currentTurn) {currentTurn.textContent = '';}\r\n\r\n    // 重置遊戲狀態\r\n    this.gameState = null;\r\n\r\n    screenContainer.innerHTML = `\r\n      <div class=\"menu-screen\">\r\n        <h2 class=\"menu-title\">${t('menu.chooseMode')}</h2>\r\n        <button class=\"menu-button\" id=\"pvp-btn\">👥 ${t('menu.pvp')}</button>\r\n        <button class=\"menu-button\" id=\"pvc-btn\">🤖 ${t('menu.pvc')}</button>\r\n        <button class=\"menu-button\" id=\"menu-settings-btn\">⚙️ ${t('menu.settings')}</button>\r\n        <button class=\"menu-button\" id=\"help-btn\">❓ ${t('menu.help')}</button>\r\n      </div>\r\n    `;\r\n\r\n    document.getElementById('pvp-btn')?.addEventListener('click', () => {\r\n      this.startNewGame('pvp');\r\n    });\r\n\r\n    document.getElementById('pvc-btn')?.addEventListener('click', () => {\r\n      this.showAIDifficultyMenu();\r\n    });\r\n\r\n    document.getElementById('menu-settings-btn')?.addEventListener('click', () => {\r\n      this.showSettings();\r\n    });\r\n\r\n    document.getElementById('help-btn')?.addEventListener('click', () => {\r\n      this.showHelp();\r\n    });\r\n  }\r\n\r\n  private showAIDifficultyMenu(): void {\r\n    const screenContainer = document.getElementById('screen-container');\r\n    if (!screenContainer) {return;}\r\n\r\n    this.currentScreen = 'difficulty';\r\n    const headerBackBtn = document.getElementById('header-back-btn');\r\n    if (headerBackBtn) {headerBackBtn.style.display = 'flex';}\r\n\r\n    screenContainer.innerHTML = `\r\n      <div class=\"menu-screen\">\r\n        <h2 class=\"menu-title\">${t('menu.selectDifficulty')}</h2>\r\n        <div class=\"difficulty-selector\">\r\n          <button class=\"difficulty-button active\" data-diff=\"easy\">${t('menu.easy')}</button>\r\n          <button class=\"difficulty-button\" data-diff=\"medium\">${t('menu.medium')}</button>\r\n          <button class=\"difficulty-button\" data-diff=\"hard\">${t('menu.hard')}</button>\r\n        </div>\r\n        <p style=\"color: #ccc; text-align: center; margin: 1.25rem 0;\">\r\n          <span id=\"diff-desc\">${t('menu.easyDesc')}</span>\r\n        </p>\r\n        <button class=\"menu-button\" id=\"start-ai-btn\">${t('menu.startGame')}</button>\r\n      </div>\r\n    `;\r\n\r\n    let selectedDifficulty: 'easy' | 'medium' | 'hard' = 'easy';\r\n\r\n    const diffButtons = document.querySelectorAll('.difficulty-button');\r\n    const diffDesc = document.getElementById('diff-desc');\r\n\r\n    const descriptions = {\r\n      easy: t('menu.easyDesc'),\r\n      medium: t('menu.mediumDesc'),\r\n      hard: t('menu.hardDesc'),\r\n    } as const;\r\n\r\n    diffButtons.forEach(btn => {\r\n      btn.addEventListener('click', () => {\r\n        diffButtons.forEach(b => b.classList.remove('active'));\r\n        btn.classList.add('active');\r\n        selectedDifficulty = btn.getAttribute('data-diff') as any;\r\n        if (diffDesc) {\r\n          diffDesc.textContent = descriptions[selectedDifficulty];\r\n        }\r\n      });\r\n    });\r\n\r\n    document.getElementById('start-ai-btn')?.addEventListener('click', () => {\r\n      this.startNewGame('pvc', selectedDifficulty);\r\n    });\r\n  }\r\n\r\n  private showSettings(): void {\r\n    const screenContainer = document.getElementById('screen-container');\r\n    if (!screenContainer) {return;}\r\n\r\n    this.currentScreen = 'settings';\r\n    const headerBackBtn = document.getElementById('header-back-btn');\r\n    if (headerBackBtn) {headerBackBtn.style.display = 'flex';}\r\n\r\n    screenContainer.innerHTML = `\r\n      <div class=\"settings-screen\">\r\n        <h2 style=\"color: #00ff7f; margin-bottom: 1.25rem;\">${t('settings.title')}</h2>\r\n\r\n        <div class=\"settings-group\">\r\n          <h3>${t('settings.language')}</h3>\r\n          <select id=\"language-select\" class=\"language-select\">\r\n            <option value=\"en\">English</option>\r\n            <option value=\"zh-Hant\">繁體中文</option>\r\n            <option value=\"zh-Hans\">简体中文</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"settings-group\">\r\n          <h3>${t('settings.visual')}</h3>\r\n          <label>\r\n            <input type=\"checkbox\" id=\"show-valid\" checked> ${t('settings.showValid')}\r\n          </label>\r\n          <label>\r\n            <input type=\"checkbox\" id=\"show-last\" checked> ${t('settings.showLast')}\r\n          </label>\r\n          <label>\r\n            <input type=\"checkbox\" id=\"show-mobility\"> ${t('settings.showMobility')}\r\n          </label>\r\n          <label>\r\n            <input type=\"checkbox\" id=\"animations\" checked> ${t('settings.animations')}\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"settings-group\">\r\n          <h3>${t('settings.game')}</h3>\r\n          <label>\r\n            <input type=\"checkbox\" id=\"auto-pass\" checked> ${t('settings.autoPass')}\r\n          </label>\r\n          <label>\r\n            <input type=\"checkbox\" id=\"confirm-moves\"> ${t('settings.confirm')}\r\n          </label>\r\n        </div>\r\n\r\n        <button class=\"menu-button\" id=\"save-settings\" style=\"margin-top: 1.25rem;\">\r\n          ${t('settings.save')}\r\n        </button>\r\n      </div>\r\n    `;\r\n\r\n    const settings = this.getSettings();\r\n    (document.getElementById('language-select') as HTMLSelectElement).value = settings.language || 'en';\r\n    (document.getElementById('show-valid') as HTMLInputElement).checked = settings.showValid;\r\n    (document.getElementById('show-last') as HTMLInputElement).checked = settings.showLast;\r\n    (document.getElementById('show-mobility') as HTMLInputElement).checked = settings.showMobility;\r\n    (document.getElementById('animations') as HTMLInputElement).checked = settings.animations;\r\n    (document.getElementById('auto-pass') as HTMLInputElement).checked = settings.autoPass;\r\n    (document.getElementById('confirm-moves') as HTMLInputElement).checked = settings.confirmMoves;\r\n\r\n    document.getElementById('save-settings')?.addEventListener('click', () => {\r\n      const lang = (document.getElementById('language-select') as HTMLSelectElement).value as Language;\r\n      const settings = {\r\n        language: lang,\r\n        showValid: (document.getElementById('show-valid') as HTMLInputElement)?.checked,\r\n        showLast: (document.getElementById('show-last') as HTMLInputElement)?.checked,\r\n        showMobility: (document.getElementById('show-mobility') as HTMLInputElement)?.checked,\r\n        animations: (document.getElementById('animations') as HTMLInputElement)?.checked,\r\n        autoPass: (document.getElementById('auto-pass') as HTMLInputElement)?.checked,\r\n        confirmMoves: (document.getElementById('confirm-moves') as HTMLInputElement)?.checked,\r\n      };\r\n      localStorage.setItem('reversi-settings', JSON.stringify(settings));\r\n      localStorage.setItem('language', lang);\r\n      setLanguage(lang);\r\n      applyTranslations();\r\n\r\n      // Update particle system enabled state when animations setting changes\r\n      this.particleSystem.setEnabled(settings.animations);\r\n\r\n      if (this.modalService) {\r\n        this.modalService.showSuccess(\r\n          t('settings.saved'),\r\n          t('modal.settingsSaved.title'),\r\n        );\r\n      }\r\n      this.refreshUI();\r\n    });\r\n  }\r\n\r\n  private showHelp(): void {\r\n    const screenContainer = document.getElementById('screen-container');\r\n    if (!screenContainer) {return;}\r\n\r\n    this.currentScreen = 'help';\r\n    const headerBackBtn = document.getElementById('header-back-btn');\r\n    if (headerBackBtn) {headerBackBtn.style.display = 'flex';}\r\n\r\n    screenContainer.innerHTML = `\r\n      <div class=\"help-screen\">\r\n        <h2>${t('help.title')}</h2>\r\n\r\n        <h3>${t('help.objectiveTitle')}</h3>\r\n        <p>${t('help.objectiveText')}</p>\r\n\r\n        <h3>${t('help.rulesTitle')}</h3>\r\n        <ul>\r\n          <li>${t('help.rules1')}</li>\r\n          <li>${t('help.rules2')}</li>\r\n          <li>${t('help.rules3')}</li>\r\n          <li>${t('help.rules4')}</li>\r\n          <li>${t('help.rules5')}</li>\r\n          <li>${t('help.rules6')}</li>\r\n        </ul>\r\n\r\n        <h3>${t('help.strategyTitle')}</h3>\r\n        <ul>\r\n          <li>${t('help.strategy1')}</li>\r\n          <li>${t('help.strategy2')}</li>\r\n          <li>${t('help.strategy3')}</li>\r\n          <li>${t('help.strategy4')}</li>\r\n        </ul>\r\n\r\n        <h3>${t('help.controlsTitle')}</h3>\r\n        <ul>\r\n          <li>${t('help.controls1')}</li>\r\n          <li>${t('help.controls2')}</li>\r\n          <li>${t('help.controls3')}</li>\r\n        </ul>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  // ===== GAME LOGIC =====\r\n\r\n  private startNewGame(mode: 'pvp' | 'pvc', aiDifficulty: 'easy' | 'medium' | 'hard' = 'easy'): void {\r\n    // Initialize game state\r\n    this.gameState = {\r\n      board: this.createInitialBoard(),\r\n      currentPlayer: BLACK,\r\n      blackScore: 2,\r\n      whiteScore: 2,\r\n      gameMode: mode,\r\n      isGameOver: false,\r\n      validMoves: new Set(),\r\n      moveHistory: [],\r\n      aiDifficulty: aiDifficulty,\r\n    };\r\n\r\n    // Calculate initial valid moves\r\n    this.updateValidMoves();\r\n\r\n    // Show game screen\r\n    this.showGameScreen();\r\n\r\n    // Update display\r\n    this.updateDisplay();\r\n  }\r\n\r\n  private createInitialBoard(): number[] {\r\n    const board = new Array(64).fill(EMPTY);\r\n    board[27] = WHITE;\r\n    board[28] = BLACK;\r\n    board[35] = BLACK;\r\n    board[36] = WHITE;\r\n    return board;\r\n  }\r\n\r\n  private showGameScreen(): void {\r\n    const screenContainer = document.getElementById('screen-container');\r\n    if (!screenContainer || !this.gameState) {return;}\r\n\r\n    this.currentScreen = 'game';\r\n    const header = document.getElementById('game-header');\r\n    const headerBackBtn = document.getElementById('header-back-btn');\r\n    const sharedHealthBarContainer = document.getElementById('shared-health-bar-container');\r\n\r\n    if (header) {header.style.display = 'flex';}\r\n    if (headerBackBtn) {headerBackBtn.style.display = 'flex';}\r\n    if (sharedHealthBarContainer) {sharedHealthBarContainer.style.display = 'flex';}\r\n\r\n    const modeText = this.gameState.gameMode === 'pvp'\r\n      ? t('game.pvp')\r\n      : `${t('game.pvai')} (${t('difficulty.' + this.gameState.aiDifficulty)})`;\r\n\r\n    screenContainer.innerHTML = `\r\n      <div class=\"game-screen\">\r\n        <div class=\"game-info-compact\">\r\n          <div>${t('game.mode')}: ${modeText}</div>\r\n          <div id=\"ai-status\"></div>\r\n        </div>\r\n        <div class=\"game-board\" id=\"game-board\"></div>\r\n        <div id=\"game-over-modal\" style=\"display: none;\"></div>\r\n      </div>\r\n    `;\r\n\r\n    // Create board cells\r\n    this.createBoardCells();\r\n  }\r\n\r\n  private createBoardCells(): void {\r\n    const board = document.getElementById('game-board');\r\n    if (!board || !this.gameState) {return;}\r\n\r\n    board.innerHTML = '';\r\n\r\n    for (let i = 0; i < 64; i++) {\r\n      const cell = document.createElement('div');\r\n      cell.className = 'board-cell';\r\n      cell.dataset.position = i.toString();\r\n\r\n      // Add click handler\r\n      cell.addEventListener('click', () => {\r\n        if (!this.isProcessingMove && !this.aiThinking) {\r\n          this.handleCellClick(i);\r\n        }\r\n      });\r\n\r\n      board.appendChild(cell);\r\n    }\r\n\r\n    // Render initial pieces\r\n    this.renderBoard();\r\n  }\r\n\r\n  private renderBoard(): void {\r\n    if (!this.gameState) {return;}\r\n\r\n    const settings = this.getSettings();\r\n\r\n    // Calculate mobility for all valid moves if setting is enabled\r\n    const mobilityMap = new Map<number, { player: number; opponent: number }>();\r\n    if (settings.showMobility && this.gameState.validMoves.size > 0) {\r\n      for (const position of this.gameState.validMoves) {\r\n        const mobility = this.calculateMoveMobility(position, this.gameState.currentPlayer);\r\n        mobilityMap.set(position, mobility);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < 64; i++) {\r\n      const cell = document.querySelector(`[data-position=\"${i}\"]`) as HTMLElement;\r\n      if (!cell) {continue;}\r\n\r\n      // Clear cell classes\r\n      cell.className = 'board-cell';\r\n\r\n      // Clear cell content first\r\n      cell.innerHTML = '';\r\n\r\n      // Add piece if exists\r\n      if (this.gameState.board[i] !== EMPTY) {\r\n        const piece = document.createElement('div');\r\n        piece.className = `piece ${this.gameState.board[i] === BLACK ? 'piece-black' : 'piece-white'}`;\r\n        cell.appendChild(piece);\r\n      }\r\n\r\n      // Show valid moves\r\n      if (settings.showValid && this.gameState.validMoves.has(i)) {\r\n        cell.classList.add('valid-move');\r\n\r\n        // Show mobility if enabled\r\n        if (settings.showMobility && mobilityMap.has(i)) {\r\n          const mobility = mobilityMap.get(i)!;\r\n          const mobilityIndicator = document.createElement('div');\r\n          mobilityIndicator.className = 'mobility-indicator';\r\n\r\n          // Display as subtraction result and color code based on mobility difference\r\n          const difference = mobility.player - mobility.opponent;\r\n          mobilityIndicator.textContent = difference > 0 ? `+${difference}` : `${difference}`;\r\n          if (difference > 0) {\r\n            mobilityIndicator.classList.add('mobility-positive');\r\n          } else if (difference < 0) {\r\n            mobilityIndicator.classList.add('mobility-negative');\r\n          } else {\r\n            mobilityIndicator.classList.add('mobility-neutral');\r\n          }\r\n\r\n          cell.appendChild(mobilityIndicator);\r\n        }\r\n      }\r\n\r\n      // Show last move\r\n      if (settings.showLast && this.gameState.moveHistory.length > 0) {\r\n        const lastMove = this.gameState.moveHistory[this.gameState.moveHistory.length - 1];\r\n        if (lastMove && lastMove.position === i) {\r\n          cell.classList.add('last-move');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private getSettings(): any {\r\n    const stored = localStorage.getItem('reversi-settings');\r\n    if (stored) {\r\n      return JSON.parse(stored);\r\n    }\r\n    const lang = (localStorage.getItem('language') as Language) || 'en';\r\n    return {\r\n      language: lang,\r\n      showValid: true,\r\n      showLast: true,\r\n      showMobility: false,\r\n      animations: true,\r\n      autoPass: true,\r\n      confirmMoves: false,\r\n    };\r\n  }\r\n\r\n  private async handleCellClick(position: number): Promise<void> {\r\n    if (!this.gameState || this.gameState.isGameOver) {return;}\r\n\r\n    // Check if it's a valid move\r\n    if (!this.gameState.validMoves.has(position)) {\r\n      console.log(t('messages.invalidMove'));\r\n      return;\r\n    }\r\n\r\n    // For PvC mode with confirmMoves setting\r\n    const settings = this.getSettings();\r\n    if (this.gameState.gameMode === 'pvc' &&\r\n        this.gameState.currentPlayer === BLACK &&\r\n        settings.confirmMoves) {\r\n      const confirmed = await this.showSimpleConfirm(\r\n        t('messages.moveConfirm'),\r\n        t('modal.moveConfirm.title'),\r\n      );\r\n      if (!confirmed) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Make the move\r\n    this.makeMove(position);\r\n  }\r\n\r\n  private makeMove(position: number): void {\r\n    if (!this.gameState) {return;}\r\n\r\n    this.isProcessingMove = true;\r\n\r\n    // Get settings for animation checks\r\n    const settings = this.getSettings();\r\n\r\n    // Get pieces to flip\r\n    const toFlip = this.getFlippedPieces(position, this.gameState.currentPlayer);\r\n\r\n    // Analyze game situation for special effects\r\n    const specialEffects: SpecialEffect = {\r\n      corner: position === 0 || position === 7 || position === 56 || position === 63,\r\n      edge: this.isEdgePosition(position),\r\n      massive: toFlip.length >= 10,\r\n      chain: this.isChainMove(toFlip),\r\n      comeback: this.isComebackMove(),\r\n      domination: this.isDominationMove(),\r\n    };\r\n\r\n    // Calculate move grade with special effects\r\n    const grade = this.particleSystem.calculateGrade(toFlip.length, position, specialEffects);\r\n\r\n    // Get cell position for particle effects\r\n    const cell = document.querySelector(`[data-position=\"${position}\"]`) as HTMLElement;\r\n    if (cell) {\r\n      const rect = cell.getBoundingClientRect();\r\n      const containerRect = this.container!.getBoundingClientRect();\r\n      const x = rect.left + rect.width / 2 - containerRect.left;\r\n      const y = rect.top + rect.height / 2 - containerRect.top;\r\n\r\n      // Calculate flipped positions in pixel coordinates for directional particles\r\n      const flippedPixelPositions = toFlip.map(pos => {\r\n        const flippedCell = document.querySelector(`[data-position=\"${pos}\"]`) as HTMLElement;\r\n        if (flippedCell) {\r\n          const flippedRect = flippedCell.getBoundingClientRect();\r\n          return {\r\n            x: flippedRect.left + flippedRect.width / 2 - containerRect.left,\r\n            y: flippedRect.top + flippedRect.height / 2 - containerRect.top,\r\n          };\r\n        }\r\n        return { x, y }; // Fallback to source position\r\n      });\r\n\r\n      // Trigger particle effect based on grade with special effects and directional info\r\n      if (settings.animations) {\r\n        this.particleSystem.triggerMoveEffect(x, y, grade, toFlip.length, specialEffects, flippedPixelPositions);\r\n\r\n        // Additional special effects\r\n        if (specialEffects.chain) {\r\n          this.particleSystem.createChainEffect(x, y);\r\n        }\r\n\r\n        // Show grade indicator\r\n        this.showGradeIndicator(grade, x, y);\r\n      }\r\n    }\r\n\r\n    // Record move in history\r\n    this.gameState.moveHistory.push({\r\n      position: position,\r\n      player: this.gameState.currentPlayer,\r\n      flipped: toFlip,\r\n    });\r\n\r\n    // Add screen shake for higher grades\r\n    this.triggerScreenShake(grade);\r\n\r\n    // Place the piece with animation\r\n    this.gameState.board[position] = this.gameState.currentPlayer;\r\n    if (cell) {\r\n      const piece = document.createElement('div');\r\n      piece.className = `piece ${this.gameState.currentPlayer === BLACK ? 'piece-black' : 'piece-white'} placing`;\r\n      cell.innerHTML = '';\r\n      cell.appendChild(piece);\r\n    }\r\n\r\n    // Flip pieces with animation and particles\r\n    if (settings.animations) {\r\n      setTimeout(() => {\r\n        this.flipPiecesWithEffects(toFlip, grade);\r\n        // Adjust timeout based on number of pieces being flipped\r\n        const flipDuration = toFlip.length * 80 + 300;\r\n        setTimeout(() => {\r\n          this.afterMove();\r\n        }, flipDuration);\r\n      }, 200);\r\n    } else {\r\n      this.flipPiecesWithEffects(toFlip, grade);\r\n      this.afterMove();\r\n    }\r\n  }\r\n\r\n  private showGradeIndicator(grade: Grade, x: number, y: number): void {\r\n    // Create a temporary grade indicator\r\n    const indicator = document.createElement('div');\r\n    indicator.style.position = 'absolute';\r\n    indicator.style.left = `${x}px`;\r\n    indicator.style.top = `${y - 50}px`;\r\n    indicator.style.transform = 'translateX(-50%)';\r\n    indicator.style.fontSize = '3rem';\r\n    indicator.style.fontWeight = 'bold';\r\n    indicator.style.zIndex = '200';\r\n    indicator.style.pointerEvents = 'none';\r\n    indicator.style.animation = 'gradePopup 1s ease-out forwards';\r\n\r\n    // Set grade text and color\r\n    switch (grade) {\r\n      case 'SSS':\r\n        indicator.textContent = 'SSS';\r\n        indicator.style.color = '#ff0080';\r\n        indicator.style.textShadow = '0 0 1.875rem #ff0080, 0 0 3.75rem #ff69b4';\r\n        indicator.style.fontSize = '3.5rem';\r\n        indicator.style.animation = 'gradePopup 2s ease-out forwards, rainbow 2s infinite';\r\n        break;\r\n      case 'SS':\r\n        indicator.textContent = 'SS';\r\n        indicator.style.color = '#9932cc';\r\n        indicator.style.textShadow = '0 0 1.5625rem #9932cc, 0 0 3.125rem #8b00ff';\r\n        indicator.style.fontSize = '3.25rem';\r\n        indicator.style.animation = 'gradePopup 1.5s ease-out forwards, glow 1.5s infinite';\r\n        break;\r\n      case 'S':\r\n        indicator.textContent = 'S';\r\n        indicator.style.color = '#ff69b4';\r\n        indicator.style.textShadow = '0 0 1.25rem #ff69b4';\r\n        indicator.style.fontSize = '3rem';\r\n        break;\r\n      case 'A':\r\n        indicator.textContent = 'A';\r\n        indicator.style.color = '#ffd700';\r\n        indicator.style.textShadow = '0 0 1.25rem #ffd700';\r\n        break;\r\n      case 'B':\r\n        indicator.textContent = 'B';\r\n        indicator.style.color = '#00ff7f';\r\n        indicator.style.textShadow = '0 0 0.9375rem #00ff7f';\r\n        break;\r\n      case 'C':\r\n        indicator.textContent = 'C';\r\n        indicator.style.color = '#888888';\r\n        indicator.style.textShadow = '0 0 0.625rem #888888';\r\n        break;\r\n    }\r\n\r\n    // Add animation style if not exists\r\n    if (!document.getElementById('grade-animation-style')) {\r\n      const style = document.createElement('style');\r\n      style.id = 'grade-animation-style';\r\n      style.textContent = `\r\n        @keyframes gradePopup {\r\n          0% {\r\n            opacity: 0;\r\n            transform: translateX(-50%) translateY(0) scale(0.5);\r\n          }\r\n          50% {\r\n            opacity: 1;\r\n            transform: translateX(-50%) translateY(-1.25rem) scale(1.2);\r\n          }\r\n          100% {\r\n            opacity: 0;\r\n            transform: translateX(-50%) translateY(-2.5rem) scale(1);\r\n          }\r\n        }\r\n        \r\n        @keyframes rainbow {\r\n          0% { color: #ff0000; }\r\n          16% { color: #ff8000; }\r\n          32% { color: #ffff00; }\r\n          48% { color: #00ff00; }\r\n          64% { color: #0080ff; }\r\n          80% { color: #8000ff; }\r\n          100% { color: #ff0080; }\r\n        }\r\n        \r\n        @keyframes glow {\r\n          0%, 100% { \r\n            text-shadow: 0 0 1.5625rem #9932cc, 0 0 3.125rem #8b00ff;\r\n          }\r\n          50% { \r\n            text-shadow: 0 0 2.5rem #9932cc, 0 0 5rem #8b00ff, 0 0 7.5rem #ff00ff;\r\n          }\r\n        }\r\n      `;\r\n      document.head.appendChild(style);\r\n    }\r\n\r\n    this.container?.appendChild(indicator);\r\n\r\n    // Remove after animation\r\n    setTimeout(() => {\r\n      indicator.remove();\r\n    }, 1000);\r\n  }\r\n\r\n  private flipPiecesWithEffects(positions: number[], grade?: Grade): void {\r\n    if (!this.gameState) {return;}\r\n\r\n    const settings = this.getSettings();\r\n\r\n    if (settings.animations) {\r\n      // Sequential flipping with delays for dynamic effect\r\n      positions.forEach((pos, index) => {\r\n        setTimeout(() => {\r\n          this.gameState!.board[pos] = this.gameState!.currentPlayer;\r\n\r\n          const cell = document.querySelector(`[data-position=\"${pos}\"]`) as HTMLElement;\r\n          if (cell) {\r\n            // Create flip particle effect with grade-based colors\r\n            const rect = cell.getBoundingClientRect();\r\n            const containerRect = this.container!.getBoundingClientRect();\r\n            const x = rect.left + rect.width / 2 - containerRect.left;\r\n            const y = rect.top + rect.height / 2 - containerRect.top;\r\n\r\n            const color = this.gameState!.currentPlayer === BLACK ? '#000000' : '#ffffff';\r\n            this.particleSystem.createFlipEffect(x, y, color, grade);\r\n\r\n            const piece = cell.querySelector('.piece');\r\n            if (piece) {\r\n              piece.classList.add('flipping');\r\n              setTimeout(() => {\r\n                piece.className = `piece ${this.gameState!.currentPlayer === BLACK ? 'piece-black' : 'piece-white'}`;\r\n              }, 250);\r\n            }\r\n          }\r\n        }, index * 80); // 80ms delay between each flip for dynamic effect\r\n      });\r\n    } else {\r\n      // Immediate flipping when animations are disabled\r\n      positions.forEach(pos => {\r\n        this.gameState!.board[pos] = this.gameState!.currentPlayer;\r\n\r\n        const cell = document.querySelector(`[data-position=\"${pos}\"]`) as HTMLElement;\r\n        if (cell) {\r\n          const piece = cell.querySelector('.piece');\r\n          if (piece) {\r\n            piece.className = `piece ${this.gameState!.currentPlayer === BLACK ? 'piece-black' : 'piece-white'}`;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private flipPieces(positions: number[]): void {\r\n    if (!this.gameState) {return;}\r\n\r\n    const settings = this.getSettings();\r\n\r\n    positions.forEach(pos => {\r\n      this.gameState!.board[pos] = this.gameState!.currentPlayer;\r\n\r\n      const cell = document.querySelector(`[data-position=\"${pos}\"]`) as HTMLElement;\r\n      if (cell) {\r\n        const piece = cell.querySelector('.piece');\r\n        if (piece && settings.animations) {\r\n          piece.classList.add('flipping');\r\n          setTimeout(() => {\r\n            piece.className = `piece ${this.gameState!.currentPlayer === BLACK ? 'piece-black' : 'piece-white'}`;\r\n          }, 250);\r\n        } else if (piece) {\r\n          piece.className = `piece ${this.gameState!.currentPlayer === BLACK ? 'piece-black' : 'piece-white'}`;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private afterMove(): void {\r\n    if (!this.gameState) {return;}\r\n\r\n    // Update scores\r\n    this.updateScores();\r\n\r\n    // Switch player\r\n    this.gameState.currentPlayer = this.gameState.currentPlayer === BLACK ? WHITE : BLACK;\r\n\r\n    // Update valid moves for new player\r\n    this.updateValidMoves();\r\n\r\n    // 🔥 戰鬥系統增強：檢測連擊和特殊招式\r\n    const previousPlayer = this.gameState.currentPlayer === BLACK ? WHITE : BLACK;\r\n    const opponentCanMove = this.gameState.validMoves.size > 0;\r\n    const lastMove = this.gameState.moveHistory[this.gameState.moveHistory.length - 1];\r\n\r\n    if (lastMove) {\r\n      // 處理連擊 (當對手無法移動時)\r\n      this.comboSystem.processMove(\r\n        previousPlayer === BLACK ? 1 : 2, // 轉換為 PlayerColor enum 值\r\n        opponentCanMove,\r\n        lastMove.flipped.length,\r\n      );\r\n\r\n      // 檢測特殊招式\r\n      this.detectSpecialMoves(\r\n        lastMove.position,\r\n        lastMove.flipped, // 傳遞翻轉位置陣列而非長度\r\n        previousPlayer === BLACK ? this.gameState.blackScore : this.gameState.whiteScore,\r\n        previousPlayer === BLACK ? this.gameState.whiteScore : this.gameState.blackScore,\r\n      );\r\n    }\r\n\r\n    // Check for game over or pass\r\n    if (!this.checkGameStatus()) {\r\n      // Update display\r\n      this.updateDisplay();\r\n\r\n      // If it's AI's turn, make AI move\r\n      if (this.gameState.gameMode === 'pvc' && this.gameState.currentPlayer === WHITE) {\r\n        this.makeAIMove();\r\n      }\r\n    }\r\n\r\n    this.isProcessingMove = false;\r\n  }\r\n\r\n  private updateValidMoves(): void {\r\n    if (!this.gameState) {return;}\r\n\r\n    this.gameState.validMoves.clear();\r\n\r\n    for (let i = 0; i < 64; i++) {\r\n      if (this.gameState.board[i] === EMPTY) {\r\n        if (this.isValidMove(i, this.gameState.currentPlayer)) {\r\n          this.gameState.validMoves.add(i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private isValidMove(position: number, player: number): boolean {\r\n    if (!this.gameState || this.gameState.board[position] !== EMPTY) {\r\n      return false;\r\n    }\r\n\r\n    // Check all directions\r\n    for (const [dx, dy] of DIRECTIONS) {\r\n      if (this.checkDirection(position, player, dx || 0, dy || 0).length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private checkDirection(position: number, player: number, dx: number, dy: number): number[] {\r\n    if (!this.gameState) {return [];}\r\n\r\n    const flipped: number[] = [];\r\n    const row = Math.floor(position / 8);\r\n    const col = position % 8;\r\n    const opponent = player === BLACK ? WHITE : BLACK;\r\n\r\n    let r = row + dy;\r\n    let c = col + dx;\r\n\r\n    // Find opponent pieces\r\n    while (r >= 0 && r < 8 && c >= 0 && c < 8) {\r\n      const pos = r * 8 + c;\r\n\r\n      if (this.gameState.board[pos] === EMPTY) {\r\n        return []; // Empty cell, no valid line\r\n      } else if (this.gameState.board[pos] === opponent) {\r\n        flipped.push(pos);\r\n      } else {\r\n        // Found our piece\r\n        return flipped.length > 0 ? flipped : [];\r\n      }\r\n\r\n      r += dy;\r\n      c += dx;\r\n    }\r\n\r\n    return []; // Hit edge without finding our piece\r\n  }\r\n\r\n  private getFlippedPieces(position: number, player: number): number[] {\r\n    const allFlipped: number[] = [];\r\n\r\n    for (const [dx, dy] of DIRECTIONS) {\r\n      const flipped = this.checkDirection(position, player, dx, dy);\r\n      allFlipped.push(...flipped);\r\n    }\r\n\r\n    return allFlipped;\r\n  }\r\n\r\n  private calculateMoveMobility(position: number, player: number): { player: number; opponent: number } {\r\n    if (!this.gameState) {return { player: 0, opponent: 0 };}\r\n\r\n    // Create a temporary board with the move applied\r\n    const tempBoard = [...this.gameState.board];\r\n    const flippedPieces = this.getFlippedPieces(position, player);\r\n\r\n    // Apply the move\r\n    tempBoard[position] = player;\r\n    for (const pos of flippedPieces) {\r\n      tempBoard[pos] = player;\r\n    }\r\n\r\n    // Calculate valid moves for both players after this move\r\n    const opponent = player === BLACK ? WHITE : BLACK;\r\n\r\n    // Count opponent's valid moves after this move\r\n    let opponentMoves = 0;\r\n    for (let i = 0; i < 64; i++) {\r\n      if (tempBoard[i] === EMPTY) {\r\n        if (this.isValidMoveOnBoard(i, opponent, tempBoard)) {\r\n          opponentMoves++;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Count player's valid moves after this move (after opponent's turn)\r\n    let playerMoves = 0;\r\n    for (let i = 0; i < 64; i++) {\r\n      if (tempBoard[i] === EMPTY) {\r\n        if (this.isValidMoveOnBoard(i, player, tempBoard)) {\r\n          playerMoves++;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Return both player and opponent mobility\r\n    return { player: playerMoves, opponent: opponentMoves };\r\n  }\r\n\r\n  private isValidMoveOnBoard(position: number, player: number, board: number[]): boolean {\r\n    if (board[position] !== EMPTY) {\r\n      return false;\r\n    }\r\n\r\n    // Check all directions\r\n    for (const [dx, dy] of DIRECTIONS) {\r\n      if (this.checkDirectionOnBoard(position, player, dx || 0, dy || 0, board).length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private checkDirectionOnBoard(position: number, player: number, dx: number, dy: number, board: number[]): number[] {\r\n    const flipped: number[] = [];\r\n    const row = Math.floor(position / 8);\r\n    const col = position % 8;\r\n    const opponent = player === BLACK ? WHITE : BLACK;\r\n\r\n    let r = row + dy;\r\n    let c = col + dx;\r\n\r\n    // Find opponent pieces\r\n    while (r >= 0 && r < 8 && c >= 0 && c < 8) {\r\n      const pos = r * 8 + c;\r\n\r\n      if (board[pos] === EMPTY) {\r\n        return []; // Empty cell, no valid line\r\n      } else if (board[pos] === opponent) {\r\n        flipped.push(pos);\r\n      } else {\r\n        // Found our piece\r\n        return flipped.length > 0 ? flipped : [];\r\n      }\r\n\r\n      r += dy;\r\n      c += dx;\r\n    }\r\n\r\n    return []; // Hit edge without finding our piece\r\n  }\r\n\r\n  private updateScores(): void {\r\n    if (!this.gameState) {return;}\r\n\r\n    // Store old scores for animation\r\n    const oldBlackScore = this.gameState.blackScore;\r\n    const oldWhiteScore = this.gameState.whiteScore;\r\n\r\n    let black = 0;\r\n    let white = 0;\r\n\r\n    for (const piece of this.gameState.board) {\r\n      if (piece === BLACK) {black++;}\r\n      else if (piece === WHITE) {white++;}\r\n    }\r\n\r\n    this.gameState.blackScore = black;\r\n    this.gameState.whiteScore = white;\r\n\r\n    // Trigger shared health bar animations if scores changed\r\n    if (oldBlackScore !== black) {\r\n      this.animateSharedHealthChange('black', oldBlackScore, black);\r\n    }\r\n    if (oldWhiteScore !== white) {\r\n      this.animateSharedHealthChange('white', oldWhiteScore, white);\r\n    }\r\n  }\r\n\r\n  private checkGameStatus(): boolean {\r\n    if (!this.gameState) {return false;}\r\n\r\n    // No valid moves for current player\r\n    if (this.gameState.validMoves.size === 0) {\r\n      // Switch to other player\r\n      this.gameState.currentPlayer = this.gameState.currentPlayer === BLACK ? WHITE : BLACK;\r\n      this.updateValidMoves();\r\n\r\n      // Other player also has no moves - game over\r\n      if (this.gameState.validMoves.size === 0) {\r\n        this.gameOver();\r\n        return true;\r\n      } else {\r\n        // Pass turn\r\n        const settings = this.getSettings();\r\n        if (settings.autoPass) {\r\n          const color = this.gameState.currentPlayer === BLACK ? 'Black' : 'White';\r\n          this.showMessage(`No valid moves - passing to ${color}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private gameOver(): void {\r\n    if (!this.gameState) {return;}\r\n\r\n    this.gameState.isGameOver = true;\r\n\r\n    let winner: string;\r\n    let winnerColor: string;\r\n\r\n    if (this.gameState.blackScore > this.gameState.whiteScore) {\r\n      winner = t('game.blackWins');\r\n      winnerColor = '#000';\r\n    } else if (this.gameState.whiteScore > this.gameState.blackScore) {\r\n      winner = t('game.whiteWins');\r\n      winnerColor = '#fff';\r\n    } else {\r\n      winner = t('game.tie');\r\n      winnerColor = '#ffd700';\r\n    }\r\n\r\n    const modal = document.getElementById('game-over-modal');\r\n    if (modal) {\r\n      modal.style.display = 'block';\r\n      modal.className = 'game-over-modal';\r\n      modal.innerHTML = `\r\n        <h2 class=\"game-over-title\">🏆 ${t('game.gameOverTitle')}</h2>\r\n        <div class=\"final-scores\">\r\n          <p style=\"font-size: 2.25rem; color: ${winnerColor}; margin: 1.25rem 0;\">\r\n            ${winner}\r\n          </p>\r\n          <p>⚫ ${t('game.black')}: ${this.gameState.blackScore}</p>\r\n          <p>⚪ ${t('game.white')}: ${this.gameState.whiteScore}</p>\r\n          <p style=\"margin-top: 1.25rem; font-size: 1.125rem;\">\r\n            ${t('game.totalMoves')}: ${this.gameState.moveHistory.length}\r\n          </p>\r\n        </div>\r\n        <div class=\"modal-buttons\">\r\n          <button class=\"menu-button\" id=\"play-again\">${t('game.playAgain')}</button>\r\n          <button class=\"menu-button\" id=\"main-menu\">${t('game.mainMenu')}</button>\r\n        </div>\r\n      `;\r\n\r\n      document.getElementById('play-again')?.addEventListener('click', () => {\r\n        modal.style.display = 'none';\r\n        this.startNewGame(this.gameState!.gameMode, this.gameState!.aiDifficulty);\r\n      });\r\n\r\n      document.getElementById('main-menu')?.addEventListener('click', () => {\r\n        modal.style.display = 'none';\r\n        this.showMenu();\r\n      });\r\n    }\r\n  }\r\n\r\n  // Shared Health Bar Animation System\r\n  private animateSharedHealthChange(player: 'black' | 'white', oldValue: number, newValue: number): void {\r\n    const change = newValue - oldValue;\r\n    const sharedHealthBar = document.querySelector('.shared-health-bar');\r\n\r\n    // Add shake effect for big changes\r\n    if (Math.abs(change) >= 5 && sharedHealthBar) {\r\n      sharedHealthBar.classList.add('shake');\r\n      setTimeout(() => sharedHealthBar.classList.remove('shake'), 300);\r\n    }\r\n\r\n    // Show damage/healing numbers\r\n    if (change !== 0) {\r\n      this.showSharedDamageNumber(player, change);\r\n    }\r\n\r\n    // Update will be handled by updateSharedHealthBar in updateScores\r\n  }\r\n\r\n  private showSharedDamageNumber(player: 'black' | 'white', change: number): void {\r\n    const damageContainer = document.getElementById('damage-numbers');\r\n    const playerSection = document.querySelector(`.player-section.${player === 'black' ? 'left' : 'right'}`);\r\n\r\n    if (!damageContainer || !playerSection) {return;}\r\n\r\n    const damageElement = document.createElement('div');\r\n    damageElement.className = `damage-number ${change > 0 ? 'positive' : 'negative'}`;\r\n    damageElement.textContent = change > 0 ? `+${change}` : change.toString();\r\n\r\n    // Position the damage number above the player section\r\n    const playerRect = playerSection.getBoundingClientRect();\r\n    const containerRect = damageContainer.getBoundingClientRect();\r\n\r\n    damageElement.style.left = `${playerRect.left - containerRect.left + playerRect.width / 2}px`;\r\n    damageElement.style.top = `${playerRect.top - containerRect.top - 10}px`;\r\n    damageElement.style.transform = 'translateX(-50%)';\r\n\r\n    damageContainer.appendChild(damageElement);\r\n\r\n    // Remove the element after animation\r\n    setTimeout(() => {\r\n      if (damageElement.parentNode) {\r\n        damageElement.parentNode.removeChild(damageElement);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  // Legacy method for compatibility\r\n  private showDamageNumber(player: 'black' | 'white', change: number): void {\r\n    this.showSharedDamageNumber(player, change);\r\n  }\r\n\r\n  private updateSharedHealthBar(): void {\r\n    if (!this.gameState) {return;}\r\n\r\n    const blackFill = document.getElementById('black-fill');\r\n    const whiteFill = document.getElementById('white-fill');\r\n    const blackCount = document.getElementById('black-count');\r\n    const whiteCount = document.getElementById('white-count');\r\n    const turnIndicator = document.getElementById('current-turn-shared');\r\n\r\n    if (!blackFill || !whiteFill || !blackCount || !whiteCount || !turnIndicator) {return;}\r\n\r\n    const total = this.gameState.blackScore + this.gameState.whiteScore;\r\n    const blackPercentage = total > 0 ? (this.gameState.blackScore / total) * 100 : 50;\r\n    const whitePercentage = total > 0 ? (this.gameState.whiteScore / total) * 100 : 50;\r\n\r\n    // Update shared health bar fills\r\n    blackFill.style.width = `${blackPercentage}%`;\r\n    whiteFill.style.width = `${whitePercentage}%`;\r\n\r\n    // Update piece counts\r\n    blackCount.textContent = this.gameState.blackScore.toString();\r\n    whiteCount.textContent = this.gameState.whiteScore.toString();\r\n\r\n    // Update turn indicator\r\n    const currentPlayerName = this.gameState.currentPlayer === BLACK ? t('game.black') : t('game.white');\r\n    turnIndicator.innerHTML = `<span>${currentPlayerName}</span>`;\r\n\r\n    // Add special effects\r\n    const blackFillElement = blackFill as HTMLElement;\r\n    const whiteFillElement = whiteFill as HTMLElement;\r\n\r\n    // Critical state (less than 15% of total pieces)\r\n    if (blackPercentage < 15) {\r\n      blackFillElement.classList.add('critical');\r\n    } else {\r\n      blackFillElement.classList.remove('critical');\r\n    }\r\n\r\n    if (whitePercentage < 15) {\r\n      whiteFillElement.classList.add('critical');\r\n    } else {\r\n      whiteFillElement.classList.remove('critical');\r\n    }\r\n\r\n    // Dominant state (more than 75% of total pieces)\r\n    if (blackPercentage > 75) {\r\n      blackFillElement.classList.add('dominant');\r\n      whiteFillElement.classList.remove('dominant');\r\n    } else if (whitePercentage > 75) {\r\n      whiteFillElement.classList.add('dominant');\r\n      blackFillElement.classList.remove('dominant');\r\n    } else {\r\n      blackFillElement.classList.remove('dominant');\r\n      whiteFillElement.classList.remove('dominant');\r\n    }\r\n\r\n    // Update VS divider position\r\n    this.updateVSDividerPosition(blackPercentage);\r\n\r\n    // Special effects for dramatic moments\r\n    this.triggerSpecialHealthEffects(blackPercentage, whitePercentage);\r\n  }\r\n\r\n  private updateVSDividerPosition(blackPercentage: number): void {\r\n    const vsDivider = document.getElementById('vs-divider');\r\n    if (!vsDivider) return;\r\n\r\n    // Position VS divider at the boundary between black and white areas\r\n    vsDivider.style.left = `${blackPercentage}%`;\r\n  }\r\n\r\n  private triggerSpecialHealthEffects(blackPercentage: number, whitePercentage: number): void {\r\n    const sharedHealthBar = document.querySelector('.shared-health-bar');\r\n    const blackFill = document.getElementById('black-fill');\r\n    const whiteFill = document.getElementById('white-fill');\r\n\r\n    if (!sharedHealthBar || !blackFill || !whiteFill) return;\r\n\r\n    // Remove all special effect classes first\r\n    sharedHealthBar.classList.remove('balanced', 'dramatic-shift');\r\n    blackFill.classList.remove('pulsing');\r\n    whiteFill.classList.remove('pulsing');\r\n\r\n    // Balanced state (45%-55% range)\r\n    if (blackPercentage >= 45 && blackPercentage <= 55) {\r\n      sharedHealthBar.classList.add('balanced');\r\n    }\r\n\r\n    // Dramatic shift detection (will be called when percentages change rapidly)\r\n    const shift = Math.abs(blackPercentage - 50);\r\n    if (shift > 35) {\r\n      sharedHealthBar.classList.add('dramatic-shift');\r\n\r\n      // Add pulsing effect to the dominant side\r\n      if (blackPercentage > 65) {\r\n        blackFill.classList.add('pulsing');\r\n      } else if (whitePercentage > 65) {\r\n        whiteFill.classList.add('pulsing');\r\n      }\r\n\r\n      // Remove dramatic shift effect after animation\r\n      setTimeout(() => {\r\n        sharedHealthBar.classList.remove('dramatic-shift');\r\n      }, 1500);\r\n    }\r\n  }\r\n\r\n  private updateDisplay(): void {\r\n    if (!this.gameState) {return;}\r\n\r\n    // Update shared health bar instead of old score display\r\n    this.updateSharedHealthBar();\r\n\r\n    // Update legacy elements (still needed for some old screens)\r\n    const blackScore = document.getElementById('black-score');\r\n    const whiteScore = document.getElementById('white-score');\r\n    const currentTurn = document.getElementById('current-turn');\r\n\r\n    if (blackScore) {blackScore.textContent = `⚫ ${t('game.black')}: ${this.gameState.blackScore}`;}\r\n    if (whiteScore) {whiteScore.textContent = `⚪ ${t('game.white')}: ${this.gameState.whiteScore}`;}\r\n\r\n    if (currentTurn) {\r\n      const currentColor = this.gameState.currentPlayer === BLACK ? t('game.black') : t('game.white');\r\n      currentTurn.innerHTML = `${t('game.current')}: <span style=\"color: ${this.gameState.currentPlayer === BLACK ? '#000' : '#fff'};\">${currentColor}</span>`;\r\n    }\r\n\r\n    const turnIndicator = document.getElementById('turn-indicator');\r\n    if (turnIndicator) {\r\n      const color = this.gameState.currentPlayer === BLACK ? '#000' : '#fff';\r\n      const currentColor = this.gameState.currentPlayer === BLACK ? t('game.black') : t('game.white');\r\n      turnIndicator.innerHTML = `${t('game.currentTurn')} <span style=\"color: ${color}; font-weight: bold;\">${currentColor}</span>`;\r\n    }\r\n\r\n    // Render board\r\n    this.renderBoard();\r\n  }\r\n\r\n  private showMessage(message: string): void {\r\n    const aiStatus = document.getElementById('ai-status');\r\n    if (aiStatus) {\r\n      aiStatus.textContent = message;\r\n      setTimeout(() => {\r\n        aiStatus.textContent = '';\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  private triggerScreenShake(grade: Grade): void {\r\n    if (!this.container) {return;}\r\n\r\n    const settings = this.getSettings();\r\n    if (!settings.animations) {return;} // Skip if animations disabled\r\n\r\n    let intensity = 0;\r\n    let duration = 0;\r\n\r\n    switch (grade) {\r\n      case 'SSS':\r\n        intensity = 8;  // 從20減少至8\r\n        duration = 600;  // 從1200減少至600\r\n        console.log('🌍 REALITY SHAKE - LEGENDARY!!!');\r\n        break;\r\n      case 'SS':\r\n        intensity = 7;  // 從16減少至7\r\n        duration = 550;  // 從1000減少至550\r\n        console.log('🌪️ WORLD SHAKE - MYTHICAL!!');\r\n        break;\r\n      case 'S':\r\n        intensity = 12;\r\n        duration = 800;\r\n        console.log('💥 SCREEN SHAKE - EPIC!');\r\n        break;\r\n      case 'A':\r\n        intensity = 6;\r\n        duration = 500;\r\n        console.log('📳 Screen shake - Great!');\r\n        break;\r\n      case 'B':\r\n        intensity = 3;\r\n        duration = 300;\r\n        console.log('📱 Screen shake - Good!');\r\n        break;\r\n      case 'C':\r\n        // No shake for C grade\r\n        return;\r\n    }\r\n\r\n    // Apply shake animation\r\n    const app = this.container.querySelector('.super-reversi-app') as HTMLElement;\r\n    if (app) {\r\n      app.style.animation = `shake ${duration}ms ease-in-out`;\r\n\r\n      // Add shake keyframes if not exists\r\n      if (!document.getElementById('shake-animation')) {\r\n        const style = document.createElement('style');\r\n        style.id = 'shake-animation';\r\n        style.textContent = `\r\n          @keyframes shake {\r\n            0%, 100% { transform: translate(0, 0) rotate(0deg); }\r\n            10% { transform: translate(-${intensity}px, -${intensity/2}px) rotate(-1deg); }\r\n            20% { transform: translate(${intensity}px, -${intensity}px) rotate(1deg); }\r\n            30% { transform: translate(-${intensity}px, ${intensity/2}px) rotate(0deg); }\r\n            40% { transform: translate(${intensity}px, ${intensity}px) rotate(1deg); }\r\n            50% { transform: translate(-${intensity/2}px, -${intensity}px) rotate(-1deg); }\r\n            60% { transform: translate(${intensity/2}px, ${intensity}px) rotate(0deg); }\r\n            70% { transform: translate(-${intensity/2}px, ${intensity/2}px) rotate(-1deg); }\r\n            80% { transform: translate(${intensity/2}px, -${intensity/2}px) rotate(1deg); }\r\n            90% { transform: translate(-${intensity/4}px, ${intensity/4}px) rotate(0deg); }\r\n          }\r\n        `;\r\n        document.head.appendChild(style);\r\n      }\r\n\r\n      // Remove animation after completion\r\n      setTimeout(() => {\r\n        app.style.animation = '';\r\n      }, duration);\r\n    }\r\n  }\r\n\r\n  // ===== AI LOGIC =====\r\n\r\n  private makeAIMove(): void {\r\n    if (!this.gameState || this.gameState.validMoves.size === 0) {return;}\r\n\r\n    this.aiThinking = true;\r\n    const aiStatus = document.getElementById('ai-status');\r\n    if (aiStatus) {\r\n      aiStatus.innerHTML = '<span class=\"ai-thinking\">AI is thinking...</span>';\r\n    }\r\n\r\n    // Simulate thinking time\r\n    setTimeout(() => {\r\n      const move = this.selectAIMove();\r\n      if (move !== -1) {\r\n        this.makeMove(move);\r\n      }\r\n\r\n      if (aiStatus) {\r\n        aiStatus.textContent = '';\r\n      }\r\n      this.aiThinking = false;\r\n    }, 800);\r\n  }\r\n\r\n  private selectAIMove(): number {\r\n    if (!this.gameState) {return -1;}\r\n\r\n    const moves = Array.from(this.gameState.validMoves);\r\n    if (moves.length === 0) {return -1;}\r\n\r\n    switch (this.gameState.aiDifficulty) {\r\n      case 'easy':\r\n        return this.selectRandomMove(moves);\r\n\r\n      case 'medium':\r\n        return this.selectGreedyMove(moves);\r\n\r\n      case 'hard':\r\n        return this.selectStrategicMove(moves);\r\n\r\n      default:\r\n        return moves[0] ?? 0;\r\n    }\r\n  }\r\n\r\n  private selectRandomMove(moves: number[]): number {\r\n    return moves[Math.floor(Math.random() * moves.length)] ?? 0;\r\n  }\r\n\r\n  private selectGreedyMove(moves: number[]): number {\r\n    if (!this.gameState) {return moves[0] ?? 0;}\r\n\r\n    let bestMove = moves[0] ?? 0;\r\n    let maxFlips = 0;\r\n\r\n    for (const move of moves) {\r\n      const flips = this.getFlippedPieces(move, WHITE).length;\r\n      if (flips > maxFlips) {\r\n        maxFlips = flips;\r\n        bestMove = move;\r\n      }\r\n    }\r\n\r\n    return bestMove;\r\n  }\r\n\r\n  private selectStrategicMove(moves: number[]): number {\r\n    if (!this.gameState) {return moves[0] ?? 0;}\r\n\r\n    // Position weights for strategic play\r\n    const weights = [\r\n      120, -20,  20,   5,   5,  20, -20, 120,\r\n      -20, -40,  -5,  -5,  -5,  -5, -40, -20,\r\n      20,  -5,  15,   3,   3,  15,  -5,  20,\r\n      5,  -5,   3,   3,   3,   3,  -5,   5,\r\n      5,  -5,   3,   3,   3,   3,  -5,   5,\r\n      20,  -5,  15,   3,   3,  15,  -5,  20,\r\n      -20, -40,  -5,  -5,  -5,  -5, -40, -20,\r\n      120, -20,  20,   5,   5,  20, -20, 120,\r\n    ];\r\n\r\n    let bestMove = moves[0] ?? 0;\r\n    let bestScore = -1000;\r\n\r\n    for (const move of moves) {\r\n      const flips = this.getFlippedPieces(move, WHITE).length;\r\n      const positionScore = weights[move] ?? 0;\r\n      const totalScore = positionScore + flips * 10;\r\n\r\n      if (totalScore > bestScore) {\r\n        bestScore = totalScore;\r\n        bestMove = move;\r\n      }\r\n    }\r\n\r\n    return bestMove;\r\n  }\r\n\r\n  // Helper functions for special effects detection\r\n  private isEdgePosition(position: number): boolean {\r\n    const row = Math.floor(position / 8);\r\n    const col = position % 8;\r\n    return (row === 0 || row === 7 || col === 0 || col === 7) &&\r\n           !(position === 0 || position === 7 || position === 56 || position === 63);\r\n  }\r\n\r\n  private isChainMove(flippedPositions: number[]): boolean {\r\n    if (!this.gameState || this.gameState.moveHistory.length === 0) {return false;}\r\n\r\n    // Check if this move flips pieces that were recently placed/flipped\r\n    const lastMove = this.gameState.moveHistory[this.gameState.moveHistory.length - 1];\r\n\r\n    // If last move flipped a lot and this move also flips a lot, it's likely a chain\r\n    return (lastMove as any)?.flipped?.length >= 3 && flippedPositions.length >= 3;\r\n  }\r\n\r\n  private isComebackMove(): boolean {\r\n    if (!this.gameState) {return false;}\r\n\r\n    const scoreDiff = this.gameState.currentPlayer === BLACK ?\r\n      this.gameState.blackScore - this.gameState.whiteScore :\r\n      this.gameState.whiteScore - this.gameState.blackScore;\r\n\r\n    // Comeback if currently losing by 5+ pieces\r\n    return scoreDiff <= -5;\r\n  }\r\n\r\n  private isDominationMove(): boolean {\r\n    if (!this.gameState) {return false;}\r\n\r\n    const scoreDiff = this.gameState.currentPlayer === BLACK ?\r\n      this.gameState.blackScore - this.gameState.whiteScore :\r\n      this.gameState.whiteScore - this.gameState.blackScore;\r\n\r\n    // Domination if currently winning by 10+ pieces\r\n    return scoreDiff >= 10;\r\n  }\r\n\r\n  // Simple Modal Methods\r\n  private showSimpleConfirm(message: string, title?: string): Promise<boolean> {\r\n    return new Promise((resolve) => {\r\n      const modal = document.getElementById('simple-modal');\r\n      const modalTitle = document.getElementById('modal-title');\r\n      const modalMessage = document.getElementById('modal-message');\r\n      const confirmBtn = document.getElementById('modal-confirm');\r\n      const cancelBtn = document.getElementById('modal-cancel');\r\n\r\n      if (!modal || !modalTitle || !modalMessage || !confirmBtn || !cancelBtn) {\r\n        // Fallback to native confirm\r\n        resolve(confirm(message));\r\n        return;\r\n      }\r\n\r\n      // Set modal content with i18n support\r\n      modalTitle.textContent = title || t('modal.confirm.title');\r\n      modalMessage.textContent = message;\r\n\r\n      // Update button texts with current language\r\n      confirmBtn.textContent = t('modal.confirm');\r\n      cancelBtn.textContent = t('modal.cancel');\r\n\r\n      // Show modal\r\n      modal.style.display = 'flex';\r\n\r\n      // Handle confirm\r\n      const handleConfirm = () => {\r\n        modal.style.display = 'none';\r\n        confirmBtn.removeEventListener('click', handleConfirm);\r\n        cancelBtn.removeEventListener('click', handleCancel);\r\n        resolve(true);\r\n      };\r\n\r\n      // Handle cancel\r\n      const handleCancel = () => {\r\n        modal.style.display = 'none';\r\n        confirmBtn.removeEventListener('click', handleConfirm);\r\n        cancelBtn.removeEventListener('click', handleCancel);\r\n        resolve(false);\r\n      };\r\n\r\n      // Add event listeners\r\n      confirmBtn.addEventListener('click', handleConfirm);\r\n      cancelBtn.addEventListener('click', handleCancel);\r\n\r\n      // Close on backdrop click\r\n      modal.addEventListener('click', (e) => {\r\n        if (e.target === modal) {\r\n          handleCancel();\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n// Initialize application\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  console.log('DOM loaded - initializing Super Reversi');\r\n  const container = document.getElementById('game-container');\r\n\r\n  if (container) {\r\n    try {\r\n      const game = new SuperReversiGame();\r\n      await game.initialize(container);\r\n\r\n      // Store globally for debugging\r\n      (window as any).superReversiGame = game;\r\n\r\n      console.log('🎮 Game ready to play!');\r\n    } catch (error) {\r\n      console.error('Failed to initialize:', error);\r\n      container.innerHTML = `\r\n        <div style=\"padding: 1.25rem; color: red;\">\r\n          <h2>Error Loading Game</h2>\r\n          <p>${error}</p>\r\n        </div>\r\n      `;\r\n    }\r\n  } else {\r\n    console.error('Container not found!');\r\n  }\r\n});\r\n\r\nexport default SuperReversiGame;"],"names":["PARTICLE_PRESETS","getPresetForGrade","grade","blendPresets","preset1","preset2","ratio","config1","config2","LotusePetal","config","deltaTime","ctx","alpha","gradient","GreenSwordBeam","GreenLotusEffect","x","y","targetPositions","petal","sword","i","angle","target","variation","SimplifiedTourbillon","baseRadius","rotation","radius","outerGradient","midGradient","ring","ringRadius","teethCount","time","outerBalanceGradient","innerBalanceGradient","weightX","weightY","centerGradient","UnlimitedBladeWorksEffect","THUNDER_THEME","ElectricSpark","k","ShockwaveRing","progress","FractalLightningGenerator","start","end","depth","displacement","branchProbability","points","d","a","b","midX","midY","dx","dy","length","perpX","perpY","offset","branches","point","nextPoint","dirX","dirY","branchEnd","bolt","baseWidth","branch","firstPoint","ThunderBlade","targetY","effectiveAlpha","topY","bottomY","gradient1","radialGradient","DivineSwordThunderEffect","anyBladeArrived","blade","spark","wave","count","targetBlade","startX","startY","fadeInTime","fadeOutTime","shakeX","shakeY","NineFinaleEffect","canvas","targetIndex","meteorsPerTarget","m","spawnAngle","spawnDistance","sx","sy","distance","gravity","speed","gravityCompensation","adjustedVy","sparkCount","meteor","targetDx","targetDy","targetDistance","homingVx","homingVy","indicator","age","fadeIn","fadeOut","current","next","width","life","pulse","size","IceSpearEffect","glowGradient","spearsPerTarget","totalDistance","extraSpears","randomTarget","spear","distanceToTarget","shard","scale","FlySword","prev","curr","trailAlpha","ParticleSystem","container","rect","enabled","animate","p","effect","outerRadius","innerRadius","flippedCount","position","specialEffects","isCorner","row","col","isEdge","score","flippedPositions","presetType","preset","flipDirections","intensityMultiplier","particleCount","sourceX","sourceY","_","pos","targets","delay","actualCount","spawnRadius","spawnX","spawnY","index","total","colors","color","directionIndex","direction","baseAngle","spreadAngle","spreadRadius","goldenSwordConfig","swordTargets","swordCount","flameSwordConfig","purpleColors","j","wobble","frostSwordConfig","blueColors","flipDir","spread","finalAngle","directions","greenColors","greenLotus","ubwEffect","thunderEffect","finaleEffect","iceSpearEffect","grayColors","isBlack","gradeColors","intensity","primaryColor","accentColors","burstCount","ringCount","particlesPerRing","castleColors","wall","brick","phoenixColors","waveColors","particle","royalColors","jewel","lightningColors","segment","textElement","currentLanguage","translations","enTranslations","zhHantTranslations","zhHansTranslations","t","key","params","translation","_match","setLanguage","lang","applyTranslations","root","el","COMBO_LEVELS","ComboSystem","player","opponentCanMove","moveScore","event","reason","baseEffect","intensityBonus","combos","e","totalCombos","averageLength","sum","combo","distribution","comboType","handler","text","SPECIAL_MOVE_CONDITIONS","SpecialMoveDetector","playerScore","opponentScore","moveNumber","totalMoves","triggeredMoves","flipCount","scoreDiff","moveType","condition","min","max","type","timing","special","context","directionCount","dr","dc","found","r","c","EMPTY","BLACK","WHITE","DIRECTIONS","SuperReversiGame","comboEvent","settings","headerBackBtn","confirmed","centerX","centerY","countElement","multiplierElement","currentScore","specialMoves","title","titleElement","subtitleElement","subtitle","style","screenContainer","header","sharedHealthBarContainer","blackScore","whiteScore","currentTurn","selectedDifficulty","diffButtons","diffDesc","descriptions","btn","mode","aiDifficulty","board","modeText","cell","mobilityMap","mobility","piece","mobilityIndicator","difference","lastMove","stored","toFlip","containerRect","flippedPixelPositions","flippedCell","flippedRect","flipDuration","positions","previousPlayer","flipped","opponent","allFlipped","tempBoard","flippedPieces","opponentMoves","playerMoves","oldBlackScore","oldWhiteScore","black","white","winner","winnerColor","modal","oldValue","newValue","change","sharedHealthBar","damageContainer","playerSection","damageElement","playerRect","blackFill","whiteFill","blackCount","whiteCount","turnIndicator","blackPercentage","whitePercentage","currentPlayerName","blackFillElement","whiteFillElement","vsDivider","currentColor","message","aiStatus","duration","app","move","moves","bestMove","maxFlips","flips","weights","bestScore","totalScore","resolve","modalTitle","modalMessage","confirmBtn","cancelBtn","handleConfirm","handleCancel","game","error"],"mappings":"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AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;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"}